ARM GAS  /tmp/ccCZwBwi.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f1xx_hal_can.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.HAL_CAN_MspInit,"ax",%progbits
  18              		.align	1
  19              		.weak	HAL_CAN_MspInit
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	HAL_CAN_MspInit:
  25              	.LVL0:
  26              	.LFB67:
  27              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @file    stm32f1xx_hal_can.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief   CAN HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          This file provides firmware functions to manage the following
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          functionalities of the Controller Area Network (CAN) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Configuration functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Control functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Interrupts management
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Callbacks functions
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           + Peripheral State and Error functions
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   @verbatim
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                         ##### How to use this driver #####
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Initialize the CAN low level resources by implementing the
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_MspInit():
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          (++) Enable the CAN interface clock using __HAL_RCC_CANx_CLK_ENABLE()
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          (++) Configure CAN pins
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              (+++) Enable the clock for the CAN GPIOs
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              (+++) Configure CAN pins as alternate function open-drain
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****          (++) In case of using interrupts (e.g. HAL_CAN_ActivateNotification())
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              (+++) Configure the CAN interrupt priority using
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                    HAL_NVIC_SetPriority()
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              (+++) Enable the CAN IRQ handler using HAL_NVIC_EnableIRQ()
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****              (+++) In CAN IRQ handler, call HAL_CAN_IRQHandler()
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 2


  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Initialize the CAN peripheral using HAL_CAN_Init() function. This
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           function resorts to HAL_CAN_MspInit() for low-level initialization.
  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Configure the reception filters using the following configuration
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           functions:
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) HAL_CAN_ConfigFilter()
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Start the CAN module using HAL_CAN_Start() function. At this level
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           the node is active on the bus: it receive messages, and can send
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           messages.
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) To manage messages transmission, the following Tx control functions
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           can be used:
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) HAL_CAN_AddTxMessage() to request transmission of a new
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  message.
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) HAL_CAN_AbortTxRequest() to abort transmission of a pending
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  message.
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) HAL_CAN_GetTxMailboxesFreeLevel() to get the number of free Tx
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  mailboxes.
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) HAL_CAN_IsTxMessagePending() to check if a message is pending
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  in a Tx mailbox.
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) HAL_CAN_GetTxTimestamp() to get the timestamp of Tx message
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  sent, if time triggered communication mode is enabled.
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) When a message is received into the CAN Rx FIFOs, it can be retrieved
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           using the HAL_CAN_GetRxMessage() function. The function
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_GetRxFifoFillLevel() allows to know how many Rx message are
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           stored in the Rx Fifo.
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Calling the HAL_CAN_Stop() function stops the CAN module.
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) The deinitialization is achieved with HAL_CAN_DeInit() function.
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       *** Polling mode operation ***
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       ==============================
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Reception:
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Monitor reception of message using HAL_CAN_GetRxFifoFillLevel()
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  until at least one message is received.
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Then get the message using HAL_CAN_GetRxMessage().
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Transmission:
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Monitor the Tx mailboxes availability until at least one Tx
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  mailbox is free, using HAL_CAN_GetTxMailboxesFreeLevel().
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Then request transmission of a message using
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  HAL_CAN_AddTxMessage().
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       *** Interrupt mode operation ***
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       ================================
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Notifications are activated using HAL_CAN_ActivateNotification()
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           function. Then, the process can be controlled through the
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           available user callbacks: HAL_CAN_xxxCallback(), using same APIs
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_GetRxMessage() and HAL_CAN_AddTxMessage().
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 3


  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Notifications can be deactivated using
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_DeactivateNotification() function.
  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) Special care should be taken for CAN_IT_RX_FIFO0_MSG_PENDING and
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           CAN_IT_RX_FIFO1_MSG_PENDING notifications. These notifications trig
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           the callbacks HAL_CAN_RxFIFO0MsgPendingCallback() and
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_RxFIFO1MsgPendingCallback(). User has two possible options
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           here.
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Directly get the Rx message in the callback, using
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  HAL_CAN_GetRxMessage().
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Or deactivate the notification in the callback without
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  getting the Rx message. The Rx message can then be got later
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  using HAL_CAN_GetRxMessage(). Once the Rx message have been
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  read, the notification can be activated again.
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       *** Sleep mode ***
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       ==================
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) The CAN peripheral can be put in sleep mode (low power), using
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_RequestSleep(). The sleep mode will be entered as soon as the
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           current CAN activity (transmission or reception of a CAN frame) will
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           be completed.
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) A notification can be activated to be informed when the sleep mode
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           will be entered.
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) It can be checked if the sleep mode is entered using
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_IsSleepActive().
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           Note that the CAN state (accessible from the API HAL_CAN_GetState())
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           is HAL_CAN_STATE_SLEEP_PENDING as soon as the sleep mode request is
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           submitted (the sleep mode is not yet entered), and become
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_STATE_SLEEP_ACTIVE when the sleep mode is effective.
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (#) The wake-up from sleep mode can be trigged by two ways:
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) Using HAL_CAN_WakeUp(). When returning from this function,
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  the sleep mode is exited (if return status is HAL_OK).
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             (++) When a start of Rx CAN frame is detected by the CAN peripheral,
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                  if automatic wake up mode is enabled.
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *** Callback registration ***
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   =============================================
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   The compilation define  USE_HAL_CAN_REGISTER_CALLBACKS when set to 1
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   allows the user to configure dynamically the driver callbacks.
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   Use Function @ref HAL_CAN_RegisterCallback() to register an interrupt callback.
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   Function @ref HAL_CAN_RegisterCallback() allows to register following callbacks:
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
ARM GAS  /tmp/ccCZwBwi.s 			page 4


 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   This function takes as parameters the HAL peripheral handle, the Callback ID
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   and a pointer to the user callback function.
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   Use function @ref HAL_CAN_UnRegisterCallback() to reset a callback to the default
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   weak function.
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   @ref HAL_CAN_UnRegisterCallback takes as parameters the HAL peripheral handle,
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   and the Callback ID.
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   This function allows to reset following callbacks:
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox0CompleteCallback   : Tx Mailbox 0 Complete Callback.
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox1CompleteCallback   : Tx Mailbox 1 Complete Callback.
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox2CompleteCallback   : Tx Mailbox 2 Complete Callback.
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox0AbortCallback      : Tx Mailbox 0 Abort Callback.
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox1AbortCallback      : Tx Mailbox 1 Abort Callback.
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) TxMailbox2AbortCallback      : Tx Mailbox 2 Abort Callback.
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo0MsgPendingCallback    : Rx Fifo 0 Message Pending Callback.
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo0FullCallback          : Rx Fifo 0 Full Callback.
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo1MsgPendingCallback    : Rx Fifo 1 Message Pending Callback.
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) RxFifo1FullCallback          : Rx Fifo 1 Full Callback.
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) SleepCallback                : Sleep Callback.
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) WakeUpFromRxMsgCallback      : Wake Up From Rx Message Callback.
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) ErrorCallback                : Error Callback.
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) MspInitCallback              : CAN MspInit.
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     (+) MspDeInitCallback            : CAN MspDeInit.
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   By default, after the @ref HAL_CAN_Init() and when the state is HAL_CAN_STATE_RESET,
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   all callbacks are set to the corresponding weak functions:
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   example @ref HAL_CAN_ErrorCallback().
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   Exception done for MspInit and MspDeInit functions that are
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   reset to the legacy weak function in the @ref HAL_CAN_Init()/ @ref HAL_CAN_DeInit() only when
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   these callbacks are null (not registered beforehand).
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if not, MspInit or MspDeInit are not null, the @ref HAL_CAN_Init()/ @ref HAL_CAN_DeInit()
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   keep and use the user MspInit/MspDeInit callbacks (registered beforehand)
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   Callbacks can be registered/unregistered in HAL_CAN_STATE_READY state only.
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   Exception done MspInit/MspDeInit that can be registered/unregistered
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   in HAL_CAN_STATE_READY or HAL_CAN_STATE_RESET state,
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   thus registered (user) MspInit/DeInit callbacks can be used during the Init/DeInit.
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   In that case first register the MspInit/MspDeInit user callbacks
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   using @ref HAL_CAN_RegisterCallback() before calling @ref HAL_CAN_DeInit()
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   or @ref HAL_CAN_Init() function.
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   When The compilation define USE_HAL_CAN_REGISTER_CALLBACKS is set to 0 or
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   not defined, the callback registration feature is not available and all callbacks
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   are set to the corresponding weak functions.
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   @endverbatim
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @attention
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * All rights reserved.</center></h2>
ARM GAS  /tmp/ccCZwBwi.s 			page 5


 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * This software component is licensed by ST under BSD 3-Clause license,
 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * the "License"; You may not use this file except in compliance with the
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * License. You may obtain a copy of the License at:
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *                        opensource.org/licenses/BSD-3-Clause
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ******************************************************************************
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Includes ------------------------------------------------------------------*/
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #include "stm32f1xx_hal.h"
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @addtogroup STM32F1xx_HAL_Driver
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if defined(CAN1)
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN CAN
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief CAN driver modules
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #ifdef HAL_CAN_MODULE_ENABLED
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #ifdef HAL_CAN_LEGACY_MODULE_ENABLED
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   #error "The CAN driver cannot be used with its legacy, Please enable only one CAN module at once"
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private typedef -----------------------------------------------------------*/
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private define ------------------------------------------------------------*/
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Private_Constants CAN Private Constants
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #define CAN_TIMEOUT_VALUE 10U
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private macro -------------------------------------------------------------*/
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private variables ---------------------------------------------------------*/
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Private function prototypes -----------------------------------------------*/
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /* Exported functions --------------------------------------------------------*/
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions CAN Exported Functions
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group1 Initialization and de-initialization functions
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief    Initialization and Configuration functions
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****               ##### Initialization and de-initialization functions #####
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_Init                       : Initialize and configure the CAN.
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_DeInit                     : De-initialize the CAN.
ARM GAS  /tmp/ccCZwBwi.s 			page 6


 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_MspInit                    : Initialize the CAN MSP.
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_MspDeInit                  : DeInitialize the CAN MSP.
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initializes the CAN peripheral according to the specified
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         parameters in the CAN_InitStruct.
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Init(CAN_HandleTypeDef *hcan)
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan == NULL)
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Reset callbacks to legacy functions */
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo0MsgPendingCallback  =  HAL_CAN_RxFifo0MsgPendingCallback;  /* Legacy weak RxFifo0M
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (hcan->MspInitCallback == NULL)
ARM GAS  /tmp/ccCZwBwi.s 			page 7


 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->MspInitCallback = HAL_CAN_MspInit; /* Legacy weak MspInit */
 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->MspInitCallback(hcan);
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_RESET)
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Init the low level hardware: CLOCK, NVIC */
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     HAL_CAN_MspInit(hcan);
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Exit from sleep mode */
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get tick */
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check Sleep mode leave acknowledge */
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Update error code */
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Change CAN state */
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_ERROR;
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Request initialisation */
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Get tick */
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   tickstart = HAL_GetTick();
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Wait initialisation acknowledge */
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Update error code */
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Change CAN state */
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->State = HAL_CAN_STATE_ERROR;
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_ERROR;
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
ARM GAS  /tmp/ccCZwBwi.s 			page 8


 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the time triggered communication mode */
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->Init.TimeTriggeredMode == ENABLE)
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TTCM);
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the automatic bus-off management */
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->Init.AutoBusOff == ENABLE)
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_ABOM);
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the automatic wake-up mode */
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->Init.AutoWakeUp == ENABLE)
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_AWUM);
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the automatic retransmission */
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->Init.AutoRetransmission == ENABLE)
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_NART);
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the receive FIFO locked mode */
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->Init.ReceiveFifoLocked == ENABLE)
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_RFLM);
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the transmit FIFO priority */
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->Init.TransmitFifoPriority == ENABLE)
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
ARM GAS  /tmp/ccCZwBwi.s 			page 9


 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_TXFP);
 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Set the bit timing register */
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   WRITE_REG(hcan->Instance->BTR, (uint32_t)(hcan->Init.Mode           |
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                             hcan->Init.TimeSeg1       |
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                             hcan->Init.TimeSeg2       |
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                             (hcan->Init.Prescaler - 1U)));
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Initialize the error code */
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Initialize the CAN state */
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_READY;
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Deinitializes the CAN peripheral registers to their default
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         reset values.
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeInit(CAN_HandleTypeDef *hcan)
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan == NULL)
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_ALL_INSTANCE(hcan->Instance));
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Stop the CAN module */
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   (void)HAL_CAN_Stop(hcan);
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->MspDeInitCallback == NULL)
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->MspDeInitCallback = HAL_CAN_MspDeInit; /* Legacy weak MspDeInit */
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->MspDeInitCallback(hcan);
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* DeInit the low level hardware: CLOCK, NVIC */
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_MspDeInit(hcan);
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* (USE_HAL_CAN_REGISTER_CALLBACKS) */
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Reset the CAN peripheral */
ARM GAS  /tmp/ccCZwBwi.s 			page 10


 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   SET_BIT(hcan->Instance->MCR, CAN_MCR_RESET);
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Reset the CAN ErrorCode */
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->ErrorCode = HAL_CAN_ERROR_NONE;
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Change CAN state */
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   hcan->State = HAL_CAN_STATE_RESET;
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return HAL_OK;
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Initializes the CAN MSP.
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_MspInit(CAN_HandleTypeDef *hcan)
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
  28              		.loc 1 507 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
  33              		.loc 1 509 3 view .LVU1
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_MspInit could be implemented in the user file
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
  34              		.loc 1 514 1 is_stmt 0 view .LVU2
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE67:
  39              		.section	.text.HAL_CAN_MspDeInit,"ax",%progbits
  40              		.align	1
  41              		.weak	HAL_CAN_MspDeInit
  42              		.syntax unified
  43              		.thumb
  44              		.thumb_func
  46              	HAL_CAN_MspDeInit:
  47              	.LVL1:
  48              	.LFB68:
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  DeInitializes the CAN MSP.
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_MspDeInit(CAN_HandleTypeDef *hcan)
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
  49              		.loc 1 523 1 is_stmt 1 view -0
  50              		.cfi_startproc
ARM GAS  /tmp/ccCZwBwi.s 			page 11


  51              		@ args = 0, pretend = 0, frame = 0
  52              		@ frame_needed = 0, uses_anonymous_args = 0
  53              		@ link register save eliminated.
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
  54              		.loc 1 525 3 view .LVU4
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_MspDeInit could be implemented in the user file
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
  55              		.loc 1 530 1 is_stmt 0 view .LVU5
  56 0000 7047     		bx	lr
  57              		.cfi_endproc
  58              	.LFE68:
  60              		.section	.text.HAL_CAN_TxMailbox0CompleteCallback,"ax",%progbits
  61              		.align	1
  62              		.weak	HAL_CAN_TxMailbox0CompleteCallback
  63              		.syntax unified
  64              		.thumb
  65              		.thumb_func
  67              	HAL_CAN_TxMailbox0CompleteCallback:
  68              	.LVL2:
  69              	.LFB87:
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Register a CAN CallBack.
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         To be used instead of the weak predefined callback
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for CAN module
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  CallbackID ID of the callback to be registered
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be one of the following values:
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CALLBACK_CB_ID Tx Mailbox 0 Complete callback 
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CALLBACK_CB_ID Tx Mailbox 1 Complete callback 
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CALLBACK_CB_ID Tx Mailbox 2 Complete callback 
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CALLBACK_CB_ID Tx Mailbox 0 Abort callback ID
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CALLBACK_CB_ID Tx Mailbox 1 Abort callback ID
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CALLBACK_CB_ID Tx Mailbox 2 Abort callback ID
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CALLBACK_CB_ID Rx Fifo 0 message pending callb
 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CALLBACK_CB_ID Rx Fifo 0 full callback ID
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSGPENDING_CALLBACK_CB_ID Rx Fifo 1 message pending callba
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CALLBACK_CB_ID Rx Fifo 1 full callback ID
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CALLBACK_CB_ID Sleep callback ID
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CALLBACK_CB_ID Wake Up from Rx message callback 
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CALLBACK_CB_ID Error callback ID
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  pCallback pointer to the Callback function
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Callb
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (pCallback == NULL)
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
ARM GAS  /tmp/ccCZwBwi.s 			page 12


 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update the error code */
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch (CallbackID)
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = pCallback;
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = pCallback;
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = pCallback;
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = pCallback;
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = pCallback;
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = pCallback;
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = pCallback;
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo0FullCallback = pCallback;
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = pCallback;
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo1FullCallback = pCallback;
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->SleepCallback = pCallback;
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = pCallback;
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
ARM GAS  /tmp/ccCZwBwi.s 			page 13


 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCallback = pCallback;
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default :
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update the error code */
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Return error status */
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         status =  HAL_ERROR;
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch (CallbackID)
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspInitCallback = pCallback;
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspDeInitCallback = pCallback;
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default :
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update the error code */
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Return error status */
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         status =  HAL_ERROR;
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update the error code */
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return error status */
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     status =  HAL_ERROR;
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return status;
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Unregister a CAN CallBack.
ARM GAS  /tmp/ccCZwBwi.s 			page 14


 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         CAN callabck is redirected to the weak predefined callback
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for CAN module
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  CallbackID ID of the callback to be unregistered
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be one of the following values:
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_COMPLETE_CALLBACK_CB_ID Tx Mailbox 0 Complete callback 
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_COMPLETE_CALLBACK_CB_ID Tx Mailbox 1 Complete callback 
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_COMPLETE_CALLBACK_CB_ID Tx Mailbox 2 Complete callback 
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX0_ABORT_CALLBACK_CB_ID Tx Mailbox 0 Abort callback ID
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX1_ABORT_CALLBACK_CB_ID Tx Mailbox 1 Abort callback ID
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_TX_MAILBOX2_ABORT_CALLBACK_CB_ID Tx Mailbox 2 Abort callback ID
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_MSG_PENDING_CALLBACK_CB_ID Rx Fifo 0 message pending callb
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO0_FULL_CALLBACK_CB_ID Rx Fifo 0 full callback ID
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_MSGPENDING_CALLBACK_CB_ID Rx Fifo 1 message pending callba
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_RX_FIFO1_FULL_CALLBACK_CB_ID Rx Fifo 1 full callback ID
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_SLEEP_CALLBACK_CB_ID Sleep callback ID
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_WAKEUP_FROM_RX_MSG_CALLBACK_CB_ID Wake Up from Rx message callback 
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_ERROR_CALLBACK_CB_ID Error callback ID
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPINIT_CB_ID MspInit callback ID
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *           @arg @ref HAL_CAN_MSPDEINIT_CB_ID MspDeInit callback ID
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_UnRegisterCallback(CAN_HandleTypeDef *hcan, HAL_CAN_CallbackIDTypeDef Cal
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch (CallbackID)
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_COMPLETE_CB_ID :
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback = HAL_CAN_TxMailbox0CompleteCallback;
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_COMPLETE_CB_ID :
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback = HAL_CAN_TxMailbox1CompleteCallback;
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_COMPLETE_CB_ID :
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback = HAL_CAN_TxMailbox2CompleteCallback;
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX0_ABORT_CB_ID :
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox0AbortCallback = HAL_CAN_TxMailbox0AbortCallback;
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX1_ABORT_CB_ID :
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox1AbortCallback = HAL_CAN_TxMailbox1AbortCallback;
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_TX_MAILBOX2_ABORT_CB_ID :
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox2AbortCallback = HAL_CAN_TxMailbox2AbortCallback;
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_MSG_PENDING_CB_ID :
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo0MsgPendingCallback = HAL_CAN_RxFifo0MsgPendingCallback;
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
ARM GAS  /tmp/ccCZwBwi.s 			page 15


 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO0_FULL_CB_ID :
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo0FullCallback = HAL_CAN_RxFifo0FullCallback;
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_MSG_PENDING_CB_ID :
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo1MsgPendingCallback = HAL_CAN_RxFifo1MsgPendingCallback;
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_RX_FIFO1_FULL_CB_ID :
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->RxFifo1FullCallback = HAL_CAN_RxFifo1FullCallback;
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_SLEEP_CB_ID :
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->SleepCallback = HAL_CAN_SleepCallback;
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_WAKEUP_FROM_RX_MSG_CB_ID :
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->WakeUpFromRxMsgCallback = HAL_CAN_WakeUpFromRxMsgCallback;
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_ERROR_CB_ID :
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCallback = HAL_CAN_ErrorCallback;
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default :
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update the error code */
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Return error status */
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         status =  HAL_ERROR;
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else if (hcan->State == HAL_CAN_STATE_RESET)
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     switch (CallbackID)
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPINIT_CB_ID :
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspInitCallback = HAL_CAN_MspInit;
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       case HAL_CAN_MSPDEINIT_CB_ID :
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->MspDeInitCallback = HAL_CAN_MspDeInit;
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       default :
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update the error code */
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
ARM GAS  /tmp/ccCZwBwi.s 			page 16


 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Return error status */
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         status =  HAL_ERROR;
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update the error code */
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_INVALID_CALLBACK;
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return error status */
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     status =  HAL_ERROR;
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return status;
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group2 Configuration functions
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief    Configuration functions.
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****               ##### Configuration functions #####
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_ConfigFilter            : Configure the CAN reception filters
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Configures the CAN reception filter according to the specified
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         parameters in the CAN_FilterInitStruct.
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  sFilterConfig pointer to a CAN_FilterTypeDef structure that
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         contains the filter configuration information.
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ConfigFilter(CAN_HandleTypeDef *hcan, CAN_FilterTypeDef *sFilterConfig)
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t filternbrbitpos;
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CAN_TypeDef *can_ip = hcan->Instance;
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check the parameters */
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdHigh));
ARM GAS  /tmp/ccCZwBwi.s 			page 17


 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if   defined(CAN2)
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* CAN1 and CAN2 are dual instances with 28 common filters banks */
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Select master instance to access the filter banks */
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     can_ip = CAN1;
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check the parameters */
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->FilterBank));
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_DUAL(sFilterConfig->SlaveStartFilterBank));
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* CAN1 is single instance with 14 dedicated filters banks */
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check the parameters */
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_BANK_SINGLE(sFilterConfig->FilterBank));
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Initialisation mode for the filter */
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(can_ip->FMR, CAN_FMR_FINIT);
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if   defined(CAN2)
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Select the start filter number of CAN2 slave instance */
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_CAN2SB);
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(can_ip->FMR, sFilterConfig->SlaveStartFilterBank << CAN_FMR_CAN2SB_Pos);
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Convert filter number into bit position */
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     filternbrbitpos = (uint32_t)1 << (sFilterConfig->FilterBank & 0x1FU);
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Filter Deactivation */
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(can_ip->FA1R, filternbrbitpos);
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Filter Scale */
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_16BIT)
 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* 16-bit scale for the filter */
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(can_ip->FS1R, filternbrbitpos);
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* First 16-bit identifier and First 16-bit mask */
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Or First 16-bit identifier and Second 16-bit identifier */
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Second 16-bit identifier and Second 16-bit mask */
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Or Third 16-bit identifier and Fourth 16-bit identifier */
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 18


 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (sFilterConfig->FilterScale == CAN_FILTERSCALE_32BIT)
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* 32-bit scale for the filter */
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(can_ip->FS1R, filternbrbitpos);
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* 32-bit identifier or First 32-bit identifier */
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR1 =
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* 32-bit mask or Second 32-bit identifier */
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       can_ip->sFilterRegister[sFilterConfig->FilterBank].FR2 =
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Filter Mode */
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (sFilterConfig->FilterMode == CAN_FILTERMODE_IDMASK)
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Id/Mask mode for the filter*/
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(can_ip->FM1R, filternbrbitpos);
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else /* CAN_FilterInitStruct->CAN_FilterMode == CAN_FilterMode_IdList */
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Identifier list mode for the filter*/
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(can_ip->FM1R, filternbrbitpos);
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Filter FIFO assignment */
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (sFilterConfig->FilterFIFOAssignment == CAN_FILTER_FIFO0)
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* FIFO 0 assignation for the filter */
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       CLEAR_BIT(can_ip->FFA1R, filternbrbitpos);
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* FIFO 1 assignation for the filter */
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(can_ip->FFA1R, filternbrbitpos);
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Filter activation */
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (sFilterConfig->FilterActivation == CAN_FILTER_ENABLE)
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(can_ip->FA1R, filternbrbitpos);
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Leave the initialisation mode for the filter */
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(can_ip->FMR, CAN_FMR_FINIT);
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 19


 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group3 Control functions
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief    Control functions
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                       ##### Control functions #####
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_Start                    : Start the CAN module
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_Stop                     : Stop the CAN module
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_RequestSleep             : Request sleep mode entry.
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_WakeUp                   : Wake up from sleep mode.
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_IsSleepActive            : Check is sleep mode is active.
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_AddTxMessage             : Add a message to the Tx mailboxes
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                              and activate the corresponding
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                              transmission request
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_AbortTxRequest           : Abort transmission request
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_GetTxMailboxesFreeLevel  : Return Tx mailboxes free level
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_IsTxMessagePending       : Check if a transmission request is
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                              pending on the selected Tx mailbox
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_GetRxMessage             : Get a CAN frame from the Rx FIFO
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_GetRxFifoFillLevel       : Return Rx FIFO fill level
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Start the CAN module.
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Start(CAN_HandleTypeDef *hcan)
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_READY)
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN peripheral state */
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_LISTENING;
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request leave initialisation */
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get tick */
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tickstart = HAL_GetTick();
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Wait the acknowledge */
ARM GAS  /tmp/ccCZwBwi.s 			page 20


1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) != 0U)
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check for the Timeout */
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update error code */
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Change CAN state */
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_ERROR;
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Reset the CAN ErrorCode */
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode = HAL_CAN_ERROR_NONE;
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_READY;
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Stop the CAN module and enable access to configuration registers.
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_Stop(CAN_HandleTypeDef *hcan)
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (hcan->State == HAL_CAN_STATE_LISTENING)
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request initialisation */
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_INRQ);
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get tick */
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     tickstart = HAL_GetTick();
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Wait the acknowledge */
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_INAK) == 0U)
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check for the Timeout */
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((HAL_GetTick() - tickstart) > CAN_TIMEOUT_VALUE)
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update error code */
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 21


1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Change CAN state */
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->State = HAL_CAN_STATE_ERROR;
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_ERROR;
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Exit from sleep mode */
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Change CAN peripheral state */
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->State = HAL_CAN_STATE_READY;
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_STARTED;
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Request the sleep mode (low power) entry.
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         When returning from this function, Sleep mode will be entered
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         as soon as the current CAN activity (transmission or reception
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         of a CAN frame) has been completed.
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status.
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_RequestSleep(CAN_HandleTypeDef *hcan)
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Request Sleep mode */
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     SET_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 22


1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Wake up from sleep mode.
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         When returning with HAL_OK status from this function, Sleep mode
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         is exited.
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status.
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_WakeUp(CAN_HandleTypeDef *hcan)
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __IO uint32_t count = 0;
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t timeout = 1000000U;
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Wake up request */
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     CLEAR_BIT(hcan->Instance->MCR, CAN_MCR_SLEEP);
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Wait sleep mode is exited */
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     do
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Increment counter */
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       count++;
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check if timeout is reached */
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (count > timeout)
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update error code */
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_TIMEOUT;
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_ERROR;
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     while ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U);
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Check is sleep mode is active.
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval Status
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          - 0 : Sleep mode is not active.
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          - 1 : Sleep mode is active.
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
ARM GAS  /tmp/ccCZwBwi.s 			page 23


1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_IsSleepActive(CAN_HandleTypeDef *hcan)
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = 0U;
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Sleep mode */
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       status = 1U;
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return function status */
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return status;
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Add a message to the first free Tx mailbox and activate the
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         corresponding transmission request.
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  pHeader pointer to a CAN_TxHeaderTypeDef structure.
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  aData array containing the payload of the Tx frame.
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  pTxMailbox pointer to a variable where the function will return
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the TxMailbox used to store the Tx message.
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_Tx_Mailboxes.
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AddTxMessage(CAN_HandleTypeDef *hcan, CAN_TxHeaderTypeDef *pHeader, uint8
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox;
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check the parameters */
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_IDTYPE(pHeader->IDE));
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_STDID(pHeader->StdId));
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_EXTID(pHeader->ExtId));
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(pHeader->TransmitGlobalTime));
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check that all the Tx mailboxes are not full */
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (((tsr & CAN_TSR_TME0) != 0U) ||
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
ARM GAS  /tmp/ccCZwBwi.s 			page 24


1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((tsr & CAN_TSR_TME2) != 0U))
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Select an empty transmit mailbox */
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       transmitmailbox = (tsr & CAN_TSR_CODE) >> CAN_TSR_CODE_Pos;
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check transmit mailbox value */
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (transmitmailbox > 2U)
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update error code */
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_INTERNAL;
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_ERROR;
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Store the Tx mailbox */
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       *pTxMailbox = (uint32_t)1 << transmitmailbox;
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Set up the Id */
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (pHeader->IDE == CAN_ID_STD)
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->StdId << CAN_TI0R_STID_Pos) |
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       else
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->Instance->sTxMailBox[transmitmailbox].TIR = ((pHeader->ExtId << CAN_TI0R_EXID_Pos) |
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->IDE |
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Set up the DLC */
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->Instance->sTxMailBox[transmitmailbox].TDTR = (pHeader->DLC);
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Set up the Transmit Global Time mode */
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (pHeader->TransmitGlobalTime == ENABLE)
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TDTR, CAN_TDT0R_TGT);
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Set up the data field */
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDHR,
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[6] << CAN_TDH0R_DATA6_Pos) |
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[5] << CAN_TDH0R_DATA5_Pos) |
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[4] << CAN_TDH0R_DATA4_Pos));
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       WRITE_REG(hcan->Instance->sTxMailBox[transmitmailbox].TDLR,
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[2] << CAN_TDL0R_DATA2_Pos) |
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[1] << CAN_TDL0R_DATA1_Pos) |
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[0] << CAN_TDL0R_DATA0_Pos));
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Request transmission */
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->sTxMailBox[transmitmailbox].TIR, CAN_TI0R_TXRQ);
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Return function status */
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_OK;
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /tmp/ccCZwBwi.s 			page 25


1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Update error code */
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       return HAL_ERROR;
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Abort transmission requests
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  TxMailboxes List of the Tx Mailboxes to abort.
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_AbortTxRequest(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check function parameters */
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Tx Mailbox 0 */
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX0) != 0U)
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 0 */
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ0);
1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Tx Mailbox 1 */
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX1) != 0U)
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 1 */
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ1);
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Tx Mailbox 2 */
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((TxMailboxes & CAN_TX_MAILBOX2) != 0U)
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Add cancellation request for Tx Mailbox 2 */
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->TSR, CAN_TSR_ABRQ2);
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
ARM GAS  /tmp/ccCZwBwi.s 			page 26


1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Return Tx Mailboxes free level: number of free Tx Mailboxes.
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval Number of free Tx Mailboxes.
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_GetTxMailboxesFreeLevel(CAN_HandleTypeDef *hcan)
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t freelevel = 0U;
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Tx Mailbox 0 status */
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME0) != 0U)
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       freelevel++;
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Tx Mailbox 1 status */
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME1) != 0U)
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       freelevel++;
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check Tx Mailbox 2 status */
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->TSR & CAN_TSR_TME2) != 0U)
1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       freelevel++;
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return Tx Mailboxes free level */
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return freelevel;
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Check if a transmission request is pending on the selected Tx
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         Mailboxes.
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  TxMailboxes List of Tx Mailboxes to check.
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Tx_Mailboxes.
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval Status
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          - 0 : No pending transmission request on any selected Tx Mailboxes.
ARM GAS  /tmp/ccCZwBwi.s 			page 27


1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *          - 1 : Pending transmission request on at least one of the selected
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *                Tx Mailbox.
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_IsTxMessagePending(CAN_HandleTypeDef *hcan, uint32_t TxMailboxes)
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = 0U;
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check function parameters */
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX_LIST(TxMailboxes));
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check pending transmission request on the selected Tx Mailboxes */
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->TSR & (TxMailboxes << CAN_TSR_TME0_Pos)) != (TxMailboxes << CAN_TSR_TME0_P
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       status = 1U;
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return status */
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return status;
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Return timestamp of Tx message sent, if time triggered communication
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             mode is enabled.
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  TxMailbox Tx Mailbox where the timestamp of message sent will be
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         read.
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be one value of @arg CAN_Tx_Mailboxes.
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval Timestamp of message sent from Tx Mailbox.
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_GetTxTimestamp(CAN_HandleTypeDef *hcan, uint32_t TxMailbox)
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t timestamp = 0U;
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox;
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check function parameters */
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_TX_MAILBOX(TxMailbox));
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Select the Tx mailbox */
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     transmitmailbox = POSITION_VAL(TxMailbox);
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get timestamp */
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     timestamp = (hcan->Instance->sTxMailBox[transmitmailbox].TDTR & CAN_TDT0R_TIME) >> CAN_TDT0R_TI
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return the timestamp */
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return timestamp;
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
ARM GAS  /tmp/ccCZwBwi.s 			page 28


1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Get an CAN frame from the Rx FIFO zone into the message RAM.
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  RxFifo Fifo number of the received message to be read.
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  pHeader pointer to a CAN_RxHeaderTypeDef structure where the header
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         of the Rx frame will be stored.
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  aData array where the payload of the Rx frame will be stored.
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_GetRxMessage(CAN_HandleTypeDef *hcan, uint32_t RxFifo, CAN_RxHeaderTypeDe
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check the Rx FIFO */
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check that the Rx FIFO 0 is not empty */
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) == 0U)
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update error code */
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_ERROR;
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check that the Rx FIFO 1 is not empty */
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) == 0U)
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Update error code */
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->ErrorCode |= HAL_CAN_ERROR_PARAM;
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         return HAL_ERROR;
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get the header */
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->IDE = CAN_RI0R_IDE & hcan->Instance->sFIFOMailBox[RxFifo].RIR;
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       pHeader->StdId = (CAN_RI0R_STID & hcan->Instance->sFIFOMailBox[RxFifo].RIR) >> CAN_TI0R_STID_
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       pHeader->ExtId = ((CAN_RI0R_EXID | CAN_RI0R_STID) & hcan->Instance->sFIFOMailBox[RxFifo].RIR)
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->RTR = (CAN_RI0R_RTR & hcan->Instance->sFIFOMailBox[RxFifo].RIR);
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos
ARM GAS  /tmp/ccCZwBwi.s 			page 29


1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Get the data */
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[0] = (uint8_t)((CAN_RDL0R_DATA0 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Release the FIFO */
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0) /* Rx element is assigned to Rx FIFO 0 */
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Release RX FIFO 0 */
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->RF0R, CAN_RF0R_RFOM0);
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else /* Rx element is assigned to Rx FIFO 1 */
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Release RX FIFO 1 */
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       SET_BIT(hcan->Instance->RF1R, CAN_RF1R_RFOM1);
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Return Rx FIFO fill level.
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  RxFifo Rx FIFO.
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be a value of @arg CAN_receive_FIFO_number.
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval Number of messages available in Rx FIFO.
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_GetRxFifoFillLevel(CAN_HandleTypeDef *hcan, uint32_t RxFifo)
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t filllevel = 0U;
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check function parameters */
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RX_FIFO(RxFifo));
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (RxFifo == CAN_RX_FIFO0)
ARM GAS  /tmp/ccCZwBwi.s 			page 30


1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       filllevel = hcan->Instance->RF0R & CAN_RF0R_FMP0;
1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else /* RxFifo == CAN_RX_FIFO1 */
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       filllevel = hcan->Instance->RF1R & CAN_RF1R_FMP1;
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return Rx FIFO fill level */
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return filllevel;
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group4 Interrupts management
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief    Interrupts management
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                        ##### Interrupts management #####
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]  This section provides functions allowing to:
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_ActivateNotification      : Enable interrupts
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_DeactivateNotification    : Disable interrupts
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_IRQHandler                : Handles CAN interrupt request
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Enable interrupts.
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  ActiveITs indicates which interrupts will be enabled.
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ActivateNotification(CAN_HandleTypeDef *hcan, uint32_t ActiveITs)
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check function parameters */
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_IT(ActiveITs));
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Enable the selected interrupts */
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_ENABLE_IT(hcan, ActiveITs);
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
ARM GAS  /tmp/ccCZwBwi.s 			page 31


1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Disable interrupts.
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  InactiveITs indicates which interrupts will be disabled.
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         This parameter can be any combination of @arg CAN_Interrupts.
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_DeactivateNotification(CAN_HandleTypeDef *hcan, uint32_t InactiveITs)
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check function parameters */
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_IT(InactiveITs));
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Disable the selected interrupts */
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_DISABLE_IT(hcan, InactiveITs);
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Return function status */
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_OK;
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     return HAL_ERROR;
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Handles CAN interrupt request
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** void HAL_CAN_IRQHandler(CAN_HandleTypeDef *hcan)
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
ARM GAS  /tmp/ccCZwBwi.s 			page 32


1704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Transmit Mailbox empty interrupt management *****************************/
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_TX_MAILBOX_EMPTY) != 0U)
1707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Transmit Mailbox 0 management *****************************************/
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP0) != 0U)
1710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK0,ALST0,TERR0 bits) */
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP0);
1713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK0) != 0U)
1715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Transmission Mailbox 0 complete callback */
1717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call registered callback*/
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox0CompleteCallback(hcan);
1720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call weak (surcharged) callback */
1722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         HAL_CAN_TxMailbox0CompleteCallback(hcan);
1723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       else
1726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST0) != 0U)
1728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Update error code */
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST0;
1731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR0) != 0U)
1733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Update error code */
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR0;
1736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         else
1738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Transmission Mailbox 0 abort callback */
1740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Call registered callback*/
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->TxMailbox0AbortCallback(hcan);
1743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Call weak (surcharged) callback */
1745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_TxMailbox0AbortCallback(hcan);
1746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Transmit Mailbox 1 management *****************************************/
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP1) != 0U)
1753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK1,ALST1,TERR1 bits) */
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP1);
1756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK1) != 0U)
1758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Transmission Mailbox 1 complete callback */
1760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
ARM GAS  /tmp/ccCZwBwi.s 			page 33


1761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call registered callback*/
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox1CompleteCallback(hcan);
1763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call weak (surcharged) callback */
1765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         HAL_CAN_TxMailbox1CompleteCallback(hcan);
1766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       else
1769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST1) != 0U)
1771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Update error code */
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST1;
1774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR1) != 0U)
1776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Update error code */
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR1;
1779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         else
1781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Transmission Mailbox 1 abort callback */
1783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Call registered callback*/
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->TxMailbox1AbortCallback(hcan);
1786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Call weak (surcharged) callback */
1788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_TxMailbox1AbortCallback(hcan);
1789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Transmit Mailbox 2 management *****************************************/
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((tsrflags & CAN_TSR_RQCP2) != 0U)
1796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear the Transmission Complete flag (and TXOK2,ALST2,TERR2 bits) */
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_RQCP2);
1799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if ((tsrflags & CAN_TSR_TXOK2) != 0U)
1801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Transmission Mailbox 2 complete callback */
1803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call registered callback*/
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         hcan->TxMailbox2CompleteCallback(hcan);
1806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Call weak (surcharged) callback */
1808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         HAL_CAN_TxMailbox2CompleteCallback(hcan);
1809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       else
1812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         if ((tsrflags & CAN_TSR_ALST2) != 0U)
1814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Update error code */
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_ALST2;
1817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
ARM GAS  /tmp/ccCZwBwi.s 			page 34


1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         else if ((tsrflags & CAN_TSR_TERR2) != 0U)
1819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Update error code */
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           errorcode |= HAL_CAN_ERROR_TX_TERR2;
1822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         else
1824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
1825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Transmission Mailbox 2 abort callback */
1826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Call registered callback*/
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           hcan->TxMailbox2AbortCallback(hcan);
1829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           /* Call weak (surcharged) callback */
1831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           HAL_CAN_TxMailbox2AbortCallback(hcan);
1832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
1834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive FIFO 0 overrun interrupt management *****************************/
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_OVERRUN) != 0U)
1840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FOVR0) != 0U)
1842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 0 overrun error */
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV0;
1845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear FIFO0 Overrun Flag */
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV0);
1848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive FIFO 0 full interrupt management ********************************/
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_FULL) != 0U)
1853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((rf0rflags & CAN_RF0R_FULL0) != 0U)
1855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear FIFO 0 full Flag */
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF0);
1858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Receive FIFO 0 full Callback */
1860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call registered callback*/
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->RxFifo0FullCallback(hcan);
1863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call weak (surcharged) callback */
1865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_CAN_RxFifo0FullCallback(hcan);
1866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive FIFO 0 message pending interrupt management *********************/
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO0_MSG_PENDING) != 0U)
1872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check if message is still pending */
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->RF0R & CAN_RF0R_FMP0) != 0U)
ARM GAS  /tmp/ccCZwBwi.s 			page 35


1875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Receive FIFO 0 mesage pending Callback */
1877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call registered callback*/
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->RxFifo0MsgPendingCallback(hcan);
1880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call weak (surcharged) callback */
1882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_CAN_RxFifo0MsgPendingCallback(hcan);
1883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive FIFO 1 overrun interrupt management *****************************/
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_OVERRUN) != 0U)
1889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FOVR1) != 0U)
1891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Set CAN error code to Rx Fifo 1 overrun error */
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       errorcode |= HAL_CAN_ERROR_RX_FOV1;
1894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear FIFO1 Overrun Flag */
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FOV1);
1897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive FIFO 1 full interrupt management ********************************/
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_FULL) != 0U)
1902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((rf1rflags & CAN_RF1R_FULL1) != 0U)
1904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear FIFO 1 full Flag */
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_FF1);
1907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Receive FIFO 1 full Callback */
1909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call registered callback*/
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->RxFifo1FullCallback(hcan);
1912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call weak (surcharged) callback */
1914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_CAN_RxFifo1FullCallback(hcan);
1915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Receive FIFO 1 message pending interrupt management *********************/
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_RX_FIFO1_MSG_PENDING) != 0U)
1921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check if message is still pending */
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->RF1R & CAN_RF1R_FMP1) != 0U)
1924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Receive FIFO 1 mesage pending Callback */
1926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call registered callback*/
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->RxFifo1MsgPendingCallback(hcan);
1929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call weak (surcharged) callback */
1931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_CAN_RxFifo1MsgPendingCallback(hcan);
ARM GAS  /tmp/ccCZwBwi.s 			page 36


1932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Sleep interrupt management *********************************************/
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_SLEEP_ACK) != 0U)
1938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((msrflags & CAN_MSR_SLAKI) != 0U)
1940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear Sleep interrupt Flag */
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_SLAKI);
1943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Sleep Callback */
1945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call registered callback*/
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->SleepCallback(hcan);
1948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call weak (surcharged) callback */
1950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_CAN_SleepCallback(hcan);
1951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* WakeUp interrupt management *********************************************/
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_WAKEUP) != 0U)
1957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((msrflags & CAN_MSR_WKUI) != 0U)
1959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Clear WakeUp Flag */
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_WKU);
1962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* WakeUp Callback */
1964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
1965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call registered callback*/
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       hcan->WakeUpFromRxMsgCallback(hcan);
1967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
1968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Call weak (surcharged) callback */
1969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       HAL_CAN_WakeUpFromRxMsgCallback(hcan);
1970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
1971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
1972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
1973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Error interrupts management *********************************************/
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((interrupts & CAN_IT_ERROR) != 0U)
1976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((msrflags & CAN_MSR_ERRI) != 0U)
1978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
1979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Error Warning Flag */
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_WARNING) != 0U) &&
1981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
1982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Set CAN error code to Error Warning */
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EWG;
1985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* No need for clear of Error Warning Flag as read-only */
1987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 37


1989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Error Passive Flag */
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (((interrupts & CAN_IT_ERROR_PASSIVE) != 0U) &&
1991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
1992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
1993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Set CAN error code to Error Passive */
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_EPV;
1995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* No need for clear of Error Passive Flag as read-only */
1997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
1998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
1999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Bus-off Flag */
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (((interrupts & CAN_IT_BUSOFF) != 0U) &&
2001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
2002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
2003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Set CAN error code to Bus-Off */
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         errorcode |= HAL_CAN_ERROR_BOF;
2005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* No need for clear of Error Bus-Off as read-only */
2007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
2008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Check Last Error Code Flag */
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       if (((interrupts & CAN_IT_LAST_ERROR_CODE) != 0U) &&
2011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
2012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         switch (esrflags & CAN_ESR_LEC)
2014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
2015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_0):
2016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             /* Set CAN error code to Stuff error */
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_STF;
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_1):
2020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             /* Set CAN error code to Form error */
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_FOR;
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
2024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             /* Set CAN error code to Acknowledgement error */
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_ACK;
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_2):
2028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             /* Set CAN error code to Bit recessive error */
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BR;
2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
2032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             /* Set CAN error code to Bit Dominant error */
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_BD;
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
2036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             /* Set CAN error code to CRC error */
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             errorcode |= HAL_CAN_ERROR_CRC;
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           default:
2040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
2041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
2042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         /* Clear Last error code Flag */
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         CLEAR_BIT(hcan->Instance->ESR, CAN_ESR_LEC);
2045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
ARM GAS  /tmp/ccCZwBwi.s 			page 38


2046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
2047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Clear ERRI Flag */
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     __HAL_CAN_CLEAR_FLAG(hcan, CAN_FLAG_ERRI);
2050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
2051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Call the Error call Back in case of Errors */
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (errorcode != HAL_CAN_ERROR_NONE)
2054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
2055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code in handle */
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= errorcode;
2057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call Error callback function */
2059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #if USE_HAL_CAN_REGISTER_CALLBACKS == 1
2060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call registered callback*/
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCallback(hcan);
2062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
2063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Call weak (surcharged) callback */
2064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     HAL_CAN_ErrorCallback(hcan);
2065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
2066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
2068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
2071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group5 Callback functions
2074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief   CAN Callback functions
2075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
2076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim
2077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
2078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                           ##### Callback functions #####
2079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
2080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
2081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     This subsection provides the following callback functions:
2082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0CompleteCallback
2083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1CompleteCallback
2084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2CompleteCallback
2085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_TxMailbox0AbortCallback
2086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_TxMailbox1AbortCallback
2087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_TxMailbox2AbortCallback
2088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_RxFifo0MsgPendingCallback
2089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_RxFifo0FullCallback
2090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_RxFifo1MsgPendingCallback
2091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_RxFifo1FullCallback
2092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_SleepCallback
2093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_WakeUpFromRxMsgCallback
2094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_ErrorCallback
2095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
2097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
2098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission Mailbox 0 complete callback.
2102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
ARM GAS  /tmp/ccCZwBwi.s 			page 39


2103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0CompleteCallback(CAN_HandleTypeDef *hcan)
2107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
  70              		.loc 1 2107 1 is_stmt 1 view -0
  71              		.cfi_startproc
  72              		@ args = 0, pretend = 0, frame = 0
  73              		@ frame_needed = 0, uses_anonymous_args = 0
  74              		@ link register save eliminated.
2108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
  75              		.loc 1 2109 3 view .LVU7
2110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxMailbox0CompleteCallback could be implemented in the
2113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
  76              		.loc 1 2115 1 is_stmt 0 view .LVU8
  77 0000 7047     		bx	lr
  78              		.cfi_endproc
  79              	.LFE87:
  81              		.section	.text.HAL_CAN_TxMailbox1CompleteCallback,"ax",%progbits
  82              		.align	1
  83              		.weak	HAL_CAN_TxMailbox1CompleteCallback
  84              		.syntax unified
  85              		.thumb
  86              		.thumb_func
  88              	HAL_CAN_TxMailbox1CompleteCallback:
  89              	.LVL3:
  90              	.LFB88:
2116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission Mailbox 1 complete callback.
2119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1CompleteCallback(CAN_HandleTypeDef *hcan)
2124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
  91              		.loc 1 2124 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              		@ link register save eliminated.
2125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
  96              		.loc 1 2126 3 view .LVU10
2127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxMailbox1CompleteCallback could be implemented in the
2130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
  97              		.loc 1 2132 1 is_stmt 0 view .LVU11
  98 0000 7047     		bx	lr
ARM GAS  /tmp/ccCZwBwi.s 			page 40


  99              		.cfi_endproc
 100              	.LFE88:
 102              		.section	.text.HAL_CAN_TxMailbox2CompleteCallback,"ax",%progbits
 103              		.align	1
 104              		.weak	HAL_CAN_TxMailbox2CompleteCallback
 105              		.syntax unified
 106              		.thumb
 107              		.thumb_func
 109              	HAL_CAN_TxMailbox2CompleteCallback:
 110              	.LVL4:
 111              	.LFB89:
2133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission Mailbox 2 complete callback.
2136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2CompleteCallback(CAN_HandleTypeDef *hcan)
2141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 112              		.loc 1 2141 1 is_stmt 1 view -0
 113              		.cfi_startproc
 114              		@ args = 0, pretend = 0, frame = 0
 115              		@ frame_needed = 0, uses_anonymous_args = 0
 116              		@ link register save eliminated.
2142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 117              		.loc 1 2143 3 view .LVU13
2144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxMailbox2CompleteCallback could be implemented in the
2147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 118              		.loc 1 2149 1 is_stmt 0 view .LVU14
 119 0000 7047     		bx	lr
 120              		.cfi_endproc
 121              	.LFE89:
 123              		.section	.text.HAL_CAN_TxMailbox0AbortCallback,"ax",%progbits
 124              		.align	1
 125              		.weak	HAL_CAN_TxMailbox0AbortCallback
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 130              	HAL_CAN_TxMailbox0AbortCallback:
 131              	.LVL5:
 132              	.LFB90:
2150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission Mailbox 0 Cancellation callback.
2153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxMailbox0AbortCallback(CAN_HandleTypeDef *hcan)
2158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 133              		.loc 1 2158 1 is_stmt 1 view -0
ARM GAS  /tmp/ccCZwBwi.s 			page 41


 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		@ link register save eliminated.
2159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 138              		.loc 1 2160 3 view .LVU16
2161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxMailbox0AbortCallback could be implemented in the
2164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 139              		.loc 1 2166 1 is_stmt 0 view .LVU17
 140 0000 7047     		bx	lr
 141              		.cfi_endproc
 142              	.LFE90:
 144              		.section	.text.HAL_CAN_TxMailbox1AbortCallback,"ax",%progbits
 145              		.align	1
 146              		.weak	HAL_CAN_TxMailbox1AbortCallback
 147              		.syntax unified
 148              		.thumb
 149              		.thumb_func
 151              	HAL_CAN_TxMailbox1AbortCallback:
 152              	.LVL6:
 153              	.LFB91:
2167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission Mailbox 1 Cancellation callback.
2170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxMailbox1AbortCallback(CAN_HandleTypeDef *hcan)
2175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 154              		.loc 1 2175 1 is_stmt 1 view -0
 155              		.cfi_startproc
 156              		@ args = 0, pretend = 0, frame = 0
 157              		@ frame_needed = 0, uses_anonymous_args = 0
 158              		@ link register save eliminated.
2176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 159              		.loc 1 2177 3 view .LVU19
2178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxMailbox1AbortCallback could be implemented in the
2181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 160              		.loc 1 2183 1 is_stmt 0 view .LVU20
 161 0000 7047     		bx	lr
 162              		.cfi_endproc
 163              	.LFE91:
 165              		.section	.text.HAL_CAN_TxMailbox2AbortCallback,"ax",%progbits
 166              		.align	1
 167              		.weak	HAL_CAN_TxMailbox2AbortCallback
 168              		.syntax unified
ARM GAS  /tmp/ccCZwBwi.s 			page 42


 169              		.thumb
 170              		.thumb_func
 172              	HAL_CAN_TxMailbox2AbortCallback:
 173              	.LVL7:
 174              	.LFB92:
2184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Transmission Mailbox 2 Cancellation callback.
2187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to an CAN_HandleTypeDef structure that contains
2188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_TxMailbox2AbortCallback(CAN_HandleTypeDef *hcan)
2192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 175              		.loc 1 2192 1 is_stmt 1 view -0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
2193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 180              		.loc 1 2194 3 view .LVU22
2195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_TxMailbox2AbortCallback could be implemented in the
2198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 181              		.loc 1 2200 1 is_stmt 0 view .LVU23
 182 0000 7047     		bx	lr
 183              		.cfi_endproc
 184              	.LFE92:
 186              		.section	.text.HAL_CAN_RxFifo0MsgPendingCallback,"ax",%progbits
 187              		.align	1
 188              		.weak	HAL_CAN_RxFifo0MsgPendingCallback
 189              		.syntax unified
 190              		.thumb
 191              		.thumb_func
 193              	HAL_CAN_RxFifo0MsgPendingCallback:
 194              	.LVL8:
 195              	.LFB93:
2201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Rx FIFO 0 message pending callback.
2204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_RxFifo0MsgPendingCallback(CAN_HandleTypeDef *hcan)
2209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 196              		.loc 1 2209 1 is_stmt 1 view -0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
2210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
ARM GAS  /tmp/ccCZwBwi.s 			page 43


 201              		.loc 1 2211 3 view .LVU25
2212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_RxFifo0MsgPendingCallback could be implemented in the
2215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 202              		.loc 1 2217 1 is_stmt 0 view .LVU26
 203 0000 7047     		bx	lr
 204              		.cfi_endproc
 205              	.LFE93:
 207              		.section	.text.HAL_CAN_RxFifo0FullCallback,"ax",%progbits
 208              		.align	1
 209              		.weak	HAL_CAN_RxFifo0FullCallback
 210              		.syntax unified
 211              		.thumb
 212              		.thumb_func
 214              	HAL_CAN_RxFifo0FullCallback:
 215              	.LVL9:
 216              	.LFB94:
2218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Rx FIFO 0 full callback.
2221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_RxFifo0FullCallback(CAN_HandleTypeDef *hcan)
2226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 217              		.loc 1 2226 1 is_stmt 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
2227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 222              		.loc 1 2228 3 view .LVU28
2229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_RxFifo0FullCallback could be implemented in the user
2232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             file
2233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 223              		.loc 1 2234 1 is_stmt 0 view .LVU29
 224 0000 7047     		bx	lr
 225              		.cfi_endproc
 226              	.LFE94:
 228              		.section	.text.HAL_CAN_RxFifo1MsgPendingCallback,"ax",%progbits
 229              		.align	1
 230              		.weak	HAL_CAN_RxFifo1MsgPendingCallback
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 235              	HAL_CAN_RxFifo1MsgPendingCallback:
 236              	.LVL10:
 237              	.LFB95:
2235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 44


2236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Rx FIFO 1 message pending callback.
2238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_RxFifo1MsgPendingCallback(CAN_HandleTypeDef *hcan)
2243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 238              		.loc 1 2243 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		@ link register save eliminated.
2244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 243              		.loc 1 2245 3 view .LVU31
2246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_RxFifo1MsgPendingCallback could be implemented in the
2249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 244              		.loc 1 2251 1 is_stmt 0 view .LVU32
 245 0000 7047     		bx	lr
 246              		.cfi_endproc
 247              	.LFE95:
 249              		.section	.text.HAL_CAN_RxFifo1FullCallback,"ax",%progbits
 250              		.align	1
 251              		.weak	HAL_CAN_RxFifo1FullCallback
 252              		.syntax unified
 253              		.thumb
 254              		.thumb_func
 256              	HAL_CAN_RxFifo1FullCallback:
 257              	.LVL11:
 258              	.LFB96:
2252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Rx FIFO 1 full callback.
2255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_RxFifo1FullCallback(CAN_HandleTypeDef *hcan)
2260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 259              		.loc 1 2260 1 is_stmt 1 view -0
 260              		.cfi_startproc
 261              		@ args = 0, pretend = 0, frame = 0
 262              		@ frame_needed = 0, uses_anonymous_args = 0
 263              		@ link register save eliminated.
2261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 264              		.loc 1 2262 3 view .LVU34
2263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_RxFifo1FullCallback could be implemented in the user
2266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             file
2267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
ARM GAS  /tmp/ccCZwBwi.s 			page 45


2268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 265              		.loc 1 2268 1 is_stmt 0 view .LVU35
 266 0000 7047     		bx	lr
 267              		.cfi_endproc
 268              	.LFE96:
 270              		.section	.text.HAL_CAN_SleepCallback,"ax",%progbits
 271              		.align	1
 272              		.weak	HAL_CAN_SleepCallback
 273              		.syntax unified
 274              		.thumb
 275              		.thumb_func
 277              	HAL_CAN_SleepCallback:
 278              	.LVL12:
 279              	.LFB97:
2269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Sleep callback.
2272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_SleepCallback(CAN_HandleTypeDef *hcan)
2277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 280              		.loc 1 2277 1 is_stmt 1 view -0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 0
 283              		@ frame_needed = 0, uses_anonymous_args = 0
 284              		@ link register save eliminated.
2278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 285              		.loc 1 2279 3 view .LVU37
2280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_SleepCallback could be implemented in the user file
2283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 286              		.loc 1 2284 1 is_stmt 0 view .LVU38
 287 0000 7047     		bx	lr
 288              		.cfi_endproc
 289              	.LFE97:
 291              		.section	.text.HAL_CAN_WakeUpFromRxMsgCallback,"ax",%progbits
 292              		.align	1
 293              		.weak	HAL_CAN_WakeUpFromRxMsgCallback
 294              		.syntax unified
 295              		.thumb
 296              		.thumb_func
 298              	HAL_CAN_WakeUpFromRxMsgCallback:
 299              	.LVL13:
 300              	.LFB98:
2285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  WakeUp from Rx message callback.
2288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_WakeUpFromRxMsgCallback(CAN_HandleTypeDef *hcan)
ARM GAS  /tmp/ccCZwBwi.s 			page 46


2293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 301              		.loc 1 2293 1 is_stmt 1 view -0
 302              		.cfi_startproc
 303              		@ args = 0, pretend = 0, frame = 0
 304              		@ frame_needed = 0, uses_anonymous_args = 0
 305              		@ link register save eliminated.
2294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 306              		.loc 1 2295 3 view .LVU40
2296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_WakeUpFromRxMsgCallback could be implemented in the
2299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             user file
2300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 307              		.loc 1 2301 1 is_stmt 0 view .LVU41
 308 0000 7047     		bx	lr
 309              		.cfi_endproc
 310              	.LFE98:
 312              		.section	.text.HAL_CAN_ErrorCallback,"ax",%progbits
 313              		.align	1
 314              		.weak	HAL_CAN_ErrorCallback
 315              		.syntax unified
 316              		.thumb
 317              		.thumb_func
 319              	HAL_CAN_ErrorCallback:
 320              	.LVL14:
 321              	.LFB99:
2302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Error CAN callback.
2305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval None
2308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** __weak void HAL_CAN_ErrorCallback(CAN_HandleTypeDef *hcan)
2310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 322              		.loc 1 2310 1 is_stmt 1 view -0
 323              		.cfi_startproc
 324              		@ args = 0, pretend = 0, frame = 0
 325              		@ frame_needed = 0, uses_anonymous_args = 0
 326              		@ link register save eliminated.
2311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Prevent unused argument(s) compilation warning */
2312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   UNUSED(hcan);
 327              		.loc 1 2312 3 view .LVU43
2313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
2315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             the HAL_CAN_ErrorCallback could be implemented in the user file
2316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****    */
2317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 328              		.loc 1 2317 1 is_stmt 0 view .LVU44
 329 0000 7047     		bx	lr
 330              		.cfi_endproc
 331              	.LFE99:
 333              		.section	.text.HAL_CAN_Init,"ax",%progbits
 334              		.align	1
 335              		.global	HAL_CAN_Init
ARM GAS  /tmp/ccCZwBwi.s 			page 47


 336              		.syntax unified
 337              		.thumb
 338              		.thumb_func
 340              	HAL_CAN_Init:
 341              	.LVL15:
 342              	.LFB65:
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
 343              		.loc 1 275 1 is_stmt 1 view -0
 344              		.cfi_startproc
 345              		@ args = 0, pretend = 0, frame = 0
 346              		@ frame_needed = 0, uses_anonymous_args = 0
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 347              		.loc 1 276 3 view .LVU46
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 348              		.loc 1 279 3 view .LVU47
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 349              		.loc 1 279 6 is_stmt 0 view .LVU48
 350 0000 0028     		cmp	r0, #0
 351 0002 00F0C080 		beq	.L36
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
 352              		.loc 1 275 1 view .LVU49
 353 0006 38B5     		push	{r3, r4, r5, lr}
 354              		.cfi_def_cfa_offset 16
 355              		.cfi_offset 3, -16
 356              		.cfi_offset 4, -12
 357              		.cfi_offset 5, -8
 358              		.cfi_offset 14, -4
 359 0008 0446     		mov	r4, r0
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TimeTriggeredMode));
 360              		.loc 1 285 3 is_stmt 1 view .LVU50
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoBusOff));
 361              		.loc 1 286 3 view .LVU51
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoWakeUp));
 362              		.loc 1 287 3 view .LVU52
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.AutoRetransmission));
 363              		.loc 1 288 3 view .LVU53
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.ReceiveFifoLocked));
 364              		.loc 1 289 3 view .LVU54
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_FUNCTIONAL_STATE(hcan->Init.TransmitFifoPriority));
 365              		.loc 1 290 3 view .LVU55
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_MODE(hcan->Init.Mode));
 366              		.loc 1 291 3 view .LVU56
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_SJW(hcan->Init.SyncJumpWidth));
 367              		.loc 1 292 3 view .LVU57
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS1(hcan->Init.TimeSeg1));
 368              		.loc 1 293 3 view .LVU58
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_BS2(hcan->Init.TimeSeg2));
 369              		.loc 1 294 3 view .LVU59
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_PRESCALER(hcan->Init.Prescaler));
 370              		.loc 1 295 3 view .LVU60
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 371              		.loc 1 296 3 view .LVU61
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 372              		.loc 1 299 3 view .LVU62
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 373              		.loc 1 299 11 is_stmt 0 view .LVU63
 374 000a 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
ARM GAS  /tmp/ccCZwBwi.s 			page 48


 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 375              		.loc 1 299 6 view .LVU64
 376 000e F3B9     		cbnz	r3, .L18
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 377              		.loc 1 302 5 is_stmt 1 view .LVU65
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo0FullCallback        =  HAL_CAN_RxFifo0FullCallback;        /* Legacy weak RxFifo0F
 378              		.loc 1 302 38 is_stmt 0 view .LVU66
 379 0010 5E4B     		ldr	r3, .L50
 380 0012 0364     		str	r3, [r0, #64]
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 381              		.loc 1 303 5 is_stmt 1 view .LVU67
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo1MsgPendingCallback  =  HAL_CAN_RxFifo1MsgPendingCallback;  /* Legacy weak RxFifo1M
 382              		.loc 1 303 38 is_stmt 0 view .LVU68
 383 0014 5E4B     		ldr	r3, .L50+4
 384 0016 4364     		str	r3, [r0, #68]
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 385              		.loc 1 304 5 is_stmt 1 view .LVU69
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->RxFifo1FullCallback        =  HAL_CAN_RxFifo1FullCallback;        /* Legacy weak RxFifo1F
 386              		.loc 1 304 38 is_stmt 0 view .LVU70
 387 0018 5E4B     		ldr	r3, .L50+8
 388 001a 8364     		str	r3, [r0, #72]
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 389              		.loc 1 305 5 is_stmt 1 view .LVU71
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox0CompleteCallback =  HAL_CAN_TxMailbox0CompleteCallback; /* Legacy weak TxMailbo
 390              		.loc 1 305 38 is_stmt 0 view .LVU72
 391 001c 5E4B     		ldr	r3, .L50+12
 392 001e C364     		str	r3, [r0, #76]
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 393              		.loc 1 306 5 is_stmt 1 view .LVU73
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox1CompleteCallback =  HAL_CAN_TxMailbox1CompleteCallback; /* Legacy weak TxMailbo
 394              		.loc 1 306 38 is_stmt 0 view .LVU74
 395 0020 5E4B     		ldr	r3, .L50+16
 396 0022 8362     		str	r3, [r0, #40]
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 397              		.loc 1 307 5 is_stmt 1 view .LVU75
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox2CompleteCallback =  HAL_CAN_TxMailbox2CompleteCallback; /* Legacy weak TxMailbo
 398              		.loc 1 307 38 is_stmt 0 view .LVU76
 399 0024 5E4B     		ldr	r3, .L50+20
 400 0026 C362     		str	r3, [r0, #44]
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 401              		.loc 1 308 5 is_stmt 1 view .LVU77
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox0AbortCallback    =  HAL_CAN_TxMailbox0AbortCallback;    /* Legacy weak TxMailbo
 402              		.loc 1 308 38 is_stmt 0 view .LVU78
 403 0028 5E4B     		ldr	r3, .L50+24
 404 002a 0363     		str	r3, [r0, #48]
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 405              		.loc 1 309 5 is_stmt 1 view .LVU79
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox1AbortCallback    =  HAL_CAN_TxMailbox1AbortCallback;    /* Legacy weak TxMailbo
 406              		.loc 1 309 38 is_stmt 0 view .LVU80
 407 002c 5E4B     		ldr	r3, .L50+28
 408 002e 4363     		str	r3, [r0, #52]
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 409              		.loc 1 310 5 is_stmt 1 view .LVU81
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->TxMailbox2AbortCallback    =  HAL_CAN_TxMailbox2AbortCallback;    /* Legacy weak TxMailbo
 410              		.loc 1 310 38 is_stmt 0 view .LVU82
 411 0030 5E4B     		ldr	r3, .L50+32
 412 0032 8363     		str	r3, [r0, #56]
ARM GAS  /tmp/ccCZwBwi.s 			page 49


 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 413              		.loc 1 311 5 is_stmt 1 view .LVU83
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->SleepCallback              =  HAL_CAN_SleepCallback;              /* Legacy weak SleepCal
 414              		.loc 1 311 38 is_stmt 0 view .LVU84
 415 0034 5E4B     		ldr	r3, .L50+36
 416 0036 C363     		str	r3, [r0, #60]
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
 417              		.loc 1 312 5 is_stmt 1 view .LVU85
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->WakeUpFromRxMsgCallback    =  HAL_CAN_WakeUpFromRxMsgCallback;    /* Legacy weak WakeUpFr
 418              		.loc 1 312 38 is_stmt 0 view .LVU86
 419 0038 5E4B     		ldr	r3, .L50+40
 420 003a 0365     		str	r3, [r0, #80]
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
 421              		.loc 1 313 5 is_stmt 1 view .LVU87
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCallback              =  HAL_CAN_ErrorCallback;              /* Legacy weak ErrorCal
 422              		.loc 1 313 38 is_stmt 0 view .LVU88
 423 003c 5E4B     		ldr	r3, .L50+44
 424 003e 4365     		str	r3, [r0, #84]
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 425              		.loc 1 314 5 is_stmt 1 view .LVU89
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 426              		.loc 1 314 38 is_stmt 0 view .LVU90
 427 0040 5E4B     		ldr	r3, .L50+48
 428 0042 8365     		str	r3, [r0, #88]
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 429              		.loc 1 316 5 is_stmt 1 view .LVU91
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 430              		.loc 1 316 13 is_stmt 0 view .LVU92
 431 0044 C36D     		ldr	r3, [r0, #92]
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 432              		.loc 1 316 8 view .LVU93
 433 0046 EBB1     		cbz	r3, .L41
 434              	.L19:
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 435              		.loc 1 322 5 is_stmt 1 view .LVU94
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 436              		.loc 1 322 9 is_stmt 0 view .LVU95
 437 0048 E36D     		ldr	r3, [r4, #92]
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 438              		.loc 1 322 5 view .LVU96
 439 004a 2046     		mov	r0, r4
 440              	.LVL16:
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 441              		.loc 1 322 5 view .LVU97
 442 004c 9847     		blx	r3
 443              	.LVL17:
 444              	.L18:
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 445              		.loc 1 334 3 is_stmt 1 view .LVU98
 446 004e 2268     		ldr	r2, [r4]
 447 0050 1368     		ldr	r3, [r2]
 448 0052 23F00203 		bic	r3, r3, #2
 449 0056 1360     		str	r3, [r2]
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 450              		.loc 1 337 3 view .LVU99
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 451              		.loc 1 337 15 is_stmt 0 view .LVU100
ARM GAS  /tmp/ccCZwBwi.s 			page 50


 452 0058 FFF7FEFF 		bl	HAL_GetTick
 453              	.LVL18:
 454 005c 0546     		mov	r5, r0
 455              	.LVL19:
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 456              		.loc 1 340 3 is_stmt 1 view .LVU101
 457              	.L20:
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 458              		.loc 1 340 47 view .LVU102
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 459              		.loc 1 340 15 is_stmt 0 view .LVU103
 460 005e 2368     		ldr	r3, [r4]
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 461              		.loc 1 340 25 view .LVU104
 462 0060 5A68     		ldr	r2, [r3, #4]
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 463              		.loc 1 340 47 view .LVU105
 464 0062 12F0020F 		tst	r2, #2
 465 0066 10D0     		beq	.L42
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 466              		.loc 1 342 5 is_stmt 1 view .LVU106
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 467              		.loc 1 342 10 is_stmt 0 view .LVU107
 468 0068 FFF7FEFF 		bl	HAL_GetTick
 469              	.LVL20:
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 470              		.loc 1 342 24 view .LVU108
 471 006c 401B     		subs	r0, r0, r5
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 472              		.loc 1 342 8 view .LVU109
 473 006e 0A28     		cmp	r0, #10
 474 0070 F5D9     		bls	.L20
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 475              		.loc 1 345 7 is_stmt 1 view .LVU110
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 476              		.loc 1 345 23 is_stmt 0 view .LVU111
 477 0072 636A     		ldr	r3, [r4, #36]
 478 0074 43F40033 		orr	r3, r3, #131072
 479 0078 6362     		str	r3, [r4, #36]
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 480              		.loc 1 348 7 is_stmt 1 view .LVU112
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 481              		.loc 1 348 19 is_stmt 0 view .LVU113
 482 007a 0523     		movs	r3, #5
 483 007c 84F82030 		strb	r3, [r4, #32]
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 484              		.loc 1 350 7 is_stmt 1 view .LVU114
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 485              		.loc 1 350 14 is_stmt 0 view .LVU115
 486 0080 0120     		movs	r0, #1
 487              	.L17:
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 488              		.loc 1 450 1 view .LVU116
 489 0082 38BD     		pop	{r3, r4, r5, pc}
 490              	.LVL21:
 491              	.L41:
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /tmp/ccCZwBwi.s 			page 51


 492              		.loc 1 318 7 is_stmt 1 view .LVU117
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 493              		.loc 1 318 29 is_stmt 0 view .LVU118
 494 0084 4E4B     		ldr	r3, .L50+52
 495 0086 C365     		str	r3, [r0, #92]
 496 0088 DEE7     		b	.L19
 497              	.LVL22:
 498              	.L42:
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 499              		.loc 1 355 3 is_stmt 1 view .LVU119
 500 008a 1A68     		ldr	r2, [r3]
 501 008c 42F00102 		orr	r2, r2, #1
 502 0090 1A60     		str	r2, [r3]
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 503              		.loc 1 358 3 view .LVU120
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 504              		.loc 1 358 15 is_stmt 0 view .LVU121
 505 0092 FFF7FEFF 		bl	HAL_GetTick
 506              	.LVL23:
 507 0096 0546     		mov	r5, r0
 508              	.LVL24:
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 509              		.loc 1 361 3 is_stmt 1 view .LVU122
 510              	.L22:
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 511              		.loc 1 361 47 view .LVU123
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 512              		.loc 1 361 15 is_stmt 0 view .LVU124
 513 0098 2368     		ldr	r3, [r4]
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 514              		.loc 1 361 25 view .LVU125
 515 009a 5A68     		ldr	r2, [r3, #4]
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 516              		.loc 1 361 47 view .LVU126
 517 009c 12F0010F 		tst	r2, #1
 518 00a0 0DD1     		bne	.L43
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 519              		.loc 1 363 5 is_stmt 1 view .LVU127
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 520              		.loc 1 363 10 is_stmt 0 view .LVU128
 521 00a2 FFF7FEFF 		bl	HAL_GetTick
 522              	.LVL25:
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 523              		.loc 1 363 24 view .LVU129
 524 00a6 401B     		subs	r0, r0, r5
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 525              		.loc 1 363 8 view .LVU130
 526 00a8 0A28     		cmp	r0, #10
 527 00aa F5D9     		bls	.L22
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 528              		.loc 1 366 7 is_stmt 1 view .LVU131
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 529              		.loc 1 366 23 is_stmt 0 view .LVU132
 530 00ac 636A     		ldr	r3, [r4, #36]
 531 00ae 43F40033 		orr	r3, r3, #131072
 532 00b2 6362     		str	r3, [r4, #36]
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 52


 533              		.loc 1 369 7 is_stmt 1 view .LVU133
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 534              		.loc 1 369 19 is_stmt 0 view .LVU134
 535 00b4 0523     		movs	r3, #5
 536 00b6 84F82030 		strb	r3, [r4, #32]
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 537              		.loc 1 371 7 is_stmt 1 view .LVU135
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 538              		.loc 1 371 14 is_stmt 0 view .LVU136
 539 00ba 0120     		movs	r0, #1
 540 00bc E1E7     		b	.L17
 541              	.L43:
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 542              		.loc 1 376 3 is_stmt 1 view .LVU137
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 543              		.loc 1 376 17 is_stmt 0 view .LVU138
 544 00be 227E     		ldrb	r2, [r4, #24]	@ zero_extendqisi2
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 545              		.loc 1 376 6 view .LVU139
 546 00c0 012A     		cmp	r2, #1
 547 00c2 3DD0     		beq	.L44
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 548              		.loc 1 382 5 is_stmt 1 view .LVU140
 549 00c4 1A68     		ldr	r2, [r3]
 550 00c6 22F08002 		bic	r2, r2, #128
 551 00ca 1A60     		str	r2, [r3]
 552              	.L25:
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 553              		.loc 1 386 3 view .LVU141
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 554              		.loc 1 386 17 is_stmt 0 view .LVU142
 555 00cc 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 556              		.loc 1 386 6 view .LVU143
 557 00ce 012B     		cmp	r3, #1
 558 00d0 3BD0     		beq	.L45
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 559              		.loc 1 392 5 is_stmt 1 view .LVU144
 560 00d2 2268     		ldr	r2, [r4]
 561 00d4 1368     		ldr	r3, [r2]
 562 00d6 23F04003 		bic	r3, r3, #64
 563 00da 1360     		str	r3, [r2]
 564              	.L27:
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 565              		.loc 1 396 3 view .LVU145
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 566              		.loc 1 396 17 is_stmt 0 view .LVU146
 567 00dc A37E     		ldrb	r3, [r4, #26]	@ zero_extendqisi2
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 568              		.loc 1 396 6 view .LVU147
 569 00de 012B     		cmp	r3, #1
 570 00e0 39D0     		beq	.L46
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 571              		.loc 1 402 5 is_stmt 1 view .LVU148
 572 00e2 2268     		ldr	r2, [r4]
 573 00e4 1368     		ldr	r3, [r2]
 574 00e6 23F02003 		bic	r3, r3, #32
ARM GAS  /tmp/ccCZwBwi.s 			page 53


 575 00ea 1360     		str	r3, [r2]
 576              	.L29:
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 577              		.loc 1 406 3 view .LVU149
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 578              		.loc 1 406 17 is_stmt 0 view .LVU150
 579 00ec E37E     		ldrb	r3, [r4, #27]	@ zero_extendqisi2
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 580              		.loc 1 406 6 view .LVU151
 581 00ee 012B     		cmp	r3, #1
 582 00f0 37D0     		beq	.L47
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 583              		.loc 1 412 5 is_stmt 1 view .LVU152
 584 00f2 2268     		ldr	r2, [r4]
 585 00f4 1368     		ldr	r3, [r2]
 586 00f6 43F01003 		orr	r3, r3, #16
 587 00fa 1360     		str	r3, [r2]
 588              	.L31:
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 589              		.loc 1 416 3 view .LVU153
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 590              		.loc 1 416 17 is_stmt 0 view .LVU154
 591 00fc 237F     		ldrb	r3, [r4, #28]	@ zero_extendqisi2
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 592              		.loc 1 416 6 view .LVU155
 593 00fe 012B     		cmp	r3, #1
 594 0100 35D0     		beq	.L48
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 595              		.loc 1 422 5 is_stmt 1 view .LVU156
 596 0102 2268     		ldr	r2, [r4]
 597 0104 1368     		ldr	r3, [r2]
 598 0106 23F00803 		bic	r3, r3, #8
 599 010a 1360     		str	r3, [r2]
 600              	.L33:
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 601              		.loc 1 426 3 view .LVU157
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 602              		.loc 1 426 17 is_stmt 0 view .LVU158
 603 010c 637F     		ldrb	r3, [r4, #29]	@ zero_extendqisi2
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 604              		.loc 1 426 6 view .LVU159
 605 010e 012B     		cmp	r3, #1
 606 0110 33D0     		beq	.L49
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 607              		.loc 1 432 5 is_stmt 1 view .LVU160
 608 0112 2268     		ldr	r2, [r4]
 609 0114 1368     		ldr	r3, [r2]
 610 0116 23F00403 		bic	r3, r3, #4
 611 011a 1360     		str	r3, [r2]
 612              	.L35:
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                             hcan->Init.SyncJumpWidth  |
 613              		.loc 1 436 3 view .LVU161
 614 011c A368     		ldr	r3, [r4, #8]
 615 011e E268     		ldr	r2, [r4, #12]
 616 0120 1343     		orrs	r3, r3, r2
 617 0122 2269     		ldr	r2, [r4, #16]
 618 0124 1343     		orrs	r3, r3, r2
ARM GAS  /tmp/ccCZwBwi.s 			page 54


 619 0126 6269     		ldr	r2, [r4, #20]
 620 0128 1343     		orrs	r3, r3, r2
 621 012a 6268     		ldr	r2, [r4, #4]
 622 012c 013A     		subs	r2, r2, #1
 623 012e 2168     		ldr	r1, [r4]
 624 0130 1343     		orrs	r3, r3, r2
 625 0132 CB61     		str	r3, [r1, #28]
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 626              		.loc 1 443 3 view .LVU162
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 627              		.loc 1 443 19 is_stmt 0 view .LVU163
 628 0134 0020     		movs	r0, #0
 629 0136 6062     		str	r0, [r4, #36]
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 630              		.loc 1 446 3 is_stmt 1 view .LVU164
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 631              		.loc 1 446 15 is_stmt 0 view .LVU165
 632 0138 0123     		movs	r3, #1
 633 013a 84F82030 		strb	r3, [r4, #32]
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 634              		.loc 1 449 3 is_stmt 1 view .LVU166
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 635              		.loc 1 449 10 is_stmt 0 view .LVU167
 636 013e A0E7     		b	.L17
 637              	.L44:
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 638              		.loc 1 378 5 is_stmt 1 view .LVU168
 639 0140 1A68     		ldr	r2, [r3]
 640 0142 42F08002 		orr	r2, r2, #128
 641 0146 1A60     		str	r2, [r3]
 642 0148 C0E7     		b	.L25
 643              	.L45:
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 644              		.loc 1 388 5 view .LVU169
 645 014a 2268     		ldr	r2, [r4]
 646 014c 1368     		ldr	r3, [r2]
 647 014e 43F04003 		orr	r3, r3, #64
 648 0152 1360     		str	r3, [r2]
 649 0154 C2E7     		b	.L27
 650              	.L46:
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 651              		.loc 1 398 5 view .LVU170
 652 0156 2268     		ldr	r2, [r4]
 653 0158 1368     		ldr	r3, [r2]
 654 015a 43F02003 		orr	r3, r3, #32
 655 015e 1360     		str	r3, [r2]
 656 0160 C4E7     		b	.L29
 657              	.L47:
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 658              		.loc 1 408 5 view .LVU171
 659 0162 2268     		ldr	r2, [r4]
 660 0164 1368     		ldr	r3, [r2]
 661 0166 23F01003 		bic	r3, r3, #16
 662 016a 1360     		str	r3, [r2]
 663 016c C6E7     		b	.L31
 664              	.L48:
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
ARM GAS  /tmp/ccCZwBwi.s 			page 55


 665              		.loc 1 418 5 view .LVU172
 666 016e 2268     		ldr	r2, [r4]
 667 0170 1368     		ldr	r3, [r2]
 668 0172 43F00803 		orr	r3, r3, #8
 669 0176 1360     		str	r3, [r2]
 670 0178 C8E7     		b	.L33
 671              	.L49:
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 672              		.loc 1 428 5 view .LVU173
 673 017a 2268     		ldr	r2, [r4]
 674 017c 1368     		ldr	r3, [r2]
 675 017e 43F00403 		orr	r3, r3, #4
 676 0182 1360     		str	r3, [r2]
 677 0184 CAE7     		b	.L35
 678              	.LVL26:
 679              	.L36:
 680              		.cfi_def_cfa_offset 0
 681              		.cfi_restore 3
 682              		.cfi_restore 4
 683              		.cfi_restore 5
 684              		.cfi_restore 14
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 685              		.loc 1 281 12 is_stmt 0 view .LVU174
 686 0186 0120     		movs	r0, #1
 687              	.LVL27:
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 688              		.loc 1 450 1 view .LVU175
 689 0188 7047     		bx	lr
 690              	.L51:
 691 018a 00BF     		.align	2
 692              	.L50:
 693 018c 00000000 		.word	HAL_CAN_RxFifo0MsgPendingCallback
 694 0190 00000000 		.word	HAL_CAN_RxFifo0FullCallback
 695 0194 00000000 		.word	HAL_CAN_RxFifo1MsgPendingCallback
 696 0198 00000000 		.word	HAL_CAN_RxFifo1FullCallback
 697 019c 00000000 		.word	HAL_CAN_TxMailbox0CompleteCallback
 698 01a0 00000000 		.word	HAL_CAN_TxMailbox1CompleteCallback
 699 01a4 00000000 		.word	HAL_CAN_TxMailbox2CompleteCallback
 700 01a8 00000000 		.word	HAL_CAN_TxMailbox0AbortCallback
 701 01ac 00000000 		.word	HAL_CAN_TxMailbox1AbortCallback
 702 01b0 00000000 		.word	HAL_CAN_TxMailbox2AbortCallback
 703 01b4 00000000 		.word	HAL_CAN_SleepCallback
 704 01b8 00000000 		.word	HAL_CAN_WakeUpFromRxMsgCallback
 705 01bc 00000000 		.word	HAL_CAN_ErrorCallback
 706 01c0 00000000 		.word	HAL_CAN_MspInit
 707              		.cfi_endproc
 708              	.LFE65:
 710              		.section	.text.HAL_CAN_RegisterCallback,"ax",%progbits
 711              		.align	1
 712              		.global	HAL_CAN_RegisterCallback
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 717              	HAL_CAN_RegisterCallback:
 718              	.LVL28:
 719              	.LFB69:
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/ccCZwBwi.s 			page 56


 720              		.loc 1 559 1 is_stmt 1 view -0
 721              		.cfi_startproc
 722              		@ args = 0, pretend = 0, frame = 0
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724              		@ link register save eliminated.
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 725              		.loc 1 559 1 is_stmt 0 view .LVU177
 726 0000 0346     		mov	r3, r0
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 727              		.loc 1 560 3 is_stmt 1 view .LVU178
 728              	.LVL29:
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 729              		.loc 1 562 3 view .LVU179
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 730              		.loc 1 562 6 is_stmt 0 view .LVU180
 731 0002 B2B1     		cbz	r2, .L81
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 732              		.loc 1 559 1 view .LVU181
 733 0004 10B4     		push	{r4}
 734              		.cfi_def_cfa_offset 4
 735              		.cfi_offset 4, -4
 736 0006 1446     		mov	r4, r2
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 737              		.loc 1 570 3 is_stmt 1 view .LVU182
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 738              		.loc 1 570 11 is_stmt 0 view .LVU183
 739 0008 90F82000 		ldrb	r0, [r0, #32]	@ zero_extendqisi2
 740              	.LVL30:
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 741              		.loc 1 570 11 view .LVU184
 742 000c C0B2     		uxtb	r0, r0
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 743              		.loc 1 570 6 view .LVU185
 744 000e 0128     		cmp	r0, #1
 745 0010 15D0     		beq	.L82
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 746              		.loc 1 643 8 is_stmt 1 view .LVU186
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 747              		.loc 1 643 16 is_stmt 0 view .LVU187
 748 0012 93F82020 		ldrb	r2, [r3, #32]	@ zero_extendqisi2
 749              	.LVL31:
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 750              		.loc 1 643 11 view .LVU188
 751 0016 02F0FF00 		and	r0, r2, #255
 752 001a 002A     		cmp	r2, #0
 753 001c 51D1     		bne	.L73
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 754              		.loc 1 645 5 is_stmt 1 view .LVU189
 755 001e 0D29     		cmp	r1, #13
 756 0020 4BD0     		beq	.L74
 757 0022 0E29     		cmp	r1, #14
 758 0024 4BD0     		beq	.L75
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 759              		.loc 1 657 9 view .LVU190
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 760              		.loc 1 657 25 is_stmt 0 view .LVU191
 761 0026 5A6A     		ldr	r2, [r3, #36]
ARM GAS  /tmp/ccCZwBwi.s 			page 57


 762 0028 42F48002 		orr	r2, r2, #4194304
 763 002c 5A62     		str	r2, [r3, #36]
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 764              		.loc 1 660 9 is_stmt 1 view .LVU192
 765              	.LVL32:
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 766              		.loc 1 661 9 view .LVU193
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 767              		.loc 1 660 16 is_stmt 0 view .LVU194
 768 002e 0120     		movs	r0, #1
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 769              		.loc 1 661 9 view .LVU195
 770 0030 4CE0     		b	.L54
 771              	.LVL33:
 772              	.L81:
 773              		.cfi_def_cfa_offset 0
 774              		.cfi_restore 4
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 775              		.loc 1 565 5 is_stmt 1 view .LVU196
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 776              		.loc 1 565 21 is_stmt 0 view .LVU197
 777 0032 426A     		ldr	r2, [r0, #36]
 778              	.LVL34:
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 779              		.loc 1 565 21 view .LVU198
 780 0034 42F48002 		orr	r2, r2, #4194304
 781 0038 4262     		str	r2, [r0, #36]
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 782              		.loc 1 567 5 is_stmt 1 view .LVU199
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 783              		.loc 1 567 12 is_stmt 0 view .LVU200
 784 003a 0120     		movs	r0, #1
 785              	.LVL35:
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 786              		.loc 1 674 1 view .LVU201
 787 003c 7047     		bx	lr
 788              	.LVL36:
 789              	.L82:
 790              		.cfi_def_cfa_offset 4
 791              		.cfi_offset 4, -4
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 792              		.loc 1 572 5 is_stmt 1 view .LVU202
 793 003e 0E29     		cmp	r1, #14
 794 0040 36D8     		bhi	.L56
 795 0042 DFE801F0 		tbb	[pc, r1]
 796              	.LVL37:
 797              	.L58:
 798 0046 08       		.byte	(.L72-.L58)/2
 799 0047 0B       		.byte	(.L71-.L58)/2
 800 0048 0E       		.byte	(.L70-.L58)/2
 801 0049 11       		.byte	(.L69-.L58)/2
 802 004a 14       		.byte	(.L68-.L58)/2
 803 004b 17       		.byte	(.L67-.L58)/2
 804 004c 1A       		.byte	(.L66-.L58)/2
 805 004d 1D       		.byte	(.L65-.L58)/2
 806 004e 20       		.byte	(.L64-.L58)/2
 807 004f 23       		.byte	(.L63-.L58)/2
ARM GAS  /tmp/ccCZwBwi.s 			page 58


 808 0050 26       		.byte	(.L62-.L58)/2
 809 0051 29       		.byte	(.L61-.L58)/2
 810 0052 2C       		.byte	(.L60-.L58)/2
 811 0053 2F       		.byte	(.L59-.L58)/2
 812 0054 32       		.byte	(.L57-.L58)/2
 813 0055 00       		.p2align 1
 814              	.L72:
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 815              		.loc 1 575 9 view .LVU203
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 816              		.loc 1 575 42 is_stmt 0 view .LVU204
 817 0056 9C62     		str	r4, [r3, #40]
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 818              		.loc 1 576 9 is_stmt 1 view .LVU205
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 819              		.loc 1 560 21 is_stmt 0 view .LVU206
 820 0058 0846     		mov	r0, r1
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 821              		.loc 1 576 9 view .LVU207
 822 005a 37E0     		b	.L54
 823              	.L71:
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 824              		.loc 1 579 9 is_stmt 1 view .LVU208
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 825              		.loc 1 579 42 is_stmt 0 view .LVU209
 826 005c DC62     		str	r4, [r3, #44]
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 827              		.loc 1 580 9 is_stmt 1 view .LVU210
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 828              		.loc 1 560 21 is_stmt 0 view .LVU211
 829 005e 0020     		movs	r0, #0
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 830              		.loc 1 580 9 view .LVU212
 831 0060 34E0     		b	.L54
 832              	.L70:
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 833              		.loc 1 583 9 is_stmt 1 view .LVU213
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 834              		.loc 1 583 42 is_stmt 0 view .LVU214
 835 0062 1C63     		str	r4, [r3, #48]
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 836              		.loc 1 584 9 is_stmt 1 view .LVU215
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 837              		.loc 1 560 21 is_stmt 0 view .LVU216
 838 0064 0020     		movs	r0, #0
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 839              		.loc 1 584 9 view .LVU217
 840 0066 31E0     		b	.L54
 841              	.L69:
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 842              		.loc 1 587 9 is_stmt 1 view .LVU218
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 843              		.loc 1 587 39 is_stmt 0 view .LVU219
 844 0068 5C63     		str	r4, [r3, #52]
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 845              		.loc 1 588 9 is_stmt 1 view .LVU220
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 59


 846              		.loc 1 560 21 is_stmt 0 view .LVU221
 847 006a 0020     		movs	r0, #0
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 848              		.loc 1 588 9 view .LVU222
 849 006c 2EE0     		b	.L54
 850              	.L68:
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 851              		.loc 1 591 9 is_stmt 1 view .LVU223
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 852              		.loc 1 591 39 is_stmt 0 view .LVU224
 853 006e 9C63     		str	r4, [r3, #56]
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 854              		.loc 1 592 9 is_stmt 1 view .LVU225
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 855              		.loc 1 560 21 is_stmt 0 view .LVU226
 856 0070 0020     		movs	r0, #0
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 857              		.loc 1 592 9 view .LVU227
 858 0072 2BE0     		b	.L54
 859              	.L67:
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 860              		.loc 1 595 9 is_stmt 1 view .LVU228
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 861              		.loc 1 595 39 is_stmt 0 view .LVU229
 862 0074 DC63     		str	r4, [r3, #60]
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 863              		.loc 1 596 9 is_stmt 1 view .LVU230
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 864              		.loc 1 560 21 is_stmt 0 view .LVU231
 865 0076 0020     		movs	r0, #0
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 866              		.loc 1 596 9 view .LVU232
 867 0078 28E0     		b	.L54
 868              	.L66:
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 869              		.loc 1 599 9 is_stmt 1 view .LVU233
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 870              		.loc 1 599 41 is_stmt 0 view .LVU234
 871 007a 1C64     		str	r4, [r3, #64]
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 872              		.loc 1 600 9 is_stmt 1 view .LVU235
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 873              		.loc 1 560 21 is_stmt 0 view .LVU236
 874 007c 0020     		movs	r0, #0
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 875              		.loc 1 600 9 view .LVU237
 876 007e 25E0     		b	.L54
 877              	.L65:
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 878              		.loc 1 603 9 is_stmt 1 view .LVU238
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 879              		.loc 1 603 35 is_stmt 0 view .LVU239
 880 0080 5C64     		str	r4, [r3, #68]
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 881              		.loc 1 604 9 is_stmt 1 view .LVU240
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 882              		.loc 1 560 21 is_stmt 0 view .LVU241
ARM GAS  /tmp/ccCZwBwi.s 			page 60


 883 0082 0020     		movs	r0, #0
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 884              		.loc 1 604 9 view .LVU242
 885 0084 22E0     		b	.L54
 886              	.L64:
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 887              		.loc 1 607 9 is_stmt 1 view .LVU243
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 888              		.loc 1 607 41 is_stmt 0 view .LVU244
 889 0086 9C64     		str	r4, [r3, #72]
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 890              		.loc 1 608 9 is_stmt 1 view .LVU245
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 891              		.loc 1 560 21 is_stmt 0 view .LVU246
 892 0088 0020     		movs	r0, #0
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 893              		.loc 1 608 9 view .LVU247
 894 008a 1FE0     		b	.L54
 895              	.L63:
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 896              		.loc 1 611 9 is_stmt 1 view .LVU248
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 897              		.loc 1 611 35 is_stmt 0 view .LVU249
 898 008c DC64     		str	r4, [r3, #76]
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 899              		.loc 1 612 9 is_stmt 1 view .LVU250
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 900              		.loc 1 560 21 is_stmt 0 view .LVU251
 901 008e 0020     		movs	r0, #0
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 902              		.loc 1 612 9 view .LVU252
 903 0090 1CE0     		b	.L54
 904              	.L62:
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 905              		.loc 1 615 9 is_stmt 1 view .LVU253
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 906              		.loc 1 615 29 is_stmt 0 view .LVU254
 907 0092 1C65     		str	r4, [r3, #80]
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 908              		.loc 1 616 9 is_stmt 1 view .LVU255
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 909              		.loc 1 560 21 is_stmt 0 view .LVU256
 910 0094 0020     		movs	r0, #0
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 911              		.loc 1 616 9 view .LVU257
 912 0096 19E0     		b	.L54
 913              	.L61:
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 914              		.loc 1 619 9 is_stmt 1 view .LVU258
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 915              		.loc 1 619 39 is_stmt 0 view .LVU259
 916 0098 5C65     		str	r4, [r3, #84]
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 917              		.loc 1 620 9 is_stmt 1 view .LVU260
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 918              		.loc 1 560 21 is_stmt 0 view .LVU261
 919 009a 0020     		movs	r0, #0
ARM GAS  /tmp/ccCZwBwi.s 			page 61


 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 920              		.loc 1 620 9 view .LVU262
 921 009c 16E0     		b	.L54
 922              	.L60:
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 923              		.loc 1 623 9 is_stmt 1 view .LVU263
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 924              		.loc 1 623 29 is_stmt 0 view .LVU264
 925 009e 9C65     		str	r4, [r3, #88]
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 926              		.loc 1 624 9 is_stmt 1 view .LVU265
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 927              		.loc 1 560 21 is_stmt 0 view .LVU266
 928 00a0 0020     		movs	r0, #0
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 929              		.loc 1 624 9 view .LVU267
 930 00a2 13E0     		b	.L54
 931              	.L59:
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 932              		.loc 1 627 9 is_stmt 1 view .LVU268
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 933              		.loc 1 627 31 is_stmt 0 view .LVU269
 934 00a4 DC65     		str	r4, [r3, #92]
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 935              		.loc 1 628 9 is_stmt 1 view .LVU270
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 936              		.loc 1 560 21 is_stmt 0 view .LVU271
 937 00a6 0020     		movs	r0, #0
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 938              		.loc 1 628 9 view .LVU272
 939 00a8 10E0     		b	.L54
 940              	.L57:
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 941              		.loc 1 631 9 is_stmt 1 view .LVU273
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 942              		.loc 1 631 33 is_stmt 0 view .LVU274
 943 00aa 1C66     		str	r4, [r3, #96]
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 944              		.loc 1 632 9 is_stmt 1 view .LVU275
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 945              		.loc 1 560 21 is_stmt 0 view .LVU276
 946 00ac 0020     		movs	r0, #0
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 947              		.loc 1 632 9 view .LVU277
 948 00ae 0DE0     		b	.L54
 949              	.L56:
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 950              		.loc 1 636 9 is_stmt 1 view .LVU278
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 951              		.loc 1 636 25 is_stmt 0 view .LVU279
 952 00b0 5A6A     		ldr	r2, [r3, #36]
 953 00b2 42F48002 		orr	r2, r2, #4194304
 954 00b6 5A62     		str	r2, [r3, #36]
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 955              		.loc 1 639 9 is_stmt 1 view .LVU280
 956              	.LVL38:
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /tmp/ccCZwBwi.s 			page 62


 957              		.loc 1 640 9 view .LVU281
 958 00b8 08E0     		b	.L54
 959              	.LVL39:
 960              	.L74:
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 961              		.loc 1 648 9 view .LVU282
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 962              		.loc 1 648 31 is_stmt 0 view .LVU283
 963 00ba DC65     		str	r4, [r3, #92]
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 964              		.loc 1 649 9 is_stmt 1 view .LVU284
 965 00bc 06E0     		b	.L54
 966              	.L75:
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 967              		.loc 1 652 9 view .LVU285
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 968              		.loc 1 652 33 is_stmt 0 view .LVU286
 969 00be 1C66     		str	r4, [r3, #96]
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 970              		.loc 1 653 9 is_stmt 1 view .LVU287
 971 00c0 04E0     		b	.L54
 972              	.L73:
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 973              		.loc 1 667 5 view .LVU288
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 974              		.loc 1 667 21 is_stmt 0 view .LVU289
 975 00c2 5A6A     		ldr	r2, [r3, #36]
 976 00c4 42F48002 		orr	r2, r2, #4194304
 977 00c8 5A62     		str	r2, [r3, #36]
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 978              		.loc 1 670 5 is_stmt 1 view .LVU290
 979              	.LVL40:
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 980              		.loc 1 670 12 is_stmt 0 view .LVU291
 981 00ca 0120     		movs	r0, #1
 982              	.LVL41:
 983              	.L54:
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 984              		.loc 1 674 1 view .LVU292
 985 00cc 10BC     		pop	{r4}
 986              		.cfi_restore 4
 987              		.cfi_def_cfa_offset 0
 988              	.LVL42:
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 989              		.loc 1 674 1 view .LVU293
 990 00ce 7047     		bx	lr
 991              		.cfi_endproc
 992              	.LFE69:
 994              		.section	.text.HAL_CAN_UnRegisterCallback,"ax",%progbits
 995              		.align	1
 996              		.global	HAL_CAN_UnRegisterCallback
 997              		.syntax unified
 998              		.thumb
 999              		.thumb_func
 1001              	HAL_CAN_UnRegisterCallback:
 1002              	.LVL43:
 1003              	.LFB70:
ARM GAS  /tmp/ccCZwBwi.s 			page 63


 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 1004              		.loc 1 701 1 is_stmt 1 view -0
 1005              		.cfi_startproc
 1006              		@ args = 0, pretend = 0, frame = 0
 1007              		@ frame_needed = 0, uses_anonymous_args = 0
 1008              		@ link register save eliminated.
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 1009              		.loc 1 701 1 is_stmt 0 view .LVU295
 1010 0000 0246     		mov	r2, r0
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1011              		.loc 1 702 3 is_stmt 1 view .LVU296
 1012              	.LVL44:
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1013              		.loc 1 704 3 view .LVU297
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1014              		.loc 1 704 11 is_stmt 0 view .LVU298
 1015 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1016 0006 D8B2     		uxtb	r0, r3
 1017              	.LVL45:
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1018              		.loc 1 704 6 view .LVU299
 1019 0008 0128     		cmp	r0, #1
 1020 000a 0FD0     		beq	.L108
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1021              		.loc 1 777 8 is_stmt 1 view .LVU300
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1022              		.loc 1 777 16 is_stmt 0 view .LVU301
 1023 000c 92F82030 		ldrb	r3, [r2, #32]	@ zero_extendqisi2
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1024              		.loc 1 777 11 view .LVU302
 1025 0010 03F0FF00 		and	r0, r3, #255
 1026 0014 002B     		cmp	r3, #0
 1027 0016 5CD1     		bne	.L103
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1028              		.loc 1 779 5 is_stmt 1 view .LVU303
 1029 0018 0D29     		cmp	r1, #13
 1030 001a 54D0     		beq	.L104
 1031 001c 0E29     		cmp	r1, #14
 1032 001e 55D0     		beq	.L105
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1033              		.loc 1 791 9 view .LVU304
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1034              		.loc 1 791 25 is_stmt 0 view .LVU305
 1035 0020 536A     		ldr	r3, [r2, #36]
 1036 0022 43F48003 		orr	r3, r3, #4194304
 1037 0026 5362     		str	r3, [r2, #36]
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1038              		.loc 1 794 9 is_stmt 1 view .LVU306
 1039              	.LVL46:
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1040              		.loc 1 795 9 view .LVU307
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1041              		.loc 1 794 16 is_stmt 0 view .LVU308
 1042 0028 0120     		movs	r0, #1
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1043              		.loc 1 795 9 view .LVU309
 1044 002a 7047     		bx	lr
ARM GAS  /tmp/ccCZwBwi.s 			page 64


 1045              	.LVL47:
 1046              	.L108:
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1047              		.loc 1 706 5 is_stmt 1 view .LVU310
 1048 002c 0E29     		cmp	r1, #14
 1049 002e 45D8     		bhi	.L85
 1050 0030 DFE801F0 		tbb	[pc, r1]
 1051              	.L87:
 1052 0034 08       		.byte	(.L101-.L87)/2
 1053 0035 0C       		.byte	(.L100-.L87)/2
 1054 0036 10       		.byte	(.L99-.L87)/2
 1055 0037 14       		.byte	(.L98-.L87)/2
 1056 0038 18       		.byte	(.L97-.L87)/2
 1057 0039 1C       		.byte	(.L96-.L87)/2
 1058 003a 20       		.byte	(.L95-.L87)/2
 1059 003b 24       		.byte	(.L94-.L87)/2
 1060 003c 28       		.byte	(.L93-.L87)/2
 1061 003d 2C       		.byte	(.L92-.L87)/2
 1062 003e 30       		.byte	(.L91-.L87)/2
 1063 003f 34       		.byte	(.L90-.L87)/2
 1064 0040 38       		.byte	(.L89-.L87)/2
 1065 0041 3C       		.byte	(.L88-.L87)/2
 1066 0042 40       		.byte	(.L86-.L87)/2
 1067 0043 00       		.p2align 1
 1068              	.L101:
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1069              		.loc 1 709 9 view .LVU311
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1070              		.loc 1 709 42 is_stmt 0 view .LVU312
 1071 0044 264B     		ldr	r3, .L109
 1072 0046 9362     		str	r3, [r2, #40]
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1073              		.loc 1 710 9 is_stmt 1 view .LVU313
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1074              		.loc 1 702 21 is_stmt 0 view .LVU314
 1075 0048 0846     		mov	r0, r1
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1076              		.loc 1 710 9 view .LVU315
 1077 004a 7047     		bx	lr
 1078              	.L100:
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1079              		.loc 1 713 9 is_stmt 1 view .LVU316
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1080              		.loc 1 713 42 is_stmt 0 view .LVU317
 1081 004c 254B     		ldr	r3, .L109+4
 1082 004e D362     		str	r3, [r2, #44]
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1083              		.loc 1 714 9 is_stmt 1 view .LVU318
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1084              		.loc 1 702 21 is_stmt 0 view .LVU319
 1085 0050 0020     		movs	r0, #0
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1086              		.loc 1 714 9 view .LVU320
 1087 0052 7047     		bx	lr
 1088              	.L99:
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1089              		.loc 1 717 9 is_stmt 1 view .LVU321
ARM GAS  /tmp/ccCZwBwi.s 			page 65


 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1090              		.loc 1 717 42 is_stmt 0 view .LVU322
 1091 0054 244B     		ldr	r3, .L109+8
 1092 0056 1363     		str	r3, [r2, #48]
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1093              		.loc 1 718 9 is_stmt 1 view .LVU323
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1094              		.loc 1 702 21 is_stmt 0 view .LVU324
 1095 0058 0020     		movs	r0, #0
 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1096              		.loc 1 718 9 view .LVU325
 1097 005a 7047     		bx	lr
 1098              	.L98:
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1099              		.loc 1 721 9 is_stmt 1 view .LVU326
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1100              		.loc 1 721 39 is_stmt 0 view .LVU327
 1101 005c 234B     		ldr	r3, .L109+12
 1102 005e 5363     		str	r3, [r2, #52]
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1103              		.loc 1 722 9 is_stmt 1 view .LVU328
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1104              		.loc 1 702 21 is_stmt 0 view .LVU329
 1105 0060 0020     		movs	r0, #0
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1106              		.loc 1 722 9 view .LVU330
 1107 0062 7047     		bx	lr
 1108              	.L97:
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1109              		.loc 1 725 9 is_stmt 1 view .LVU331
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1110              		.loc 1 725 39 is_stmt 0 view .LVU332
 1111 0064 224B     		ldr	r3, .L109+16
 1112 0066 9363     		str	r3, [r2, #56]
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1113              		.loc 1 726 9 is_stmt 1 view .LVU333
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1114              		.loc 1 702 21 is_stmt 0 view .LVU334
 1115 0068 0020     		movs	r0, #0
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1116              		.loc 1 726 9 view .LVU335
 1117 006a 7047     		bx	lr
 1118              	.L96:
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1119              		.loc 1 729 9 is_stmt 1 view .LVU336
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1120              		.loc 1 729 39 is_stmt 0 view .LVU337
 1121 006c 214B     		ldr	r3, .L109+20
 1122 006e D363     		str	r3, [r2, #60]
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1123              		.loc 1 730 9 is_stmt 1 view .LVU338
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1124              		.loc 1 702 21 is_stmt 0 view .LVU339
 1125 0070 0020     		movs	r0, #0
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1126              		.loc 1 730 9 view .LVU340
 1127 0072 7047     		bx	lr
ARM GAS  /tmp/ccCZwBwi.s 			page 66


 1128              	.L95:
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1129              		.loc 1 733 9 is_stmt 1 view .LVU341
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1130              		.loc 1 733 41 is_stmt 0 view .LVU342
 1131 0074 204B     		ldr	r3, .L109+24
 1132 0076 1364     		str	r3, [r2, #64]
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1133              		.loc 1 734 9 is_stmt 1 view .LVU343
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1134              		.loc 1 702 21 is_stmt 0 view .LVU344
 1135 0078 0020     		movs	r0, #0
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1136              		.loc 1 734 9 view .LVU345
 1137 007a 7047     		bx	lr
 1138              	.L94:
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1139              		.loc 1 737 9 is_stmt 1 view .LVU346
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1140              		.loc 1 737 35 is_stmt 0 view .LVU347
 1141 007c 1F4B     		ldr	r3, .L109+28
 1142 007e 5364     		str	r3, [r2, #68]
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1143              		.loc 1 738 9 is_stmt 1 view .LVU348
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1144              		.loc 1 702 21 is_stmt 0 view .LVU349
 1145 0080 0020     		movs	r0, #0
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1146              		.loc 1 738 9 view .LVU350
 1147 0082 7047     		bx	lr
 1148              	.L93:
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1149              		.loc 1 741 9 is_stmt 1 view .LVU351
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1150              		.loc 1 741 41 is_stmt 0 view .LVU352
 1151 0084 1E4B     		ldr	r3, .L109+32
 1152 0086 9364     		str	r3, [r2, #72]
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1153              		.loc 1 742 9 is_stmt 1 view .LVU353
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1154              		.loc 1 702 21 is_stmt 0 view .LVU354
 1155 0088 0020     		movs	r0, #0
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1156              		.loc 1 742 9 view .LVU355
 1157 008a 7047     		bx	lr
 1158              	.L92:
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1159              		.loc 1 745 9 is_stmt 1 view .LVU356
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1160              		.loc 1 745 35 is_stmt 0 view .LVU357
 1161 008c 1D4B     		ldr	r3, .L109+36
 1162 008e D364     		str	r3, [r2, #76]
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1163              		.loc 1 746 9 is_stmt 1 view .LVU358
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1164              		.loc 1 702 21 is_stmt 0 view .LVU359
 1165 0090 0020     		movs	r0, #0
ARM GAS  /tmp/ccCZwBwi.s 			page 67


 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1166              		.loc 1 746 9 view .LVU360
 1167 0092 7047     		bx	lr
 1168              	.L91:
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1169              		.loc 1 749 9 is_stmt 1 view .LVU361
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1170              		.loc 1 749 29 is_stmt 0 view .LVU362
 1171 0094 1C4B     		ldr	r3, .L109+40
 1172 0096 1365     		str	r3, [r2, #80]
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1173              		.loc 1 750 9 is_stmt 1 view .LVU363
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1174              		.loc 1 702 21 is_stmt 0 view .LVU364
 1175 0098 0020     		movs	r0, #0
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1176              		.loc 1 750 9 view .LVU365
 1177 009a 7047     		bx	lr
 1178              	.L90:
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1179              		.loc 1 753 9 is_stmt 1 view .LVU366
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1180              		.loc 1 753 39 is_stmt 0 view .LVU367
 1181 009c 1B4B     		ldr	r3, .L109+44
 1182 009e 5365     		str	r3, [r2, #84]
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1183              		.loc 1 754 9 is_stmt 1 view .LVU368
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1184              		.loc 1 702 21 is_stmt 0 view .LVU369
 1185 00a0 0020     		movs	r0, #0
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1186              		.loc 1 754 9 view .LVU370
 1187 00a2 7047     		bx	lr
 1188              	.L89:
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1189              		.loc 1 757 9 is_stmt 1 view .LVU371
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1190              		.loc 1 757 29 is_stmt 0 view .LVU372
 1191 00a4 1A4B     		ldr	r3, .L109+48
 1192 00a6 9365     		str	r3, [r2, #88]
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1193              		.loc 1 758 9 is_stmt 1 view .LVU373
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1194              		.loc 1 702 21 is_stmt 0 view .LVU374
 1195 00a8 0020     		movs	r0, #0
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1196              		.loc 1 758 9 view .LVU375
 1197 00aa 7047     		bx	lr
 1198              	.L88:
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1199              		.loc 1 761 9 is_stmt 1 view .LVU376
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1200              		.loc 1 761 31 is_stmt 0 view .LVU377
 1201 00ac 194B     		ldr	r3, .L109+52
 1202 00ae D365     		str	r3, [r2, #92]
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1203              		.loc 1 762 9 is_stmt 1 view .LVU378
ARM GAS  /tmp/ccCZwBwi.s 			page 68


 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1204              		.loc 1 702 21 is_stmt 0 view .LVU379
 1205 00b0 0020     		movs	r0, #0
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1206              		.loc 1 762 9 view .LVU380
 1207 00b2 7047     		bx	lr
 1208              	.L86:
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1209              		.loc 1 765 9 is_stmt 1 view .LVU381
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1210              		.loc 1 765 33 is_stmt 0 view .LVU382
 1211 00b4 184B     		ldr	r3, .L109+56
 1212 00b6 1366     		str	r3, [r2, #96]
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1213              		.loc 1 766 9 is_stmt 1 view .LVU383
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1214              		.loc 1 702 21 is_stmt 0 view .LVU384
 1215 00b8 0020     		movs	r0, #0
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1216              		.loc 1 766 9 view .LVU385
 1217 00ba 7047     		bx	lr
 1218              	.L85:
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1219              		.loc 1 770 9 is_stmt 1 view .LVU386
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1220              		.loc 1 770 25 is_stmt 0 view .LVU387
 1221 00bc 536A     		ldr	r3, [r2, #36]
 1222 00be 43F48003 		orr	r3, r3, #4194304
 1223 00c2 5362     		str	r3, [r2, #36]
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1224              		.loc 1 773 9 is_stmt 1 view .LVU388
 1225              	.LVL48:
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1226              		.loc 1 774 9 view .LVU389
 1227 00c4 7047     		bx	lr
 1228              	.LVL49:
 1229              	.L104:
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1230              		.loc 1 782 9 view .LVU390
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1231              		.loc 1 782 31 is_stmt 0 view .LVU391
 1232 00c6 134B     		ldr	r3, .L109+52
 1233 00c8 D365     		str	r3, [r2, #92]
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1234              		.loc 1 783 9 is_stmt 1 view .LVU392
 1235 00ca 7047     		bx	lr
 1236              	.L105:
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1237              		.loc 1 786 9 view .LVU393
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         break;
 1238              		.loc 1 786 33 is_stmt 0 view .LVU394
 1239 00cc 124B     		ldr	r3, .L109+56
 1240 00ce 1366     		str	r3, [r2, #96]
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1241              		.loc 1 787 9 is_stmt 1 view .LVU395
 1242 00d0 7047     		bx	lr
 1243              	.L103:
ARM GAS  /tmp/ccCZwBwi.s 			page 69


 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1244              		.loc 1 801 5 view .LVU396
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1245              		.loc 1 801 21 is_stmt 0 view .LVU397
 1246 00d2 536A     		ldr	r3, [r2, #36]
 1247 00d4 43F48003 		orr	r3, r3, #4194304
 1248 00d8 5362     		str	r3, [r2, #36]
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1249              		.loc 1 804 5 is_stmt 1 view .LVU398
 1250              	.LVL50:
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1251              		.loc 1 804 12 is_stmt 0 view .LVU399
 1252 00da 0120     		movs	r0, #1
 1253              	.LVL51:
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1254              		.loc 1 807 3 is_stmt 1 view .LVU400
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif /* USE_HAL_CAN_REGISTER_CALLBACKS */
 1255              		.loc 1 808 1 is_stmt 0 view .LVU401
 1256 00dc 7047     		bx	lr
 1257              	.L110:
 1258 00de 00BF     		.align	2
 1259              	.L109:
 1260 00e0 00000000 		.word	HAL_CAN_TxMailbox0CompleteCallback
 1261 00e4 00000000 		.word	HAL_CAN_TxMailbox1CompleteCallback
 1262 00e8 00000000 		.word	HAL_CAN_TxMailbox2CompleteCallback
 1263 00ec 00000000 		.word	HAL_CAN_TxMailbox0AbortCallback
 1264 00f0 00000000 		.word	HAL_CAN_TxMailbox1AbortCallback
 1265 00f4 00000000 		.word	HAL_CAN_TxMailbox2AbortCallback
 1266 00f8 00000000 		.word	HAL_CAN_RxFifo0MsgPendingCallback
 1267 00fc 00000000 		.word	HAL_CAN_RxFifo0FullCallback
 1268 0100 00000000 		.word	HAL_CAN_RxFifo1MsgPendingCallback
 1269 0104 00000000 		.word	HAL_CAN_RxFifo1FullCallback
 1270 0108 00000000 		.word	HAL_CAN_SleepCallback
 1271 010c 00000000 		.word	HAL_CAN_WakeUpFromRxMsgCallback
 1272 0110 00000000 		.word	HAL_CAN_ErrorCallback
 1273 0114 00000000 		.word	HAL_CAN_MspInit
 1274 0118 00000000 		.word	HAL_CAN_MspDeInit
 1275              		.cfi_endproc
 1276              	.LFE70:
 1278              		.section	.text.HAL_CAN_ConfigFilter,"ax",%progbits
 1279              		.align	1
 1280              		.global	HAL_CAN_ConfigFilter
 1281              		.syntax unified
 1282              		.thumb
 1283              		.thumb_func
 1285              	HAL_CAN_ConfigFilter:
 1286              	.LVL52:
 1287              	.LFB71:
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t filternbrbitpos;
 1288              		.loc 1 839 1 is_stmt 1 view -0
 1289              		.cfi_startproc
 1290              		@ args = 0, pretend = 0, frame = 0
 1291              		@ frame_needed = 0, uses_anonymous_args = 0
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   CAN_TypeDef *can_ip = hcan->Instance;
 1292              		.loc 1 840 3 view .LVU403
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1293              		.loc 1 841 3 view .LVU404
ARM GAS  /tmp/ccCZwBwi.s 			page 70


 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1294              		.loc 1 841 16 is_stmt 0 view .LVU405
 1295 0000 0268     		ldr	r2, [r0]
 1296              	.LVL53:
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1297              		.loc 1 842 3 is_stmt 1 view .LVU406
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1298              		.loc 1 842 24 is_stmt 0 view .LVU407
 1299 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1300              	.LVL54:
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1301              		.loc 1 844 3 is_stmt 1 view .LVU408
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1302              		.loc 1 844 38 is_stmt 0 view .LVU409
 1303 0006 013B     		subs	r3, r3, #1
 1304              	.LVL55:
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1305              		.loc 1 844 38 view .LVU410
 1306 0008 DBB2     		uxtb	r3, r3
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1307              		.loc 1 844 6 view .LVU411
 1308 000a 012B     		cmp	r3, #1
 1309 000c 05D9     		bls	.L125
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1310              		.loc 1 961 5 is_stmt 1 view .LVU412
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1311              		.loc 1 961 21 is_stmt 0 view .LVU413
 1312 000e 436A     		ldr	r3, [r0, #36]
 1313 0010 43F48023 		orr	r3, r3, #262144
 1314 0014 4362     		str	r3, [r0, #36]
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1315              		.loc 1 963 5 is_stmt 1 view .LVU414
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1316              		.loc 1 963 12 is_stmt 0 view .LVU415
 1317 0016 0120     		movs	r0, #1
 1318              	.LVL56:
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1319              		.loc 1 965 1 view .LVU416
 1320 0018 7047     		bx	lr
 1321              	.LVL57:
 1322              	.L125:
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t filternbrbitpos;
 1323              		.loc 1 839 1 view .LVU417
 1324 001a 10B5     		push	{r4, lr}
 1325              		.cfi_def_cfa_offset 8
 1326              		.cfi_offset 4, -8
 1327              		.cfi_offset 14, -4
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterIdLow));
 1328              		.loc 1 848 5 is_stmt 1 view .LVU418
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdHigh));
 1329              		.loc 1 849 5 view .LVU419
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ID_HALFWORD(sFilterConfig->FilterMaskIdLow));
 1330              		.loc 1 850 5 view .LVU420
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_MODE(sFilterConfig->FilterMode));
 1331              		.loc 1 851 5 view .LVU421
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_SCALE(sFilterConfig->FilterScale));
 1332              		.loc 1 852 5 view .LVU422
ARM GAS  /tmp/ccCZwBwi.s 			page 71


 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_FIFO(sFilterConfig->FilterFIFOAssignment));
 1333              		.loc 1 853 5 view .LVU423
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     assert_param(IS_CAN_FILTER_ACTIVATION(sFilterConfig->FilterActivation));
 1334              		.loc 1 854 5 view .LVU424
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1335              		.loc 1 855 5 view .LVU425
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #endif
 1336              		.loc 1 869 5 view .LVU426
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1337              		.loc 1 873 5 view .LVU427
 1338 001c D2F80032 		ldr	r3, [r2, #512]
 1339 0020 43F00103 		orr	r3, r3, #1
 1340 0024 C2F80032 		str	r3, [r2, #512]
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1341              		.loc 1 882 5 view .LVU428
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1342              		.loc 1 882 52 is_stmt 0 view .LVU429
 1343 0028 4B69     		ldr	r3, [r1, #20]
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1344              		.loc 1 882 65 view .LVU430
 1345 002a 03F01F03 		and	r3, r3, #31
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1346              		.loc 1 882 21 view .LVU431
 1347 002e 0120     		movs	r0, #1
 1348              	.LVL58:
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1349              		.loc 1 882 21 view .LVU432
 1350 0030 00FA03F3 		lsl	r3, r0, r3
 1351              	.LVL59:
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1352              		.loc 1 885 5 is_stmt 1 view .LVU433
 1353 0034 D2F81C02 		ldr	r0, [r2, #540]
 1354 0038 6FEA030C 		mvn	ip, r3
 1355 003c 20EA0300 		bic	r0, r0, r3
 1356 0040 C2F81C02 		str	r0, [r2, #540]
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1357              		.loc 1 888 5 view .LVU434
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1358              		.loc 1 888 22 is_stmt 0 view .LVU435
 1359 0044 C869     		ldr	r0, [r1, #28]
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1360              		.loc 1 888 8 view .LVU436
 1361 0046 C0B9     		cbnz	r0, .L113
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1362              		.loc 1 891 7 is_stmt 1 view .LVU437
 1363 0048 D2F80C02 		ldr	r0, [r2, #524]
 1364 004c 0CEA0000 		and	r0, ip, r0
 1365 0050 C2F80C02 		str	r0, [r2, #524]
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 1366              		.loc 1 895 7 view .LVU438
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1367              		.loc 1 897 22 is_stmt 0 view .LVU439
 1368 0054 8C88     		ldrh	r4, [r1, #4]
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 1369              		.loc 1 895 44 view .LVU440
 1370 0056 4869     		ldr	r0, [r1, #20]
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
ARM GAS  /tmp/ccCZwBwi.s 			page 72


 1371              		.loc 1 896 75 view .LVU441
 1372 0058 D1F80CE0 		ldr	lr, [r1, #12]
 1373 005c 44EA0E44 		orr	r4, r4, lr, lsl #16
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow) << 16U) |
 1374              		.loc 1 895 62 view .LVU442
 1375 0060 4830     		adds	r0, r0, #72
 1376 0062 42F83040 		str	r4, [r2, r0, lsl #3]
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 1377              		.loc 1 901 7 is_stmt 1 view .LVU443
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1378              		.loc 1 903 22 is_stmt 0 view .LVU444
 1379 0066 0C88     		ldrh	r4, [r1]
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 1380              		.loc 1 901 44 view .LVU445
 1381 0068 4869     		ldr	r0, [r1, #20]
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh);
 1382              		.loc 1 902 76 view .LVU446
 1383 006a D1F808E0 		ldr	lr, [r1, #8]
 1384 006e 44EA0E44 		orr	r4, r4, lr, lsl #16
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 1385              		.loc 1 901 62 view .LVU447
 1386 0072 4830     		adds	r0, r0, #72
 1387 0074 02EBC000 		add	r0, r2, r0, lsl #3
 1388 0078 4460     		str	r4, [r0, #4]
 1389              	.L113:
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1390              		.loc 1 906 5 is_stmt 1 view .LVU448
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1391              		.loc 1 906 22 is_stmt 0 view .LVU449
 1392 007a C869     		ldr	r0, [r1, #28]
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1393              		.loc 1 906 8 view .LVU450
 1394 007c 0128     		cmp	r0, #1
 1395 007e 1AD0     		beq	.L126
 1396              	.L114:
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1397              		.loc 1 923 5 is_stmt 1 view .LVU451
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1398              		.loc 1 923 22 is_stmt 0 view .LVU452
 1399 0080 8869     		ldr	r0, [r1, #24]
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1400              		.loc 1 923 8 view .LVU453
 1401 0082 88BB     		cbnz	r0, .L115
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1402              		.loc 1 926 7 is_stmt 1 view .LVU454
 1403 0084 D2F80402 		ldr	r0, [r2, #516]
 1404 0088 0CEA0000 		and	r0, ip, r0
 1405 008c C2F80402 		str	r0, [r2, #516]
 1406              	.L116:
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1407              		.loc 1 935 5 view .LVU455
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1408              		.loc 1 935 22 is_stmt 0 view .LVU456
 1409 0090 0869     		ldr	r0, [r1, #16]
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1410              		.loc 1 935 8 view .LVU457
 1411 0092 78BB     		cbnz	r0, .L117
ARM GAS  /tmp/ccCZwBwi.s 			page 73


 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1412              		.loc 1 938 7 is_stmt 1 view .LVU458
 1413 0094 D2F81402 		ldr	r0, [r2, #532]
 1414 0098 0CEA0000 		and	r0, ip, r0
 1415 009c C2F81402 		str	r0, [r2, #532]
 1416              	.L118:
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1417              		.loc 1 947 5 view .LVU459
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1418              		.loc 1 947 22 is_stmt 0 view .LVU460
 1419 00a0 096A     		ldr	r1, [r1, #32]
 1420              	.LVL60:
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1421              		.loc 1 947 8 view .LVU461
 1422 00a2 0129     		cmp	r1, #1
 1423 00a4 2CD0     		beq	.L127
 1424              	.LVL61:
 1425              	.L119:
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1426              		.loc 1 953 5 is_stmt 1 view .LVU462
 1427 00a6 D2F80032 		ldr	r3, [r2, #512]
 1428 00aa 23F00103 		bic	r3, r3, #1
 1429 00ae C2F80032 		str	r3, [r2, #512]
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1430              		.loc 1 956 5 view .LVU463
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1431              		.loc 1 956 12 is_stmt 0 view .LVU464
 1432 00b2 0020     		movs	r0, #0
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1433              		.loc 1 965 1 view .LVU465
 1434 00b4 10BD     		pop	{r4, pc}
 1435              	.LVL62:
 1436              	.L126:
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1437              		.loc 1 909 7 is_stmt 1 view .LVU466
 1438 00b6 D2F80C02 		ldr	r0, [r2, #524]
 1439 00ba 1843     		orrs	r0, r0, r3
 1440 00bc C2F80C02 		str	r0, [r2, #524]
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 1441              		.loc 1 912 7 view .LVU467
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1442              		.loc 1 914 22 is_stmt 0 view .LVU468
 1443 00c0 8C88     		ldrh	r4, [r1, #4]
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 1444              		.loc 1 912 44 view .LVU469
 1445 00c2 4869     		ldr	r0, [r1, #20]
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdLow);
 1446              		.loc 1 913 72 view .LVU470
 1447 00c4 D1F800E0 		ldr	lr, [r1]
 1448 00c8 44EA0E44 		orr	r4, r4, lr, lsl #16
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterIdHigh) << 16U) |
 1449              		.loc 1 912 62 view .LVU471
 1450 00cc 4830     		adds	r0, r0, #72
 1451 00ce 42F83040 		str	r4, [r2, r0, lsl #3]
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 1452              		.loc 1 917 7 is_stmt 1 view .LVU472
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /tmp/ccCZwBwi.s 			page 74


 1453              		.loc 1 919 22 is_stmt 0 view .LVU473
 1454 00d2 8C89     		ldrh	r4, [r1, #12]
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 1455              		.loc 1 917 44 view .LVU474
 1456 00d4 4869     		ldr	r0, [r1, #20]
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         (0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdLow);
 1457              		.loc 1 918 76 view .LVU475
 1458 00d6 D1F808E0 		ldr	lr, [r1, #8]
 1459 00da 44EA0E44 		orr	r4, r4, lr, lsl #16
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((0x0000FFFFU & (uint32_t)sFilterConfig->FilterMaskIdHigh) << 16U) |
 1460              		.loc 1 917 62 view .LVU476
 1461 00de 4830     		adds	r0, r0, #72
 1462 00e0 02EBC000 		add	r0, r2, r0, lsl #3
 1463 00e4 4460     		str	r4, [r0, #4]
 1464 00e6 CBE7     		b	.L114
 1465              	.L115:
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1466              		.loc 1 931 7 is_stmt 1 view .LVU477
 1467 00e8 D2F80402 		ldr	r0, [r2, #516]
 1468 00ec 1843     		orrs	r0, r0, r3
 1469 00ee C2F80402 		str	r0, [r2, #516]
 1470 00f2 CDE7     		b	.L116
 1471              	.L117:
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1472              		.loc 1 943 7 view .LVU478
 1473 00f4 D2F81402 		ldr	r0, [r2, #532]
 1474 00f8 1843     		orrs	r0, r0, r3
 1475 00fa C2F81402 		str	r0, [r2, #532]
 1476 00fe CFE7     		b	.L118
 1477              	.LVL63:
 1478              	.L127:
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1479              		.loc 1 949 7 view .LVU479
 1480 0100 D2F81C12 		ldr	r1, [r2, #540]
 1481 0104 0B43     		orrs	r3, r3, r1
 1482              	.LVL64:
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1483              		.loc 1 949 7 is_stmt 0 view .LVU480
 1484 0106 C2F81C32 		str	r3, [r2, #540]
 1485 010a CCE7     		b	.L119
 1486              		.cfi_endproc
 1487              	.LFE71:
 1489              		.section	.text.HAL_CAN_Start,"ax",%progbits
 1490              		.align	1
 1491              		.global	HAL_CAN_Start
 1492              		.syntax unified
 1493              		.thumb
 1494              		.thumb_func
 1496              	HAL_CAN_Start:
 1497              	.LVL65:
 1498              	.LFB72:
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
 1499              		.loc 1 1005 1 is_stmt 1 view -0
 1500              		.cfi_startproc
 1501              		@ args = 0, pretend = 0, frame = 0
 1502              		@ frame_needed = 0, uses_anonymous_args = 0
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
ARM GAS  /tmp/ccCZwBwi.s 			page 75


 1503              		.loc 1 1005 1 is_stmt 0 view .LVU482
 1504 0000 70B5     		push	{r4, r5, r6, lr}
 1505              		.cfi_def_cfa_offset 16
 1506              		.cfi_offset 4, -16
 1507              		.cfi_offset 5, -12
 1508              		.cfi_offset 6, -8
 1509              		.cfi_offset 14, -4
 1510 0002 0446     		mov	r4, r0
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1511              		.loc 1 1006 3 is_stmt 1 view .LVU483
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1512              		.loc 1 1008 3 view .LVU484
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1513              		.loc 1 1008 11 is_stmt 0 view .LVU485
 1514 0004 90F82050 		ldrb	r5, [r0, #32]	@ zero_extendqisi2
 1515 0008 EDB2     		uxtb	r5, r5
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1516              		.loc 1 1008 6 view .LVU486
 1517 000a 012D     		cmp	r5, #1
 1518 000c 06D0     		beq	.L134
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1519              		.loc 1 1044 5 is_stmt 1 view .LVU487
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1520              		.loc 1 1044 21 is_stmt 0 view .LVU488
 1521 000e 436A     		ldr	r3, [r0, #36]
 1522 0010 43F40023 		orr	r3, r3, #524288
 1523 0014 4362     		str	r3, [r0, #36]
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1524              		.loc 1 1046 5 is_stmt 1 view .LVU489
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1525              		.loc 1 1046 12 is_stmt 0 view .LVU490
 1526 0016 0125     		movs	r5, #1
 1527              	.LVL66:
 1528              	.L131:
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1529              		.loc 1 1048 1 view .LVU491
 1530 0018 2846     		mov	r0, r5
 1531 001a 70BD     		pop	{r4, r5, r6, pc}
 1532              	.LVL67:
 1533              	.L134:
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1534              		.loc 1 1011 5 is_stmt 1 view .LVU492
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1535              		.loc 1 1011 17 is_stmt 0 view .LVU493
 1536 001c 0223     		movs	r3, #2
 1537 001e 80F82030 		strb	r3, [r0, #32]
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1538              		.loc 1 1014 5 is_stmt 1 view .LVU494
 1539 0022 0268     		ldr	r2, [r0]
 1540 0024 1368     		ldr	r3, [r2]
 1541 0026 23F00103 		bic	r3, r3, #1
 1542 002a 1360     		str	r3, [r2]
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1543              		.loc 1 1017 5 view .LVU495
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1544              		.loc 1 1017 17 is_stmt 0 view .LVU496
 1545 002c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/ccCZwBwi.s 			page 76


 1546              	.LVL68:
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1547              		.loc 1 1017 17 view .LVU497
 1548 0030 0646     		mov	r6, r0
 1549              	.LVL69:
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1550              		.loc 1 1020 5 is_stmt 1 view .LVU498
 1551              	.L130:
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1552              		.loc 1 1020 49 view .LVU499
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1553              		.loc 1 1020 17 is_stmt 0 view .LVU500
 1554 0032 2368     		ldr	r3, [r4]
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1555              		.loc 1 1020 27 view .LVU501
 1556 0034 5B68     		ldr	r3, [r3, #4]
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1557              		.loc 1 1020 49 view .LVU502
 1558 0036 13F0010F 		tst	r3, #1
 1559 003a 0CD0     		beq	.L135
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1560              		.loc 1 1023 7 is_stmt 1 view .LVU503
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1561              		.loc 1 1023 12 is_stmt 0 view .LVU504
 1562 003c FFF7FEFF 		bl	HAL_GetTick
 1563              	.LVL70:
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1564              		.loc 1 1023 26 view .LVU505
 1565 0040 831B     		subs	r3, r0, r6
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1566              		.loc 1 1023 10 view .LVU506
 1567 0042 0A2B     		cmp	r3, #10
 1568 0044 F5D9     		bls	.L130
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1569              		.loc 1 1026 9 is_stmt 1 view .LVU507
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1570              		.loc 1 1026 25 is_stmt 0 view .LVU508
 1571 0046 636A     		ldr	r3, [r4, #36]
 1572 0048 43F40033 		orr	r3, r3, #131072
 1573 004c 6362     		str	r3, [r4, #36]
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1574              		.loc 1 1029 9 is_stmt 1 view .LVU509
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1575              		.loc 1 1029 21 is_stmt 0 view .LVU510
 1576 004e 0523     		movs	r3, #5
 1577 0050 84F82030 		strb	r3, [r4, #32]
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1578              		.loc 1 1031 9 is_stmt 1 view .LVU511
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1579              		.loc 1 1031 16 is_stmt 0 view .LVU512
 1580 0054 E0E7     		b	.L131
 1581              	.L135:
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1582              		.loc 1 1036 5 is_stmt 1 view .LVU513
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1583              		.loc 1 1036 21 is_stmt 0 view .LVU514
 1584 0056 0025     		movs	r5, #0
ARM GAS  /tmp/ccCZwBwi.s 			page 77


 1585 0058 6562     		str	r5, [r4, #36]
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1586              		.loc 1 1039 5 is_stmt 1 view .LVU515
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1587              		.loc 1 1039 12 is_stmt 0 view .LVU516
 1588 005a DDE7     		b	.L131
 1589              		.cfi_endproc
 1590              	.LFE72:
 1592              		.section	.text.HAL_CAN_Stop,"ax",%progbits
 1593              		.align	1
 1594              		.global	HAL_CAN_Stop
 1595              		.syntax unified
 1596              		.thumb
 1597              		.thumb_func
 1599              	HAL_CAN_Stop:
 1600              	.LVL71:
 1601              	.LFB73:
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
 1602              		.loc 1 1057 1 is_stmt 1 view -0
 1603              		.cfi_startproc
 1604              		@ args = 0, pretend = 0, frame = 0
 1605              		@ frame_needed = 0, uses_anonymous_args = 0
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tickstart;
 1606              		.loc 1 1057 1 is_stmt 0 view .LVU518
 1607 0000 38B5     		push	{r3, r4, r5, lr}
 1608              		.cfi_def_cfa_offset 16
 1609              		.cfi_offset 3, -16
 1610              		.cfi_offset 4, -12
 1611              		.cfi_offset 5, -8
 1612              		.cfi_offset 14, -4
 1613 0002 0446     		mov	r4, r0
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1614              		.loc 1 1058 3 is_stmt 1 view .LVU519
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1615              		.loc 1 1060 3 view .LVU520
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1616              		.loc 1 1060 11 is_stmt 0 view .LVU521
 1617 0004 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1618 0008 DBB2     		uxtb	r3, r3
1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1619              		.loc 1 1060 6 view .LVU522
 1620 000a 022B     		cmp	r3, #2
 1621 000c 05D0     		beq	.L142
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1622              		.loc 1 1096 5 is_stmt 1 view .LVU523
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1623              		.loc 1 1096 21 is_stmt 0 view .LVU524
 1624 000e 436A     		ldr	r3, [r0, #36]
 1625 0010 43F48013 		orr	r3, r3, #1048576
 1626 0014 4362     		str	r3, [r0, #36]
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1627              		.loc 1 1098 5 is_stmt 1 view .LVU525
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1628              		.loc 1 1098 12 is_stmt 0 view .LVU526
 1629 0016 0120     		movs	r0, #1
 1630              	.LVL72:
 1631              	.L139:
ARM GAS  /tmp/ccCZwBwi.s 			page 78


1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1632              		.loc 1 1100 1 view .LVU527
 1633 0018 38BD     		pop	{r3, r4, r5, pc}
 1634              	.LVL73:
 1635              	.L142:
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1636              		.loc 1 1063 5 is_stmt 1 view .LVU528
 1637 001a 0268     		ldr	r2, [r0]
 1638 001c 1368     		ldr	r3, [r2]
 1639 001e 43F00103 		orr	r3, r3, #1
 1640 0022 1360     		str	r3, [r2]
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1641              		.loc 1 1066 5 view .LVU529
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1642              		.loc 1 1066 17 is_stmt 0 view .LVU530
 1643 0024 FFF7FEFF 		bl	HAL_GetTick
 1644              	.LVL74:
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1645              		.loc 1 1066 17 view .LVU531
 1646 0028 0546     		mov	r5, r0
 1647              	.LVL75:
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1648              		.loc 1 1069 5 is_stmt 1 view .LVU532
 1649              	.L138:
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1650              		.loc 1 1069 49 view .LVU533
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1651              		.loc 1 1069 17 is_stmt 0 view .LVU534
 1652 002a 2368     		ldr	r3, [r4]
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1653              		.loc 1 1069 27 view .LVU535
 1654 002c 5A68     		ldr	r2, [r3, #4]
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1655              		.loc 1 1069 49 view .LVU536
 1656 002e 12F0010F 		tst	r2, #1
 1657 0032 0DD1     		bne	.L143
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1658              		.loc 1 1072 7 is_stmt 1 view .LVU537
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1659              		.loc 1 1072 12 is_stmt 0 view .LVU538
 1660 0034 FFF7FEFF 		bl	HAL_GetTick
 1661              	.LVL76:
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1662              		.loc 1 1072 26 view .LVU539
 1663 0038 431B     		subs	r3, r0, r5
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1664              		.loc 1 1072 10 view .LVU540
 1665 003a 0A2B     		cmp	r3, #10
 1666 003c F5D9     		bls	.L138
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1667              		.loc 1 1075 9 is_stmt 1 view .LVU541
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1668              		.loc 1 1075 25 is_stmt 0 view .LVU542
 1669 003e 636A     		ldr	r3, [r4, #36]
 1670 0040 43F40033 		orr	r3, r3, #131072
 1671 0044 6362     		str	r3, [r4, #36]
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 79


 1672              		.loc 1 1078 9 is_stmt 1 view .LVU543
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1673              		.loc 1 1078 21 is_stmt 0 view .LVU544
 1674 0046 0523     		movs	r3, #5
 1675 0048 84F82030 		strb	r3, [r4, #32]
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1676              		.loc 1 1080 9 is_stmt 1 view .LVU545
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1677              		.loc 1 1080 16 is_stmt 0 view .LVU546
 1678 004c 0120     		movs	r0, #1
 1679 004e E3E7     		b	.L139
 1680              	.L143:
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1681              		.loc 1 1085 5 is_stmt 1 view .LVU547
 1682 0050 1A68     		ldr	r2, [r3]
 1683 0052 22F00202 		bic	r2, r2, #2
 1684 0056 1A60     		str	r2, [r3]
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1685              		.loc 1 1088 5 view .LVU548
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1686              		.loc 1 1088 17 is_stmt 0 view .LVU549
 1687 0058 0123     		movs	r3, #1
 1688 005a 84F82030 		strb	r3, [r4, #32]
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1689              		.loc 1 1091 5 is_stmt 1 view .LVU550
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1690              		.loc 1 1091 12 is_stmt 0 view .LVU551
 1691 005e 0020     		movs	r0, #0
 1692 0060 DAE7     		b	.L139
 1693              		.cfi_endproc
 1694              	.LFE73:
 1696              		.section	.text.HAL_CAN_DeInit,"ax",%progbits
 1697              		.align	1
 1698              		.global	HAL_CAN_DeInit
 1699              		.syntax unified
 1700              		.thumb
 1701              		.thumb_func
 1703              	HAL_CAN_DeInit:
 1704              	.LVL77:
 1705              	.LFB66:
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 1706              		.loc 1 460 1 is_stmt 1 view -0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 0
 1709              		@ frame_needed = 0, uses_anonymous_args = 0
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1710              		.loc 1 462 3 view .LVU553
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1711              		.loc 1 462 6 is_stmt 0 view .LVU554
 1712 0000 A8B1     		cbz	r0, .L147
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Check CAN handle */
 1713              		.loc 1 460 1 view .LVU555
 1714 0002 10B5     		push	{r4, lr}
 1715              		.cfi_def_cfa_offset 8
 1716              		.cfi_offset 4, -8
 1717              		.cfi_offset 14, -4
 1718 0004 0446     		mov	r4, r0
ARM GAS  /tmp/ccCZwBwi.s 			page 80


 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1719              		.loc 1 468 3 is_stmt 1 view .LVU556
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1720              		.loc 1 471 3 view .LVU557
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1721              		.loc 1 471 9 is_stmt 0 view .LVU558
 1722 0006 FFF7FEFF 		bl	HAL_CAN_Stop
 1723              	.LVL78:
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1724              		.loc 1 474 3 is_stmt 1 view .LVU559
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1725              		.loc 1 474 11 is_stmt 0 view .LVU560
 1726 000a 236E     		ldr	r3, [r4, #96]
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 1727              		.loc 1 474 6 view .LVU561
 1728 000c 63B1     		cbz	r3, .L152
 1729              	.L146:
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1730              		.loc 1 480 3 is_stmt 1 view .LVU562
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1731              		.loc 1 480 7 is_stmt 0 view .LVU563
 1732 000e 236E     		ldr	r3, [r4, #96]
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1733              		.loc 1 480 3 view .LVU564
 1734 0010 2046     		mov	r0, r4
 1735 0012 9847     		blx	r3
 1736              	.LVL79:
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1737              		.loc 1 488 3 is_stmt 1 view .LVU565
 1738 0014 2268     		ldr	r2, [r4]
 1739 0016 1368     		ldr	r3, [r2]
 1740 0018 43F40043 		orr	r3, r3, #32768
 1741 001c 1360     		str	r3, [r2]
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1742              		.loc 1 491 3 view .LVU566
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1743              		.loc 1 491 19 is_stmt 0 view .LVU567
 1744 001e 0020     		movs	r0, #0
 1745 0020 6062     		str	r0, [r4, #36]
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1746              		.loc 1 494 3 is_stmt 1 view .LVU568
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1747              		.loc 1 494 15 is_stmt 0 view .LVU569
 1748 0022 84F82000 		strb	r0, [r4, #32]
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1749              		.loc 1 497 3 is_stmt 1 view .LVU570
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1750              		.loc 1 498 1 is_stmt 0 view .LVU571
 1751 0026 10BD     		pop	{r4, pc}
 1752              	.LVL80:
 1753              	.L152:
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1754              		.loc 1 476 5 is_stmt 1 view .LVU572
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1755              		.loc 1 476 29 is_stmt 0 view .LVU573
 1756 0028 024B     		ldr	r3, .L153
 1757 002a 2366     		str	r3, [r4, #96]
ARM GAS  /tmp/ccCZwBwi.s 			page 81


 1758 002c EFE7     		b	.L146
 1759              	.LVL81:
 1760              	.L147:
 1761              		.cfi_def_cfa_offset 0
 1762              		.cfi_restore 4
 1763              		.cfi_restore 14
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1764              		.loc 1 464 12 view .LVU574
 1765 002e 0120     		movs	r0, #1
 1766              	.LVL82:
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1767              		.loc 1 498 1 view .LVU575
 1768 0030 7047     		bx	lr
 1769              	.L154:
 1770 0032 00BF     		.align	2
 1771              	.L153:
 1772 0034 00000000 		.word	HAL_CAN_MspDeInit
 1773              		.cfi_endproc
 1774              	.LFE66:
 1776              		.section	.text.HAL_CAN_RequestSleep,"ax",%progbits
 1777              		.align	1
 1778              		.global	HAL_CAN_RequestSleep
 1779              		.syntax unified
 1780              		.thumb
 1781              		.thumb_func
 1783              	HAL_CAN_RequestSleep:
 1784              	.LVL83:
 1785              	.LFB74:
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1786              		.loc 1 1112 1 is_stmt 1 view -0
 1787              		.cfi_startproc
 1788              		@ args = 0, pretend = 0, frame = 0
 1789              		@ frame_needed = 0, uses_anonymous_args = 0
 1790              		@ link register save eliminated.
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1791              		.loc 1 1113 3 view .LVU577
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1792              		.loc 1 1113 24 is_stmt 0 view .LVU578
 1793 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1794              	.LVL84:
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1795              		.loc 1 1115 3 is_stmt 1 view .LVU579
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1796              		.loc 1 1115 38 is_stmt 0 view .LVU580
 1797 0004 013B     		subs	r3, r3, #1
 1798              	.LVL85:
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1799              		.loc 1 1115 38 view .LVU581
 1800 0006 DBB2     		uxtb	r3, r3
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1801              		.loc 1 1115 6 view .LVU582
 1802 0008 012B     		cmp	r3, #1
 1803 000a 05D9     		bls	.L158
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1804              		.loc 1 1127 5 is_stmt 1 view .LVU583
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1805              		.loc 1 1127 21 is_stmt 0 view .LVU584
ARM GAS  /tmp/ccCZwBwi.s 			page 82


 1806 000c 436A     		ldr	r3, [r0, #36]
 1807 000e 43F48023 		orr	r3, r3, #262144
 1808 0012 4362     		str	r3, [r0, #36]
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1809              		.loc 1 1130 5 is_stmt 1 view .LVU585
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1810              		.loc 1 1130 12 is_stmt 0 view .LVU586
 1811 0014 0120     		movs	r0, #1
 1812              	.LVL86:
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1813              		.loc 1 1132 1 view .LVU587
 1814 0016 7047     		bx	lr
 1815              	.LVL87:
 1816              	.L158:
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1817              		.loc 1 1119 5 is_stmt 1 view .LVU588
 1818 0018 0268     		ldr	r2, [r0]
 1819 001a 1368     		ldr	r3, [r2]
 1820 001c 43F00203 		orr	r3, r3, #2
 1821 0020 1360     		str	r3, [r2]
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1822              		.loc 1 1122 5 view .LVU589
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1823              		.loc 1 1122 12 is_stmt 0 view .LVU590
 1824 0022 0020     		movs	r0, #0
 1825              	.LVL88:
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1826              		.loc 1 1122 12 view .LVU591
 1827 0024 7047     		bx	lr
 1828              		.cfi_endproc
 1829              	.LFE74:
 1831              		.section	.text.HAL_CAN_WakeUp,"ax",%progbits
 1832              		.align	1
 1833              		.global	HAL_CAN_WakeUp
 1834              		.syntax unified
 1835              		.thumb
 1836              		.thumb_func
 1838              	HAL_CAN_WakeUp:
 1839              	.LVL89:
 1840              	.LFB75:
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __IO uint32_t count = 0;
 1841              		.loc 1 1143 1 is_stmt 1 view -0
 1842              		.cfi_startproc
 1843              		@ args = 0, pretend = 0, frame = 8
 1844              		@ frame_needed = 0, uses_anonymous_args = 0
 1845              		@ link register save eliminated.
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   __IO uint32_t count = 0;
 1846              		.loc 1 1143 1 is_stmt 0 view .LVU593
 1847 0000 82B0     		sub	sp, sp, #8
 1848              		.cfi_def_cfa_offset 8
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t timeout = 1000000U;
 1849              		.loc 1 1144 3 is_stmt 1 view .LVU594
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t timeout = 1000000U;
 1850              		.loc 1 1144 17 is_stmt 0 view .LVU595
 1851 0002 0023     		movs	r3, #0
 1852 0004 0193     		str	r3, [sp, #4]
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
ARM GAS  /tmp/ccCZwBwi.s 			page 83


 1853              		.loc 1 1145 3 is_stmt 1 view .LVU596
 1854              	.LVL90:
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1855              		.loc 1 1146 3 view .LVU597
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1856              		.loc 1 1146 24 is_stmt 0 view .LVU598
 1857 0006 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1858              	.LVL91:
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1859              		.loc 1 1148 3 is_stmt 1 view .LVU599
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1860              		.loc 1 1148 38 is_stmt 0 view .LVU600
 1861 000a 013B     		subs	r3, r3, #1
 1862              	.LVL92:
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1863              		.loc 1 1148 38 view .LVU601
 1864 000c DBB2     		uxtb	r3, r3
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1865              		.loc 1 1148 6 view .LVU602
 1866 000e 012B     		cmp	r3, #1
 1867 0010 18D8     		bhi	.L160
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1868              		.loc 1 1152 5 is_stmt 1 view .LVU603
 1869 0012 0268     		ldr	r2, [r0]
 1870 0014 1368     		ldr	r3, [r2]
 1871 0016 23F00203 		bic	r3, r3, #2
 1872 001a 1360     		str	r3, [r2]
 1873              	.L163:
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1874              		.loc 1 1155 5 view .LVU604
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1875              		.loc 1 1158 7 view .LVU605
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1876              		.loc 1 1158 12 is_stmt 0 view .LVU606
 1877 001c 019B     		ldr	r3, [sp, #4]
 1878 001e 0133     		adds	r3, r3, #1
 1879 0020 0193     		str	r3, [sp, #4]
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1880              		.loc 1 1161 7 is_stmt 1 view .LVU607
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1881              		.loc 1 1161 17 is_stmt 0 view .LVU608
 1882 0022 019A     		ldr	r2, [sp, #4]
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 1883              		.loc 1 1161 10 view .LVU609
 1884 0024 0B4B     		ldr	r3, .L166
 1885 0026 9A42     		cmp	r2, r3
 1886 0028 06D8     		bhi	.L165
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1887              		.loc 1 1169 49 is_stmt 1 view .LVU610
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1888              		.loc 1 1169 17 is_stmt 0 view .LVU611
 1889 002a 0368     		ldr	r3, [r0]
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1890              		.loc 1 1169 27 view .LVU612
 1891 002c 5B68     		ldr	r3, [r3, #4]
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1892              		.loc 1 1169 49 view .LVU613
ARM GAS  /tmp/ccCZwBwi.s 			page 84


 1893 002e 13F0020F 		tst	r3, #2
 1894 0032 F3D1     		bne	.L163
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1895              		.loc 1 1172 12 view .LVU614
 1896 0034 0020     		movs	r0, #0
 1897              	.LVL93:
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1898              		.loc 1 1172 12 view .LVU615
 1899 0036 0AE0     		b	.L162
 1900              	.LVL94:
 1901              	.L165:
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1902              		.loc 1 1164 9 is_stmt 1 view .LVU616
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1903              		.loc 1 1164 25 is_stmt 0 view .LVU617
 1904 0038 436A     		ldr	r3, [r0, #36]
 1905 003a 43F40033 		orr	r3, r3, #131072
 1906 003e 4362     		str	r3, [r0, #36]
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1907              		.loc 1 1166 9 is_stmt 1 view .LVU618
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1908              		.loc 1 1166 16 is_stmt 0 view .LVU619
 1909 0040 0120     		movs	r0, #1
 1910              	.LVL95:
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 1911              		.loc 1 1166 16 view .LVU620
 1912 0042 04E0     		b	.L162
 1913              	.LVL96:
 1914              	.L160:
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1915              		.loc 1 1177 5 is_stmt 1 view .LVU621
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1916              		.loc 1 1177 21 is_stmt 0 view .LVU622
 1917 0044 436A     		ldr	r3, [r0, #36]
 1918 0046 43F48023 		orr	r3, r3, #262144
 1919 004a 4362     		str	r3, [r0, #36]
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1920              		.loc 1 1179 5 is_stmt 1 view .LVU623
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 1921              		.loc 1 1179 12 is_stmt 0 view .LVU624
 1922 004c 0120     		movs	r0, #1
 1923              	.LVL97:
 1924              	.L162:
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1925              		.loc 1 1181 1 view .LVU625
 1926 004e 02B0     		add	sp, sp, #8
 1927              		.cfi_def_cfa_offset 0
 1928              		@ sp needed
 1929 0050 7047     		bx	lr
 1930              	.L167:
 1931 0052 00BF     		.align	2
 1932              	.L166:
 1933 0054 40420F00 		.word	1000000
 1934              		.cfi_endproc
 1935              	.LFE75:
 1937              		.section	.text.HAL_CAN_IsSleepActive,"ax",%progbits
 1938              		.align	1
ARM GAS  /tmp/ccCZwBwi.s 			page 85


 1939              		.global	HAL_CAN_IsSleepActive
 1940              		.syntax unified
 1941              		.thumb
 1942              		.thumb_func
 1944              	HAL_CAN_IsSleepActive:
 1945              	.LVL98:
 1946              	.LFB76:
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = 0U;
 1947              		.loc 1 1192 1 is_stmt 1 view -0
 1948              		.cfi_startproc
 1949              		@ args = 0, pretend = 0, frame = 0
 1950              		@ frame_needed = 0, uses_anonymous_args = 0
 1951              		@ link register save eliminated.
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1952              		.loc 1 1193 3 view .LVU627
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1953              		.loc 1 1194 3 view .LVU628
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1954              		.loc 1 1194 24 is_stmt 0 view .LVU629
 1955 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 1956              	.LVL99:
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1957              		.loc 1 1196 3 is_stmt 1 view .LVU630
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1958              		.loc 1 1196 38 is_stmt 0 view .LVU631
 1959 0004 013B     		subs	r3, r3, #1
 1960              	.LVL100:
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1961              		.loc 1 1196 38 view .LVU632
 1962 0006 DBB2     		uxtb	r3, r3
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 1963              		.loc 1 1196 6 view .LVU633
 1964 0008 012B     		cmp	r3, #1
 1965 000a 01D9     		bls	.L172
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1966              		.loc 1 1193 12 view .LVU634
 1967 000c 0020     		movs	r0, #0
 1968              	.LVL101:
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 1969              		.loc 1 1193 12 view .LVU635
 1970 000e 7047     		bx	lr
 1971              	.LVL102:
 1972              	.L172:
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1973              		.loc 1 1200 5 is_stmt 1 view .LVU636
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1974              		.loc 1 1200 14 is_stmt 0 view .LVU637
 1975 0010 0368     		ldr	r3, [r0]
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1976              		.loc 1 1200 24 view .LVU638
 1977 0012 5868     		ldr	r0, [r3, #4]
 1978              	.LVL103:
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 1979              		.loc 1 1200 8 view .LVU639
 1980 0014 10F00200 		ands	r0, r0, #2
 1981 0018 00D1     		bne	.L171
 1982 001a 7047     		bx	lr
ARM GAS  /tmp/ccCZwBwi.s 			page 86


 1983              	.L171:
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 1984              		.loc 1 1202 14 view .LVU640
 1985 001c 0120     		movs	r0, #1
 1986              	.LVL104:
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 1987              		.loc 1 1207 3 is_stmt 1 view .LVU641
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 1988              		.loc 1 1208 1 is_stmt 0 view .LVU642
 1989 001e 7047     		bx	lr
 1990              		.cfi_endproc
 1991              	.LFE76:
 1993              		.section	.text.HAL_CAN_AddTxMessage,"ax",%progbits
 1994              		.align	1
 1995              		.global	HAL_CAN_AddTxMessage
 1996              		.syntax unified
 1997              		.thumb
 1998              		.thumb_func
 2000              	HAL_CAN_AddTxMessage:
 2001              	.LVL105:
 2002              	.LFB77:
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox;
 2003              		.loc 1 1223 1 is_stmt 1 view -0
 2004              		.cfi_startproc
 2005              		@ args = 0, pretend = 0, frame = 0
 2006              		@ frame_needed = 0, uses_anonymous_args = 0
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox;
 2007              		.loc 1 1223 1 is_stmt 0 view .LVU644
 2008 0000 30B5     		push	{r4, r5, lr}
 2009              		.cfi_def_cfa_offset 12
 2010              		.cfi_offset 4, -12
 2011              		.cfi_offset 5, -8
 2012              		.cfi_offset 14, -4
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2013              		.loc 1 1224 3 is_stmt 1 view .LVU645
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 2014              		.loc 1 1225 3 view .LVU646
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tsr = READ_REG(hcan->Instance->TSR);
 2015              		.loc 1 1225 24 is_stmt 0 view .LVU647
 2016 0002 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 2017              	.LVL106:
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2018              		.loc 1 1226 3 is_stmt 1 view .LVU648
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2019              		.loc 1 1226 12 is_stmt 0 view .LVU649
 2020 0006 0468     		ldr	r4, [r0]
 2021 0008 A468     		ldr	r4, [r4, #8]
 2022              	.LVL107:
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_RTR(pHeader->RTR));
 2023              		.loc 1 1229 3 is_stmt 1 view .LVU650
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   assert_param(IS_CAN_DLC(pHeader->DLC));
 2024              		.loc 1 1230 3 view .LVU651
1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if (pHeader->IDE == CAN_ID_STD)
 2025              		.loc 1 1231 3 view .LVU652
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 2026              		.loc 1 1232 3 view .LVU653
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
ARM GAS  /tmp/ccCZwBwi.s 			page 87


 2027              		.loc 1 1238 5 view .LVU654
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2028              		.loc 1 1240 3 view .LVU655
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2029              		.loc 1 1242 3 view .LVU656
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2030              		.loc 1 1242 38 is_stmt 0 view .LVU657
 2031 000a 0CF1FF3C 		add	ip, ip, #-1
 2032              	.LVL108:
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2033              		.loc 1 1242 38 view .LVU658
 2034 000e 5FFA8CFC 		uxtb	ip, ip
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2035              		.loc 1 1242 6 view .LVU659
 2036 0012 BCF1010F 		cmp	ip, #1
 2037 0016 6BD8     		bhi	.L174
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 2038              		.loc 1 1246 5 is_stmt 1 view .LVU660
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         ((tsr & CAN_TSR_TME1) != 0U) ||
 2039              		.loc 1 1246 8 is_stmt 0 view .LVU661
 2040 0018 14F0E05F 		tst	r4, #469762048
 2041 001c 62D0     		beq	.L175
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2042              		.loc 1 1251 7 is_stmt 1 view .LVU662
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2043              		.loc 1 1251 23 is_stmt 0 view .LVU663
 2044 001e C4F3016C 		ubfx	ip, r4, #24, #2
 2045              	.LVL109:
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2046              		.loc 1 1254 7 is_stmt 1 view .LVU664
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2047              		.loc 1 1254 10 is_stmt 0 view .LVU665
 2048 0022 BCF1020F 		cmp	ip, #2
 2049 0026 05D9     		bls	.L176
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2050              		.loc 1 1257 9 is_stmt 1 view .LVU666
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2051              		.loc 1 1257 25 is_stmt 0 view .LVU667
 2052 0028 436A     		ldr	r3, [r0, #36]
 2053              	.LVL110:
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2054              		.loc 1 1257 25 view .LVU668
 2055 002a 43F40003 		orr	r3, r3, #8388608
 2056 002e 4362     		str	r3, [r0, #36]
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2057              		.loc 1 1259 9 is_stmt 1 view .LVU669
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2058              		.loc 1 1259 16 is_stmt 0 view .LVU670
 2059 0030 0120     		movs	r0, #1
 2060              	.LVL111:
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2061              		.loc 1 1259 16 view .LVU671
 2062 0032 62E0     		b	.L177
 2063              	.LVL112:
 2064              	.L176:
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2065              		.loc 1 1263 7 is_stmt 1 view .LVU672
ARM GAS  /tmp/ccCZwBwi.s 			page 88


1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2066              		.loc 1 1263 33 is_stmt 0 view .LVU673
 2067 0034 0124     		movs	r4, #1
 2068              	.LVL113:
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2069              		.loc 1 1263 33 view .LVU674
 2070 0036 04FA0CF4 		lsl	r4, r4, ip
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2071              		.loc 1 1263 19 view .LVU675
 2072 003a 1C60     		str	r4, [r3]
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2073              		.loc 1 1266 7 is_stmt 1 view .LVU676
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2074              		.loc 1 1266 18 is_stmt 0 view .LVU677
 2075 003c 8B68     		ldr	r3, [r1, #8]
 2076              	.LVL114:
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2077              		.loc 1 1266 10 view .LVU678
 2078 003e 002B     		cmp	r3, #0
 2079 0040 3DD1     		bne	.L178
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
 2080              		.loc 1 1268 9 is_stmt 1 view .LVU679
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
 2081              		.loc 1 1268 68 is_stmt 0 view .LVU680
 2082 0042 0D68     		ldr	r5, [r1]
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2083              		.loc 1 1269 67 view .LVU681
 2084 0044 CB68     		ldr	r3, [r1, #12]
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
 2085              		.loc 1 1268 13 view .LVU682
 2086 0046 0468     		ldr	r4, [r0]
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
 2087              		.loc 1 1268 98 view .LVU683
 2088 0048 43EA4555 		orr	r5, r3, r5, lsl #21
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
 2089              		.loc 1 1268 57 view .LVU684
 2090 004c 0CF11803 		add	r3, ip, #24
 2091 0050 1B01     		lsls	r3, r3, #4
 2092 0052 E550     		str	r5, [r4, r3]
 2093              	.L179:
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2094              		.loc 1 1279 7 is_stmt 1 view .LVU685
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2095              		.loc 1 1279 11 is_stmt 0 view .LVU686
 2096 0054 0368     		ldr	r3, [r0]
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2097              		.loc 1 1279 66 view .LVU687
 2098 0056 0C69     		ldr	r4, [r1, #16]
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2099              		.loc 1 1279 56 view .LVU688
 2100 0058 0CF1180E 		add	lr, ip, #24
 2101 005c 03EB0E13 		add	r3, r3, lr, lsl #4
 2102 0060 5C60     		str	r4, [r3, #4]
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2103              		.loc 1 1282 7 is_stmt 1 view .LVU689
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2104              		.loc 1 1282 18 is_stmt 0 view .LVU690
ARM GAS  /tmp/ccCZwBwi.s 			page 89


 2105 0062 0B7D     		ldrb	r3, [r1, #20]	@ zero_extendqisi2
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2106              		.loc 1 1282 10 view .LVU691
 2107 0064 012B     		cmp	r3, #1
 2108 0066 35D0     		beq	.L182
 2109              	.LVL115:
 2110              	.L180:
1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[7] << CAN_TDH0R_DATA7_Pos) |
 2111              		.loc 1 1288 7 is_stmt 1 view .LVU692
 2112 0068 D179     		ldrb	r1, [r2, #7]	@ zero_extendqisi2
 2113 006a 9379     		ldrb	r3, [r2, #6]	@ zero_extendqisi2
 2114 006c 1B04     		lsls	r3, r3, #16
 2115 006e 43EA0163 		orr	r3, r3, r1, lsl #24
 2116 0072 5179     		ldrb	r1, [r2, #5]	@ zero_extendqisi2
 2117 0074 43EA0123 		orr	r3, r3, r1, lsl #8
 2118 0078 1479     		ldrb	r4, [r2, #4]	@ zero_extendqisi2
 2119 007a 0168     		ldr	r1, [r0]
 2120 007c 2343     		orrs	r3, r3, r4
 2121 007e 01EB0C11 		add	r1, r1, ip, lsl #4
 2122 0082 C1F88C31 		str	r3, [r1, #396]
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
 2123              		.loc 1 1293 7 view .LVU693
 2124 0086 D178     		ldrb	r1, [r2, #3]	@ zero_extendqisi2
 2125 0088 9378     		ldrb	r3, [r2, #2]	@ zero_extendqisi2
 2126 008a 1B04     		lsls	r3, r3, #16
 2127 008c 43EA0163 		orr	r3, r3, r1, lsl #24
 2128 0090 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 2129 0092 43EA0123 		orr	r3, r3, r1, lsl #8
 2130 0096 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 2131 0098 0268     		ldr	r2, [r0]
 2132              	.LVL116:
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                 ((uint32_t)aData[3] << CAN_TDL0R_DATA3_Pos) |
 2133              		.loc 1 1293 7 is_stmt 0 view .LVU694
 2134 009a 0B43     		orrs	r3, r3, r1
 2135 009c 02EB0C12 		add	r2, r2, ip, lsl #4
 2136 00a0 C2F88831 		str	r3, [r2, #392]
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2137              		.loc 1 1300 7 is_stmt 1 view .LVU695
 2138 00a4 0268     		ldr	r2, [r0]
 2139 00a6 0CF1180C 		add	ip, ip, #24
 2140              	.LVL117:
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2141              		.loc 1 1300 7 is_stmt 0 view .LVU696
 2142 00aa 4FEA0C1C 		lsl	ip, ip, #4
 2143 00ae 52F80C30 		ldr	r3, [r2, ip]
 2144 00b2 43F00103 		orr	r3, r3, #1
 2145 00b6 42F80C30 		str	r3, [r2, ip]
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2146              		.loc 1 1303 7 is_stmt 1 view .LVU697
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2147              		.loc 1 1303 14 is_stmt 0 view .LVU698
 2148 00ba 0020     		movs	r0, #0
 2149              	.LVL118:
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2150              		.loc 1 1303 14 view .LVU699
 2151 00bc 1DE0     		b	.L177
 2152              	.LVL119:
ARM GAS  /tmp/ccCZwBwi.s 			page 90


 2153              	.L178:
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->IDE |
 2154              		.loc 1 1273 9 is_stmt 1 view .LVU700
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->IDE |
 2155              		.loc 1 1273 68 is_stmt 0 view .LVU701
 2156 00be 4C68     		ldr	r4, [r1, #4]
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->IDE |
 2157              		.loc 1 1273 98 view .LVU702
 2158 00c0 43EAC403 		orr	r3, r3, r4, lsl #3
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2159              		.loc 1 1275 67 view .LVU703
 2160 00c4 CC68     		ldr	r4, [r1, #12]
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->RTR);
 2161              		.loc 1 1274 73 view .LVU704
 2162 00c6 2343     		orrs	r3, r3, r4
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****                                                            pHeader->IDE |
 2163              		.loc 1 1273 57 view .LVU705
 2164 00c8 0CF11804 		add	r4, ip, #24
 2165 00cc 2401     		lsls	r4, r4, #4
 2166 00ce 0568     		ldr	r5, [r0]
 2167 00d0 2B51     		str	r3, [r5, r4]
 2168 00d2 BFE7     		b	.L179
 2169              	.L182:
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2170              		.loc 1 1284 9 is_stmt 1 view .LVU706
 2171 00d4 0368     		ldr	r3, [r0]
 2172 00d6 03EB0E13 		add	r3, r3, lr, lsl #4
 2173 00da 5968     		ldr	r1, [r3, #4]
 2174              	.LVL120:
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2175              		.loc 1 1284 9 is_stmt 0 view .LVU707
 2176 00dc 41F48071 		orr	r1, r1, #256
 2177 00e0 5960     		str	r1, [r3, #4]
 2178 00e2 C1E7     		b	.L180
 2179              	.LVL121:
 2180              	.L175:
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2181              		.loc 1 1308 7 is_stmt 1 view .LVU708
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2182              		.loc 1 1308 23 is_stmt 0 view .LVU709
 2183 00e4 436A     		ldr	r3, [r0, #36]
 2184              	.LVL122:
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2185              		.loc 1 1308 23 view .LVU710
 2186 00e6 43F40013 		orr	r3, r3, #2097152
 2187 00ea 4362     		str	r3, [r0, #36]
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2188              		.loc 1 1310 7 is_stmt 1 view .LVU711
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2189              		.loc 1 1310 14 is_stmt 0 view .LVU712
 2190 00ec 0120     		movs	r0, #1
 2191              	.LVL123:
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2192              		.loc 1 1310 14 view .LVU713
 2193 00ee 04E0     		b	.L177
 2194              	.LVL124:
 2195              	.L174:
ARM GAS  /tmp/ccCZwBwi.s 			page 91


1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2196              		.loc 1 1316 5 is_stmt 1 view .LVU714
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2197              		.loc 1 1316 21 is_stmt 0 view .LVU715
 2198 00f0 436A     		ldr	r3, [r0, #36]
 2199              	.LVL125:
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2200              		.loc 1 1316 21 view .LVU716
 2201 00f2 43F48023 		orr	r3, r3, #262144
 2202 00f6 4362     		str	r3, [r0, #36]
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2203              		.loc 1 1318 5 is_stmt 1 view .LVU717
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2204              		.loc 1 1318 12 is_stmt 0 view .LVU718
 2205 00f8 0120     		movs	r0, #1
 2206              	.LVL126:
 2207              	.L177:
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2208              		.loc 1 1320 1 view .LVU719
 2209 00fa 30BD     		pop	{r4, r5, pc}
 2210              		.cfi_endproc
 2211              	.LFE77:
 2213              		.section	.text.HAL_CAN_AbortTxRequest,"ax",%progbits
 2214              		.align	1
 2215              		.global	HAL_CAN_AbortTxRequest
 2216              		.syntax unified
 2217              		.thumb
 2218              		.thumb_func
 2220              	HAL_CAN_AbortTxRequest:
 2221              	.LVL127:
 2222              	.LFB78:
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2223              		.loc 1 1331 1 is_stmt 1 view -0
 2224              		.cfi_startproc
 2225              		@ args = 0, pretend = 0, frame = 0
 2226              		@ frame_needed = 0, uses_anonymous_args = 0
 2227              		@ link register save eliminated.
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2228              		.loc 1 1332 3 view .LVU721
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2229              		.loc 1 1332 24 is_stmt 0 view .LVU722
 2230 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2231              	.LVL128:
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2232              		.loc 1 1335 3 is_stmt 1 view .LVU723
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2233              		.loc 1 1337 3 view .LVU724
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2234              		.loc 1 1337 38 is_stmt 0 view .LVU725
 2235 0004 013B     		subs	r3, r3, #1
 2236              	.LVL129:
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2237              		.loc 1 1337 38 view .LVU726
 2238 0006 DBB2     		uxtb	r3, r3
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2239              		.loc 1 1337 6 view .LVU727
 2240 0008 012B     		cmp	r3, #1
ARM GAS  /tmp/ccCZwBwi.s 			page 92


 2241 000a 05D9     		bls	.L189
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2242              		.loc 1 1367 5 is_stmt 1 view .LVU728
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2243              		.loc 1 1367 21 is_stmt 0 view .LVU729
 2244 000c 436A     		ldr	r3, [r0, #36]
 2245 000e 43F48023 		orr	r3, r3, #262144
 2246 0012 4362     		str	r3, [r0, #36]
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2247              		.loc 1 1369 5 is_stmt 1 view .LVU730
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2248              		.loc 1 1369 12 is_stmt 0 view .LVU731
 2249 0014 0120     		movs	r0, #1
 2250              	.LVL130:
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2251              		.loc 1 1371 1 view .LVU732
 2252 0016 7047     		bx	lr
 2253              	.LVL131:
 2254              	.L189:
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2255              		.loc 1 1341 5 is_stmt 1 view .LVU733
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2256              		.loc 1 1341 8 is_stmt 0 view .LVU734
 2257 0018 11F0010F 		tst	r1, #1
 2258 001c 04D0     		beq	.L185
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2259              		.loc 1 1344 7 is_stmt 1 view .LVU735
 2260 001e 0268     		ldr	r2, [r0]
 2261 0020 9368     		ldr	r3, [r2, #8]
 2262 0022 43F08003 		orr	r3, r3, #128
 2263 0026 9360     		str	r3, [r2, #8]
 2264              	.L185:
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2265              		.loc 1 1348 5 view .LVU736
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2266              		.loc 1 1348 8 is_stmt 0 view .LVU737
 2267 0028 11F0020F 		tst	r1, #2
 2268 002c 04D0     		beq	.L186
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2269              		.loc 1 1351 7 is_stmt 1 view .LVU738
 2270 002e 0268     		ldr	r2, [r0]
 2271 0030 9368     		ldr	r3, [r2, #8]
 2272 0032 43F40043 		orr	r3, r3, #32768
 2273 0036 9360     		str	r3, [r2, #8]
 2274              	.L186:
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2275              		.loc 1 1355 5 view .LVU739
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2276              		.loc 1 1355 8 is_stmt 0 view .LVU740
 2277 0038 11F0040F 		tst	r1, #4
 2278 003c 04D0     		beq	.L187
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2279              		.loc 1 1358 7 is_stmt 1 view .LVU741
 2280 003e 0268     		ldr	r2, [r0]
 2281 0040 9368     		ldr	r3, [r2, #8]
 2282 0042 43F40003 		orr	r3, r3, #8388608
 2283 0046 9360     		str	r3, [r2, #8]
ARM GAS  /tmp/ccCZwBwi.s 			page 93


 2284              	.L187:
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2285              		.loc 1 1362 5 view .LVU742
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2286              		.loc 1 1362 12 is_stmt 0 view .LVU743
 2287 0048 0020     		movs	r0, #0
 2288              	.LVL132:
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2289              		.loc 1 1362 12 view .LVU744
 2290 004a 7047     		bx	lr
 2291              		.cfi_endproc
 2292              	.LFE78:
 2294              		.section	.text.HAL_CAN_GetTxMailboxesFreeLevel,"ax",%progbits
 2295              		.align	1
 2296              		.global	HAL_CAN_GetTxMailboxesFreeLevel
 2297              		.syntax unified
 2298              		.thumb
 2299              		.thumb_func
 2301              	HAL_CAN_GetTxMailboxesFreeLevel:
 2302              	.LVL133:
 2303              	.LFB79:
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t freelevel = 0U;
 2304              		.loc 1 1380 1 is_stmt 1 view -0
 2305              		.cfi_startproc
 2306              		@ args = 0, pretend = 0, frame = 0
 2307              		@ frame_needed = 0, uses_anonymous_args = 0
 2308              		@ link register save eliminated.
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2309              		.loc 1 1381 3 view .LVU746
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2310              		.loc 1 1382 3 view .LVU747
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2311              		.loc 1 1382 24 is_stmt 0 view .LVU748
 2312 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2313              	.LVL134:
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2314              		.loc 1 1384 3 is_stmt 1 view .LVU749
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2315              		.loc 1 1384 38 is_stmt 0 view .LVU750
 2316 0004 013B     		subs	r3, r3, #1
 2317              	.LVL135:
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2318              		.loc 1 1384 38 view .LVU751
 2319 0006 DBB2     		uxtb	r3, r3
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2320              		.loc 1 1384 6 view .LVU752
 2321 0008 012B     		cmp	r3, #1
 2322 000a 01D9     		bls	.L196
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2323              		.loc 1 1381 12 view .LVU753
 2324 000c 0020     		movs	r0, #0
 2325              	.LVL136:
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2326              		.loc 1 1407 3 is_stmt 1 view .LVU754
 2327              	.L190:
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2328              		.loc 1 1408 1 is_stmt 0 view .LVU755
ARM GAS  /tmp/ccCZwBwi.s 			page 94


 2329 000e 7047     		bx	lr
 2330              	.LVL137:
 2331              	.L196:
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2332              		.loc 1 1388 5 is_stmt 1 view .LVU756
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2333              		.loc 1 1388 14 is_stmt 0 view .LVU757
 2334 0010 0368     		ldr	r3, [r0]
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2335              		.loc 1 1388 24 view .LVU758
 2336 0012 9868     		ldr	r0, [r3, #8]
 2337              	.LVL138:
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2338              		.loc 1 1388 8 view .LVU759
 2339 0014 10F08060 		ands	r0, r0, #67108864
 2340 0018 00D0     		beq	.L192
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2341              		.loc 1 1390 16 view .LVU760
 2342 001a 0120     		movs	r0, #1
 2343              	.L192:
 2344              	.LVL139:
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2345              		.loc 1 1394 5 is_stmt 1 view .LVU761
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2346              		.loc 1 1394 24 is_stmt 0 view .LVU762
 2347 001c 9A68     		ldr	r2, [r3, #8]
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2348              		.loc 1 1394 8 view .LVU763
 2349 001e 12F0006F 		tst	r2, #134217728
 2350 0022 00D0     		beq	.L193
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2351              		.loc 1 1396 7 is_stmt 1 view .LVU764
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2352              		.loc 1 1396 16 is_stmt 0 view .LVU765
 2353 0024 0130     		adds	r0, r0, #1
 2354              	.LVL140:
 2355              	.L193:
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2356              		.loc 1 1400 5 is_stmt 1 view .LVU766
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2357              		.loc 1 1400 24 is_stmt 0 view .LVU767
 2358 0026 9B68     		ldr	r3, [r3, #8]
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2359              		.loc 1 1400 8 view .LVU768
 2360 0028 13F0805F 		tst	r3, #268435456
 2361 002c EFD0     		beq	.L190
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2362              		.loc 1 1402 7 is_stmt 1 view .LVU769
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2363              		.loc 1 1402 16 is_stmt 0 view .LVU770
 2364 002e 0130     		adds	r0, r0, #1
 2365              	.LVL141:
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2366              		.loc 1 1402 16 view .LVU771
 2367 0030 7047     		bx	lr
 2368              		.cfi_endproc
 2369              	.LFE79:
ARM GAS  /tmp/ccCZwBwi.s 			page 95


 2371              		.section	.text.HAL_CAN_IsTxMessagePending,"ax",%progbits
 2372              		.align	1
 2373              		.global	HAL_CAN_IsTxMessagePending
 2374              		.syntax unified
 2375              		.thumb
 2376              		.thumb_func
 2378              	HAL_CAN_IsTxMessagePending:
 2379              	.LVL142:
 2380              	.LFB80:
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t status = 0U;
 2381              		.loc 1 1423 1 is_stmt 1 view -0
 2382              		.cfi_startproc
 2383              		@ args = 0, pretend = 0, frame = 0
 2384              		@ frame_needed = 0, uses_anonymous_args = 0
 2385              		@ link register save eliminated.
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2386              		.loc 1 1424 3 view .LVU773
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2387              		.loc 1 1425 3 view .LVU774
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2388              		.loc 1 1425 24 is_stmt 0 view .LVU775
 2389 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2390              	.LVL143:
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2391              		.loc 1 1428 3 is_stmt 1 view .LVU776
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2392              		.loc 1 1430 3 view .LVU777
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2393              		.loc 1 1430 38 is_stmt 0 view .LVU778
 2394 0004 013B     		subs	r3, r3, #1
 2395              	.LVL144:
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2396              		.loc 1 1430 38 view .LVU779
 2397 0006 DBB2     		uxtb	r3, r3
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2398              		.loc 1 1430 6 view .LVU780
 2399 0008 012B     		cmp	r3, #1
 2400 000a 01D9     		bls	.L201
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2401              		.loc 1 1424 12 view .LVU781
 2402 000c 0020     		movs	r0, #0
 2403              	.LVL145:
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2404              		.loc 1 1424 12 view .LVU782
 2405 000e 7047     		bx	lr
 2406              	.LVL146:
 2407              	.L201:
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2408              		.loc 1 1434 5 is_stmt 1 view .LVU783
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2409              		.loc 1 1434 14 is_stmt 0 view .LVU784
 2410 0010 0368     		ldr	r3, [r0]
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2411              		.loc 1 1434 24 view .LVU785
 2412 0012 9B68     		ldr	r3, [r3, #8]
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2413              		.loc 1 1434 30 view .LVU786
ARM GAS  /tmp/ccCZwBwi.s 			page 96


 2414 0014 03EA8163 		and	r3, r3, r1, lsl #26
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2415              		.loc 1 1434 8 view .LVU787
 2416 0018 B3EB816F 		cmp	r3, r1, lsl #26
 2417 001c 01D0     		beq	.L202
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2418              		.loc 1 1436 14 view .LVU788
 2419 001e 0120     		movs	r0, #1
 2420              	.LVL147:
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2421              		.loc 1 1441 3 is_stmt 1 view .LVU789
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2422              		.loc 1 1442 1 is_stmt 0 view .LVU790
 2423 0020 7047     		bx	lr
 2424              	.LVL148:
 2425              	.L202:
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2426              		.loc 1 1424 12 view .LVU791
 2427 0022 0020     		movs	r0, #0
 2428              	.LVL149:
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2429              		.loc 1 1424 12 view .LVU792
 2430 0024 7047     		bx	lr
 2431              		.cfi_endproc
 2432              	.LFE80:
 2434              		.section	.text.HAL_CAN_GetTxTimestamp,"ax",%progbits
 2435              		.align	1
 2436              		.global	HAL_CAN_GetTxTimestamp
 2437              		.syntax unified
 2438              		.thumb
 2439              		.thumb_func
 2441              	HAL_CAN_GetTxTimestamp:
 2442              	.LVL150:
 2443              	.LFB81:
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t timestamp = 0U;
 2444              		.loc 1 1455 1 is_stmt 1 view -0
 2445              		.cfi_startproc
 2446              		@ args = 0, pretend = 0, frame = 0
 2447              		@ frame_needed = 0, uses_anonymous_args = 0
 2448              		@ link register save eliminated.
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox;
 2449              		.loc 1 1456 3 view .LVU794
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2450              		.loc 1 1457 3 view .LVU795
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2451              		.loc 1 1458 3 view .LVU796
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2452              		.loc 1 1458 24 is_stmt 0 view .LVU797
 2453 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2454              	.LVL151:
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2455              		.loc 1 1461 3 is_stmt 1 view .LVU798
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2456              		.loc 1 1463 3 view .LVU799
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2457              		.loc 1 1463 38 is_stmt 0 view .LVU800
 2458 0004 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccCZwBwi.s 			page 97


 2459              	.LVL152:
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2460              		.loc 1 1463 38 view .LVU801
 2461 0006 DBB2     		uxtb	r3, r3
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2462              		.loc 1 1463 6 view .LVU802
 2463 0008 012B     		cmp	r3, #1
 2464 000a 01D9     		bls	.L206
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t transmitmailbox;
 2465              		.loc 1 1456 12 view .LVU803
 2466 000c 0020     		movs	r0, #0
 2467              	.LVL153:
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2468              		.loc 1 1474 3 is_stmt 1 view .LVU804
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2469              		.loc 1 1475 1 is_stmt 0 view .LVU805
 2470 000e 7047     		bx	lr
 2471              	.LVL154:
 2472              	.L206:
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2473              		.loc 1 1467 5 is_stmt 1 view .LVU806
 2474              	.LBB4:
 2475              	.LBI4:
 2476              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 98


  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
ARM GAS  /tmp/ccCZwBwi.s 			page 99


  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 144:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
ARM GAS  /tmp/ccCZwBwi.s 			page 100


 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
 150:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 151:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_CONTROL(void)
 152:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 154:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 157:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 158:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 159:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 160:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 161:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register (non-secure)
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the non-secure Control Register when in secure mode.
 164:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               non-secure Control Register value
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_CONTROL_NS(void)
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 168:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 170:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control_ns" : "=r" (result) );
 171:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 177:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
 178:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
 179:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 180:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_CONTROL(uint32_t control)
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 183:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register (non-secure)
 190:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the non-secure Control Register when in secure state.
 191:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_CONTROL_NS(uint32_t control)
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control_ns, %0" : : "r" (control) : "memory");
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 201:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 202:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccCZwBwi.s 			page 101


 205:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_IPSR(void)
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 208:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 210:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 212:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 213:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 215:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 216:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 217:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 218:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_APSR(void)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 221:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 223:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 224:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 225:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 226:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 227:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 229:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 230:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               xPSR Register value
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 233:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_xPSR(void)
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 235:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 239:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 240:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 241:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 243:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 244:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 245:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 247:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSP(void)
 248:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 249:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp"  : "=r" (result) );
 252:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 253:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 254:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 255:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 257:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer (non-secure)
 259:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer (PSP) when in secure s
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 261:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /tmp/ccCZwBwi.s 			page 102


 262:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSP_NS(void)
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 265:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp_ns"  : "=r" (result) );
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 268:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 271:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 273:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 274:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 275:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 277:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSP(uint32_t topOfProcStack)
 278:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0" : : "r" (topOfProcStack) : );
 280:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 282:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 285:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 286:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer (PSP) when in secure sta
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 289:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSP_NS(uint32_t topOfProcStack)
 290:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp_ns, %0" : : "r" (topOfProcStack) : );
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 295:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 298:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSP(void)
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 303:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp" : "=r" (result) );
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 307:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 308:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 310:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 312:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer (non-secure)
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer (MSP) when in secure stat
 314:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 316:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSP_NS(void)
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 318:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /tmp/ccCZwBwi.s 			page 103


 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp_ns" : "=r" (result) );
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 322:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 323:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 324:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 325:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 327:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 328:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 330:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 331:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSP(uint32_t topOfMainStack)
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0" : : "r" (topOfMainStack) : );
 334:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 337:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 339:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer (non-secure)
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer (MSP) when in secure state.
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfMainStack  Main Stack Pointer value to set
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 343:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSP_NS(uint32_t topOfMainStack)
 344:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp_ns, %0" : : "r" (topOfMainStack) : );
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 348:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 350:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 351:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Stack Pointer (non-secure)
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Stack Pointer (SP) when in secure state.
 354:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               SP Register value
 355:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_SP_NS(void)
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 359:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, sp_ns" : "=r" (result) );
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 362:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 363:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 366:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Stack Pointer (non-secure)
 367:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Stack Pointer (SP) when in secure state.
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfStack  Stack Pointer value to set
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 370:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_SP_NS(uint32_t topOfStack)
 371:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR sp_ns, %0" : : "r" (topOfStack) : );
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 375:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 104


 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 381:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 382:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PRIMASK(void)
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 385:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) :: "memory");
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 388:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 389:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 390:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 391:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask (non-secure)
 394:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the non-secure priority mask bit from the Priority Mask Reg
 395:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 396:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PRIMASK_NS(void)
 398:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 400:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask_ns" : "=r" (result) :: "memory");
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 405:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 406:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 407:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 412:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PRIMASK(uint32_t priMask)
 413:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 415:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 416:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 417:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 418:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 420:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask (non-secure)
 421:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Priority Mask Register when in secure state.
 422:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 424:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PRIMASK_NS(uint32_t priMask)
 425:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 426:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask_ns, %0" : : "r" (priMask) : "memory");
 427:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 428:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 429:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 430:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 431:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 432:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
ARM GAS  /tmp/ccCZwBwi.s 			page 105


 433:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 434:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 435:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 436:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 438:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 439:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_fault_irq(void)
 440:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 442:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 444:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 446:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 447:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 448:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 450:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_fault_irq(void)
 451:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 453:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 456:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 457:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 458:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 460:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 461:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_BASEPRI(void)
 462:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 464:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 465:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 471:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority (non-secure)
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Base Priority register when in secure state.
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_BASEPRI_NS(void)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri_ns" : "=r" (result) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 486:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
ARM GAS  /tmp/ccCZwBwi.s 			page 106


 490:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 491:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI(uint32_t basePri)
 492:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 493:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (basePri) : "memory");
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 495:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 498:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 499:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority (non-secure)
 500:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Base Priority register when in secure state.
 501:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 502:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 503:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_BASEPRI_NS(uint32_t basePri)
 504:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_ns, %0" : : "r" (basePri) : "memory");
 506:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 507:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 508:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 509:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 511:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 513:Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_BASEPRI_MAX(uint32_t basePri)
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 518:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (basePri) : "memory");
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 520:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 521:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 522:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FAULTMASK(void)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 537:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask (non-secure)
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Fault Mask register when in secure state.
 540:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 541:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 542:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_FAULTMASK_NS(void)
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 544:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask_ns" : "=r" (result) );
ARM GAS  /tmp/ccCZwBwi.s 			page 107


 547:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 548:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 552:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 554:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 557:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FAULTMASK(uint32_t faultMask)
 558:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 560:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE ) && (__ARM_FEATURE_CMSE == 3))
 564:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask (non-secure)
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Fault Mask register when in secure state.
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 568:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_FAULTMASK_NS(uint32_t faultMask)
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask_ns, %0" : : "r" (faultMask) : "memory");
 572:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 573:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 574:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 575:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 577:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 580:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 582:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 583:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 584:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit
 585:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 586:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer Limit (PSPLIM).
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 592:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_PSPLIM(void)
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 596:Drivers/CMSIS/Include/cmsis_gcc.h ****     // without main extensions, the non-secure PSPLIM is RAZ/WI
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 598:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 599:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 600:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim"  : "=r" (result) );
 601:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 603:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /tmp/ccCZwBwi.s 			page 108


 604:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 605:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3))
 606:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer Limit (non-secure)
 608:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 609:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 610:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 611:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Process Stack Pointer Limit (PSPLIM) when in
 612:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSPLIM Register value
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_PSPLIM_NS(void)
 615:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 616:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 621:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psplim_ns"  : "=r" (result) );
 622:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 625:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 626:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 627:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 628:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer Limit
 630:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 631:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 633:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 634:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer Limit (PSPLIM).
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 636:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 637:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_PSPLIM(uint32_t ProcStackPtrLimit)
 638:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 639:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 641:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 644:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim, %0" : : "r" (ProcStackPtrLimit));
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 647:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 648:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 649:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 650:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer (non-secure)
 652:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 653:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 654:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 655:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Process Stack Pointer Limit (PSPLIM) when in s
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ProcStackPtrLimit  Process Stack Pointer Limit value to set
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_PSPLIM_NS(uint32_t ProcStackPtrLimit)
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
ARM GAS  /tmp/ccCZwBwi.s 			page 109


 661:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure PSPLIM is RAZ/WI
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)ProcStackPtrLimit;
 663:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psplim_ns, %0\n" : : "r" (ProcStackPtrLimit));
 665:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 666:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 669:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 671:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit
 672:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 673:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always in non-secure
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 675:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer Limit (MSPLIM).
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_MSPLIM(void)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 682:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 683:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 684:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim" : "=r" (result) );
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 689:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 690:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 693:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 695:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer Limit (non-secure)
 696:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence zero is returned always.
 698:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 699:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the non-secure Main Stack Pointer Limit(MSPLIM) when in sec
 700:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSPLIM Register value
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 702:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __TZ_get_MSPLIM_NS(void)
 703:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 704:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****   return 0U;
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 708:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msplim_ns" : "=r" (result) );
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 711:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 712:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 713:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 714:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 715:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 716:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit
ARM GAS  /tmp/ccCZwBwi.s 			page 110


 718:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored in non-secure
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****   mode.
 721:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer Limit (MSPLIM).
 723:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer Limit value to set
 724:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_MSPLIM(uint32_t MainStackPtrLimit)
 726:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 727:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) && \
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****     (!defined (__ARM_FEATURE_CMSE) || (__ARM_FEATURE_CMSE < 3)))
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 731:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 732:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim, %0" : : "r" (MainStackPtrLimit));
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 734:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 735:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 736:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 737:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (defined (__ARM_FEATURE_CMSE  ) && (__ARM_FEATURE_CMSE   == 3))
 738:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer Limit (non-secure)
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****   Devices without ARMv8-M Main Extensions (i.e. Cortex-M23) lack the non-secure
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****   Stack Pointer Limit register hence the write is silently ignored.
 742:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the non-secure Main Stack Pointer Limit (MSPLIM) when in secu
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    MainStackPtrLimit  Main Stack Pointer value to set
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 746:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_MSPLIM_NS(uint32_t MainStackPtrLimit)
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (!(defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)))
 749:Drivers/CMSIS/Include/cmsis_gcc.h ****   // without main extensions, the non-secure MSPLIM is RAZ/WI
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)MainStackPtrLimit;
 751:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 752:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msplim_ns, %0" : : "r" (MainStackPtrLimit));
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 755:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 757:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 759:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 760:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 761:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 762:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 763:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 765:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 766:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __get_FPSCR(void)
 767:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 769:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_get_fpscr) 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 772:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_arm_get_fpscr();
ARM GAS  /tmp/ccCZwBwi.s 			page 111


 775:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 778:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 781:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(0U);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 787:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __set_FPSCR(uint32_t fpscr)
 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__FPU_PRESENT) && (__FPU_PRESENT == 1U)) && \
 795:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__FPU_USED   ) && (__FPU_USED    == 1U))     )
 796:Drivers/CMSIS/Include/cmsis_gcc.h **** #if __has_builtin(__builtin_arm_set_fpscr)
 797:Drivers/CMSIS/Include/cmsis_gcc.h **** // Re-enable using built-in when GCC has been fixed
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** // || (__GNUC__ > 7) || (__GNUC__ == 7 && __GNUC_MINOR__ >= 2)
 799:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* see https://gcc.gnu.org/ml/gcc-patches/2017-04/msg00443.html */
 800:Drivers/CMSIS/Include/cmsis_gcc.h ****   __builtin_arm_set_fpscr(fpscr);
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc", "memory");
 803:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 804:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   (void)fpscr;
 806:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 809:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 814:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 817:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 818:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 820:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 826:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 827:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 828:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 829:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 830:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 112


 832:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 834:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 835:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 838:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 842:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi")
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 845:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 846:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 849:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 850:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe")
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 853:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 857:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 860:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 861:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 864:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 865:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 869:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 870:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 871:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 872:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 873:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 874:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 876:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 877:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 878:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 879:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 883:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 888:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
ARM GAS  /tmp/ccCZwBwi.s 			page 113


 889:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 890:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 892:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 896:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 897:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 898:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 899:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 900:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 901:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 902:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 904:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 906:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 907:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 908:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 909:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 911:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 912:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 914:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 915:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 916:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 919:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 920:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 922:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 924:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 926:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 930:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 931:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 932:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 937:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 939:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 940:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 945:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 114


 946:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 947:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 949:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 950:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 952:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 953:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 960:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 961:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 962:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 963:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 964:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 965:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 966:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 967:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 968:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 969:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 970:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 971:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 972:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 973:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 974:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 975:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 976:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 977:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 978:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 979:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 980:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 981:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 2477              		.loc 2 981 31 view .LVU807
 2478              	.LBB5:
 982:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 983:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 2479              		.loc 2 983 3 view .LVU808
 984:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 985:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 986:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 987:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 988:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 2480              		.loc 2 988 4 view .LVU809
 2481              		.syntax unified
 2482              	@ 988 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 2483 0010 91FAA1F1 		rbit r1, r1
 2484              	@ 0 "" 2
 2485              	.LVL155:
 989:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 990:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 991:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 992:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 993:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
ARM GAS  /tmp/ccCZwBwi.s 			page 115


 994:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 995:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 996:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 997:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 998:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 999:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
1000:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
1001:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 2486              		.loc 2 1001 3 view .LVU810
 2487              		.loc 2 1001 3 is_stmt 0 view .LVU811
 2488              		.thumb
 2489              		.syntax unified
 2490              	.LBE5:
 2491              	.LBE4:
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2492              		.loc 1 1467 21 view .LVU812
 2493 0014 B1FA81F1 		clz	r1, r1
 2494              	.LVL156:
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2495              		.loc 1 1470 5 is_stmt 1 view .LVU813
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2496              		.loc 1 1470 22 is_stmt 0 view .LVU814
 2497 0018 0368     		ldr	r3, [r0]
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2498              		.loc 1 1470 61 view .LVU815
 2499 001a 1831     		adds	r1, r1, #24
 2500              	.LVL157:
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2501              		.loc 1 1470 61 view .LVU816
 2502 001c 03EB0113 		add	r3, r3, r1, lsl #4
 2503 0020 5868     		ldr	r0, [r3, #4]
 2504              	.LVL158:
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2505              		.loc 1 1470 85 view .LVU817
 2506 0022 000C     		lsrs	r0, r0, #16
 2507              	.LVL159:
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2508              		.loc 1 1470 85 view .LVU818
 2509 0024 7047     		bx	lr
 2510              		.cfi_endproc
 2511              	.LFE81:
 2513              		.section	.text.HAL_CAN_GetRxMessage,"ax",%progbits
 2514              		.align	1
 2515              		.global	HAL_CAN_GetRxMessage
 2516              		.syntax unified
 2517              		.thumb
 2518              		.thumb_func
 2520              	HAL_CAN_GetRxMessage:
 2521              	.LVL160:
 2522              	.LFB82:
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2523              		.loc 1 1489 1 is_stmt 1 view -0
 2524              		.cfi_startproc
 2525              		@ args = 0, pretend = 0, frame = 0
 2526              		@ frame_needed = 0, uses_anonymous_args = 0
 2527              		@ link register save eliminated.
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 116


 2528              		.loc 1 1490 3 view .LVU820
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2529              		.loc 1 1490 24 is_stmt 0 view .LVU821
 2530 0000 90F820C0 		ldrb	ip, [r0, #32]	@ zero_extendqisi2
 2531              	.LVL161:
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2532              		.loc 1 1492 3 is_stmt 1 view .LVU822
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2533              		.loc 1 1494 3 view .LVU823
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2534              		.loc 1 1494 38 is_stmt 0 view .LVU824
 2535 0004 0CF1FF3C 		add	ip, ip, #-1
 2536              	.LVL162:
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2537              		.loc 1 1494 38 view .LVU825
 2538 0008 5FFA8CFC 		uxtb	ip, ip
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2539              		.loc 1 1494 6 view .LVU826
 2540 000c BCF1010F 		cmp	ip, #1
 2541 0010 00F29B80 		bhi	.L208
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2542              		.loc 1 1489 1 view .LVU827
 2543 0014 10B4     		push	{r4}
 2544              		.cfi_def_cfa_offset 4
 2545              		.cfi_offset 4, -4
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2546              		.loc 1 1498 5 is_stmt 1 view .LVU828
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2547              		.loc 1 1498 8 is_stmt 0 view .LVU829
 2548 0016 51B9     		cbnz	r1, .L209
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2549              		.loc 1 1501 7 is_stmt 1 view .LVU830
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2550              		.loc 1 1501 16 is_stmt 0 view .LVU831
 2551 0018 0468     		ldr	r4, [r0]
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2552              		.loc 1 1501 26 view .LVU832
 2553 001a E468     		ldr	r4, [r4, #12]
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2554              		.loc 1 1501 10 view .LVU833
 2555 001c 14F0030F 		tst	r4, #3
 2556 0020 10D1     		bne	.L210
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2557              		.loc 1 1504 9 is_stmt 1 view .LVU834
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2558              		.loc 1 1504 25 is_stmt 0 view .LVU835
 2559 0022 436A     		ldr	r3, [r0, #36]
 2560              	.LVL163:
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2561              		.loc 1 1504 25 view .LVU836
 2562 0024 43F40013 		orr	r3, r3, #2097152
 2563 0028 4362     		str	r3, [r0, #36]
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2564              		.loc 1 1506 9 is_stmt 1 view .LVU837
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2565              		.loc 1 1506 16 is_stmt 0 view .LVU838
 2566 002a 0120     		movs	r0, #1
ARM GAS  /tmp/ccCZwBwi.s 			page 117


 2567              	.LVL164:
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2568              		.loc 1 1506 16 view .LVU839
 2569 002c 7BE0     		b	.L211
 2570              	.LVL165:
 2571              	.L209:
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2572              		.loc 1 1512 7 is_stmt 1 view .LVU840
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2573              		.loc 1 1512 16 is_stmt 0 view .LVU841
 2574 002e 0468     		ldr	r4, [r0]
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2575              		.loc 1 1512 26 view .LVU842
 2576 0030 2469     		ldr	r4, [r4, #16]
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 2577              		.loc 1 1512 10 view .LVU843
 2578 0032 14F0030F 		tst	r4, #3
 2579 0036 05D1     		bne	.L210
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2580              		.loc 1 1515 9 is_stmt 1 view .LVU844
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2581              		.loc 1 1515 25 is_stmt 0 view .LVU845
 2582 0038 436A     		ldr	r3, [r0, #36]
 2583              	.LVL166:
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2584              		.loc 1 1515 25 view .LVU846
 2585 003a 43F40013 		orr	r3, r3, #2097152
 2586 003e 4362     		str	r3, [r0, #36]
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2587              		.loc 1 1517 9 is_stmt 1 view .LVU847
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2588              		.loc 1 1517 16 is_stmt 0 view .LVU848
 2589 0040 0120     		movs	r0, #1
 2590              	.LVL167:
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 2591              		.loc 1 1517 16 view .LVU849
 2592 0042 70E0     		b	.L211
 2593              	.LVL168:
 2594              	.L210:
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 2595              		.loc 1 1522 5 is_stmt 1 view .LVU850
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 2596              		.loc 1 1522 71 is_stmt 0 view .LVU851
 2597 0044 01F11B04 		add	r4, r1, #27
 2598 0048 2401     		lsls	r4, r4, #4
 2599 004a D0F800C0 		ldr	ip, [r0]
 2600 004e 5CF80440 		ldr	r4, [ip, r4]
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 2601              		.loc 1 1522 33 view .LVU852
 2602 0052 04F00404 		and	r4, r4, #4
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if (pHeader->IDE == CAN_ID_STD)
 2603              		.loc 1 1522 18 view .LVU853
 2604 0056 9460     		str	r4, [r2, #8]
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2605              		.loc 1 1523 5 is_stmt 1 view .LVU854
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2606              		.loc 1 1523 8 is_stmt 0 view .LVU855
ARM GAS  /tmp/ccCZwBwi.s 			page 118


 2607 0058 002C     		cmp	r4, #0
 2608 005a 66D1     		bne	.L212
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2609              		.loc 1 1525 7 is_stmt 1 view .LVU856
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2610              		.loc 1 1525 77 is_stmt 0 view .LVU857
 2611 005c 01F11B04 		add	r4, r1, #27
 2612 0060 2401     		lsls	r4, r4, #4
 2613 0062 D0F800C0 		ldr	ip, [r0]
 2614 0066 5CF80440 		ldr	r4, [ip, r4]
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2615              		.loc 1 1525 83 view .LVU858
 2616 006a 640D     		lsrs	r4, r4, #21
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2617              		.loc 1 1525 22 view .LVU859
 2618 006c 1460     		str	r4, [r2]
 2619              	.L213:
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos
 2620              		.loc 1 1531 5 is_stmt 1 view .LVU860
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos
 2621              		.loc 1 1531 40 is_stmt 0 view .LVU861
 2622 006e 0468     		ldr	r4, [r0]
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos
 2623              		.loc 1 1531 72 view .LVU862
 2624 0070 01F11B0C 		add	ip, r1, #27
 2625 0074 4FEA0C1C 		lsl	ip, ip, #4
 2626 0078 54F80C40 		ldr	r4, [r4, ip]
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos
 2627              		.loc 1 1531 34 view .LVU863
 2628 007c 04F00204 		and	r4, r4, #2
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->DLC = (CAN_RDT0R_DLC & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_DLC_Pos
 2629              		.loc 1 1531 18 view .LVU864
 2630 0080 D460     		str	r4, [r2, #12]
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 2631              		.loc 1 1532 5 is_stmt 1 view .LVU865
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 2632              		.loc 1 1532 41 is_stmt 0 view .LVU866
 2633 0082 0468     		ldr	r4, [r0]
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 2634              		.loc 1 1532 73 view .LVU867
 2635 0084 6444     		add	r4, r4, ip
 2636 0086 6468     		ldr	r4, [r4, #4]
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 2637              		.loc 1 1532 80 view .LVU868
 2638 0088 04F00F04 		and	r4, r4, #15
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->FilterMatchIndex = (CAN_RDT0R_FMI & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_
 2639              		.loc 1 1532 18 view .LVU869
 2640 008c 1461     		str	r4, [r2, #16]
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 2641              		.loc 1 1533 5 is_stmt 1 view .LVU870
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 2642              		.loc 1 1533 54 is_stmt 0 view .LVU871
 2643 008e 0468     		ldr	r4, [r0]
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 2644              		.loc 1 1533 86 view .LVU872
 2645 0090 6444     		add	r4, r4, ip
 2646 0092 6468     		ldr	r4, [r4, #4]
ARM GAS  /tmp/ccCZwBwi.s 			page 119


1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 2647              		.loc 1 1533 93 view .LVU873
 2648 0094 C4F30724 		ubfx	r4, r4, #8, #8
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     pHeader->Timestamp = (CAN_RDT0R_TIME & hcan->Instance->sFIFOMailBox[RxFifo].RDTR) >> CAN_RDT0R_
 2649              		.loc 1 1533 31 view .LVU874
 2650 0098 9461     		str	r4, [r2, #24]
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2651              		.loc 1 1534 5 is_stmt 1 view .LVU875
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2652              		.loc 1 1534 48 is_stmt 0 view .LVU876
 2653 009a 0468     		ldr	r4, [r0]
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2654              		.loc 1 1534 80 view .LVU877
 2655 009c 6444     		add	r4, r4, ip
 2656 009e 6468     		ldr	r4, [r4, #4]
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2657              		.loc 1 1534 87 view .LVU878
 2658 00a0 240C     		lsrs	r4, r4, #16
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2659              		.loc 1 1534 24 view .LVU879
 2660 00a2 5461     		str	r4, [r2, #20]
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2661              		.loc 1 1537 5 is_stmt 1 view .LVU880
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2662              		.loc 1 1537 49 is_stmt 0 view .LVU881
 2663 00a4 0268     		ldr	r2, [r0]
 2664              	.LVL169:
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2665              		.loc 1 1537 81 view .LVU882
 2666 00a6 02EB0112 		add	r2, r2, r1, lsl #4
 2667 00aa D2F8B821 		ldr	r2, [r2, #440]
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[1] = (uint8_t)((CAN_RDL0R_DATA1 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2668              		.loc 1 1537 14 view .LVU883
 2669 00ae 1A70     		strb	r2, [r3]
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2670              		.loc 1 1538 5 is_stmt 1 view .LVU884
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2671              		.loc 1 1538 49 is_stmt 0 view .LVU885
 2672 00b0 0268     		ldr	r2, [r0]
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2673              		.loc 1 1538 81 view .LVU886
 2674 00b2 02EB0112 		add	r2, r2, r1, lsl #4
 2675 00b6 D2F8B821 		ldr	r2, [r2, #440]
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2676              		.loc 1 1538 16 view .LVU887
 2677 00ba C2F30722 		ubfx	r2, r2, #8, #8
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[2] = (uint8_t)((CAN_RDL0R_DATA2 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2678              		.loc 1 1538 14 view .LVU888
 2679 00be 5A70     		strb	r2, [r3, #1]
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2680              		.loc 1 1539 5 is_stmt 1 view .LVU889
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2681              		.loc 1 1539 49 is_stmt 0 view .LVU890
 2682 00c0 0268     		ldr	r2, [r0]
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2683              		.loc 1 1539 81 view .LVU891
 2684 00c2 02EB0112 		add	r2, r2, r1, lsl #4
ARM GAS  /tmp/ccCZwBwi.s 			page 120


 2685 00c6 D2F8B821 		ldr	r2, [r2, #440]
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2686              		.loc 1 1539 16 view .LVU892
 2687 00ca C2F30742 		ubfx	r2, r2, #16, #8
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[3] = (uint8_t)((CAN_RDL0R_DATA3 & hcan->Instance->sFIFOMailBox[RxFifo].RDLR) >> CAN_RDL0R
 2688              		.loc 1 1539 14 view .LVU893
 2689 00ce 9A70     		strb	r2, [r3, #2]
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2690              		.loc 1 1540 5 is_stmt 1 view .LVU894
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2691              		.loc 1 1540 49 is_stmt 0 view .LVU895
 2692 00d0 0268     		ldr	r2, [r0]
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2693              		.loc 1 1540 81 view .LVU896
 2694 00d2 02EB0112 		add	r2, r2, r1, lsl #4
 2695 00d6 D2F8B821 		ldr	r2, [r2, #440]
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2696              		.loc 1 1540 16 view .LVU897
 2697 00da 120E     		lsrs	r2, r2, #24
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[4] = (uint8_t)((CAN_RDH0R_DATA4 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2698              		.loc 1 1540 14 view .LVU898
 2699 00dc DA70     		strb	r2, [r3, #3]
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2700              		.loc 1 1541 5 is_stmt 1 view .LVU899
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2701              		.loc 1 1541 49 is_stmt 0 view .LVU900
 2702 00de 0268     		ldr	r2, [r0]
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2703              		.loc 1 1541 81 view .LVU901
 2704 00e0 02EB0112 		add	r2, r2, r1, lsl #4
 2705 00e4 D2F8BC21 		ldr	r2, [r2, #444]
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[5] = (uint8_t)((CAN_RDH0R_DATA5 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2706              		.loc 1 1541 14 view .LVU902
 2707 00e8 1A71     		strb	r2, [r3, #4]
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2708              		.loc 1 1542 5 is_stmt 1 view .LVU903
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2709              		.loc 1 1542 49 is_stmt 0 view .LVU904
 2710 00ea 0268     		ldr	r2, [r0]
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2711              		.loc 1 1542 81 view .LVU905
 2712 00ec 02EB0112 		add	r2, r2, r1, lsl #4
 2713 00f0 D2F8BC21 		ldr	r2, [r2, #444]
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2714              		.loc 1 1542 16 view .LVU906
 2715 00f4 C2F30722 		ubfx	r2, r2, #8, #8
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[6] = (uint8_t)((CAN_RDH0R_DATA6 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2716              		.loc 1 1542 14 view .LVU907
 2717 00f8 5A71     		strb	r2, [r3, #5]
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2718              		.loc 1 1543 5 is_stmt 1 view .LVU908
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2719              		.loc 1 1543 49 is_stmt 0 view .LVU909
 2720 00fa 0268     		ldr	r2, [r0]
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2721              		.loc 1 1543 81 view .LVU910
 2722 00fc 02EB0112 		add	r2, r2, r1, lsl #4
ARM GAS  /tmp/ccCZwBwi.s 			page 121


 2723 0100 D2F8BC21 		ldr	r2, [r2, #444]
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2724              		.loc 1 1543 16 view .LVU911
 2725 0104 C2F30742 		ubfx	r2, r2, #16, #8
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     aData[7] = (uint8_t)((CAN_RDH0R_DATA7 & hcan->Instance->sFIFOMailBox[RxFifo].RDHR) >> CAN_RDH0R
 2726              		.loc 1 1543 14 view .LVU912
 2727 0108 9A71     		strb	r2, [r3, #6]
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2728              		.loc 1 1544 5 is_stmt 1 view .LVU913
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2729              		.loc 1 1544 49 is_stmt 0 view .LVU914
 2730 010a 0268     		ldr	r2, [r0]
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2731              		.loc 1 1544 81 view .LVU915
 2732 010c 02EB0112 		add	r2, r2, r1, lsl #4
 2733 0110 D2F8BC21 		ldr	r2, [r2, #444]
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2734              		.loc 1 1544 16 view .LVU916
 2735 0114 120E     		lsrs	r2, r2, #24
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2736              		.loc 1 1544 14 view .LVU917
 2737 0116 DA71     		strb	r2, [r3, #7]
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2738              		.loc 1 1547 5 is_stmt 1 view .LVU918
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2739              		.loc 1 1547 8 is_stmt 0 view .LVU919
 2740 0118 89B9     		cbnz	r1, .L214
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2741              		.loc 1 1550 7 is_stmt 1 view .LVU920
 2742 011a 0268     		ldr	r2, [r0]
 2743 011c D368     		ldr	r3, [r2, #12]
 2744              	.LVL170:
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2745              		.loc 1 1550 7 is_stmt 0 view .LVU921
 2746 011e 43F02003 		orr	r3, r3, #32
 2747 0122 D360     		str	r3, [r2, #12]
 2748              	.L215:
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2749              		.loc 1 1559 5 is_stmt 1 view .LVU922
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2750              		.loc 1 1559 12 is_stmt 0 view .LVU923
 2751 0124 0020     		movs	r0, #0
 2752              	.LVL171:
 2753              	.L211:
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2754              		.loc 1 1568 1 view .LVU924
 2755 0126 10BC     		pop	{r4}
 2756              		.cfi_remember_state
 2757              		.cfi_restore 4
 2758              		.cfi_def_cfa_offset 0
 2759 0128 7047     		bx	lr
 2760              	.LVL172:
 2761              	.L212:
 2762              		.cfi_restore_state
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2763              		.loc 1 1529 7 is_stmt 1 view .LVU925
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
ARM GAS  /tmp/ccCZwBwi.s 			page 122


 2764              		.loc 1 1529 95 is_stmt 0 view .LVU926
 2765 012a 01F11B04 		add	r4, r1, #27
 2766 012e 2401     		lsls	r4, r4, #4
 2767 0130 D0F800C0 		ldr	ip, [r0]
 2768 0134 5CF80440 		ldr	r4, [ip, r4]
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2769              		.loc 1 1529 101 view .LVU927
 2770 0138 E408     		lsrs	r4, r4, #3
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2771              		.loc 1 1529 22 view .LVU928
 2772 013a 5460     		str	r4, [r2, #4]
 2773 013c 97E7     		b	.L213
 2774              	.LVL173:
 2775              	.L214:
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2776              		.loc 1 1555 7 is_stmt 1 view .LVU929
 2777 013e 0268     		ldr	r2, [r0]
 2778 0140 1369     		ldr	r3, [r2, #16]
 2779              	.LVL174:
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2780              		.loc 1 1555 7 is_stmt 0 view .LVU930
 2781 0142 43F02003 		orr	r3, r3, #32
 2782 0146 1361     		str	r3, [r2, #16]
 2783 0148 ECE7     		b	.L215
 2784              	.LVL175:
 2785              	.L208:
 2786              		.cfi_def_cfa_offset 0
 2787              		.cfi_restore 4
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2788              		.loc 1 1564 5 is_stmt 1 view .LVU931
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2789              		.loc 1 1564 21 is_stmt 0 view .LVU932
 2790 014a 436A     		ldr	r3, [r0, #36]
 2791              	.LVL176:
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2792              		.loc 1 1564 21 view .LVU933
 2793 014c 43F48023 		orr	r3, r3, #262144
 2794 0150 4362     		str	r3, [r0, #36]
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2795              		.loc 1 1566 5 is_stmt 1 view .LVU934
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2796              		.loc 1 1566 12 is_stmt 0 view .LVU935
 2797 0152 0120     		movs	r0, #1
 2798              	.LVL177:
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2799              		.loc 1 1568 1 view .LVU936
 2800 0154 7047     		bx	lr
 2801              		.cfi_endproc
 2802              	.LFE82:
 2804              		.section	.text.HAL_CAN_GetRxFifoFillLevel,"ax",%progbits
 2805              		.align	1
 2806              		.global	HAL_CAN_GetRxFifoFillLevel
 2807              		.syntax unified
 2808              		.thumb
 2809              		.thumb_func
 2811              	HAL_CAN_GetRxFifoFillLevel:
 2812              	.LVL178:
ARM GAS  /tmp/ccCZwBwi.s 			page 123


 2813              	.LFB83:
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t filllevel = 0U;
 2814              		.loc 1 1579 1 is_stmt 1 view -0
 2815              		.cfi_startproc
 2816              		@ args = 0, pretend = 0, frame = 0
 2817              		@ frame_needed = 0, uses_anonymous_args = 0
 2818              		@ link register save eliminated.
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2819              		.loc 1 1580 3 view .LVU938
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2820              		.loc 1 1581 3 view .LVU939
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2821              		.loc 1 1581 24 is_stmt 0 view .LVU940
 2822 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2823              	.LVL179:
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2824              		.loc 1 1584 3 is_stmt 1 view .LVU941
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2825              		.loc 1 1586 3 view .LVU942
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2826              		.loc 1 1586 38 is_stmt 0 view .LVU943
 2827 0004 013B     		subs	r3, r3, #1
 2828              	.LVL180:
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2829              		.loc 1 1586 38 view .LVU944
 2830 0006 DBB2     		uxtb	r3, r3
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2831              		.loc 1 1586 6 view .LVU945
 2832 0008 012B     		cmp	r3, #1
 2833 000a 01D9     		bls	.L224
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2834              		.loc 1 1580 12 view .LVU946
 2835 000c 0020     		movs	r0, #0
 2836              	.LVL181:
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 2837              		.loc 1 1600 3 is_stmt 1 view .LVU947
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2838              		.loc 1 1601 1 is_stmt 0 view .LVU948
 2839 000e 7047     		bx	lr
 2840              	.LVL182:
 2841              	.L224:
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2842              		.loc 1 1589 5 is_stmt 1 view .LVU949
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 2843              		.loc 1 1589 8 is_stmt 0 view .LVU950
 2844 0010 21B9     		cbnz	r1, .L222
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2845              		.loc 1 1591 7 is_stmt 1 view .LVU951
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2846              		.loc 1 1591 23 is_stmt 0 view .LVU952
 2847 0012 0368     		ldr	r3, [r0]
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2848              		.loc 1 1591 33 view .LVU953
 2849 0014 D868     		ldr	r0, [r3, #12]
 2850              	.LVL183:
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2851              		.loc 1 1591 17 view .LVU954
ARM GAS  /tmp/ccCZwBwi.s 			page 124


 2852 0016 00F00300 		and	r0, r0, #3
 2853              	.LVL184:
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2854              		.loc 1 1591 17 view .LVU955
 2855 001a 7047     		bx	lr
 2856              	.LVL185:
 2857              	.L222:
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2858              		.loc 1 1595 7 is_stmt 1 view .LVU956
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2859              		.loc 1 1595 23 is_stmt 0 view .LVU957
 2860 001c 0368     		ldr	r3, [r0]
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2861              		.loc 1 1595 33 view .LVU958
 2862 001e 1869     		ldr	r0, [r3, #16]
 2863              	.LVL186:
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2864              		.loc 1 1595 17 view .LVU959
 2865 0020 00F00300 		and	r0, r0, #3
 2866              	.LVL187:
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 2867              		.loc 1 1595 17 view .LVU960
 2868 0024 7047     		bx	lr
 2869              		.cfi_endproc
 2870              	.LFE83:
 2872              		.section	.text.HAL_CAN_ActivateNotification,"ax",%progbits
 2873              		.align	1
 2874              		.global	HAL_CAN_ActivateNotification
 2875              		.syntax unified
 2876              		.thumb
 2877              		.thumb_func
 2879              	HAL_CAN_ActivateNotification:
 2880              	.LVL188:
 2881              	.LFB84:
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2882              		.loc 1 1632 1 is_stmt 1 view -0
 2883              		.cfi_startproc
 2884              		@ args = 0, pretend = 0, frame = 0
 2885              		@ frame_needed = 0, uses_anonymous_args = 0
 2886              		@ link register save eliminated.
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2887              		.loc 1 1633 3 view .LVU962
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2888              		.loc 1 1633 24 is_stmt 0 view .LVU963
 2889 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2890              	.LVL189:
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2891              		.loc 1 1636 3 is_stmt 1 view .LVU964
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2892              		.loc 1 1638 3 view .LVU965
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2893              		.loc 1 1638 38 is_stmt 0 view .LVU966
 2894 0004 013B     		subs	r3, r3, #1
 2895              	.LVL190:
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2896              		.loc 1 1638 38 view .LVU967
 2897 0006 DBB2     		uxtb	r3, r3
ARM GAS  /tmp/ccCZwBwi.s 			page 125


1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2898              		.loc 1 1638 6 view .LVU968
 2899 0008 012B     		cmp	r3, #1
 2900 000a 05D9     		bls	.L228
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2901              		.loc 1 1650 5 is_stmt 1 view .LVU969
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2902              		.loc 1 1650 21 is_stmt 0 view .LVU970
 2903 000c 436A     		ldr	r3, [r0, #36]
 2904 000e 43F48023 		orr	r3, r3, #262144
 2905 0012 4362     		str	r3, [r0, #36]
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2906              		.loc 1 1652 5 is_stmt 1 view .LVU971
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2907              		.loc 1 1652 12 is_stmt 0 view .LVU972
 2908 0014 0120     		movs	r0, #1
 2909              	.LVL191:
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2910              		.loc 1 1654 1 view .LVU973
 2911 0016 7047     		bx	lr
 2912              	.LVL192:
 2913              	.L228:
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2914              		.loc 1 1642 5 is_stmt 1 view .LVU974
 2915 0018 0268     		ldr	r2, [r0]
 2916 001a 5369     		ldr	r3, [r2, #20]
 2917 001c 0B43     		orrs	r3, r3, r1
 2918 001e 5361     		str	r3, [r2, #20]
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2919              		.loc 1 1645 5 view .LVU975
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2920              		.loc 1 1645 12 is_stmt 0 view .LVU976
 2921 0020 0020     		movs	r0, #0
 2922              	.LVL193:
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2923              		.loc 1 1645 12 view .LVU977
 2924 0022 7047     		bx	lr
 2925              		.cfi_endproc
 2926              	.LFE84:
 2928              		.section	.text.HAL_CAN_DeactivateNotification,"ax",%progbits
 2929              		.align	1
 2930              		.global	HAL_CAN_DeactivateNotification
 2931              		.syntax unified
 2932              		.thumb
 2933              		.thumb_func
 2935              	HAL_CAN_DeactivateNotification:
 2936              	.LVL194:
 2937              	.LFB85:
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 2938              		.loc 1 1665 1 is_stmt 1 view -0
 2939              		.cfi_startproc
 2940              		@ args = 0, pretend = 0, frame = 0
 2941              		@ frame_needed = 0, uses_anonymous_args = 0
 2942              		@ link register save eliminated.
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2943              		.loc 1 1666 3 view .LVU979
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
ARM GAS  /tmp/ccCZwBwi.s 			page 126


 2944              		.loc 1 1666 24 is_stmt 0 view .LVU980
 2945 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 2946              	.LVL195:
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2947              		.loc 1 1669 3 is_stmt 1 view .LVU981
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2948              		.loc 1 1671 3 view .LVU982
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2949              		.loc 1 1671 38 is_stmt 0 view .LVU983
 2950 0004 013B     		subs	r3, r3, #1
 2951              	.LVL196:
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2952              		.loc 1 1671 38 view .LVU984
 2953 0006 DBB2     		uxtb	r3, r3
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
 2954              		.loc 1 1671 6 view .LVU985
 2955 0008 012B     		cmp	r3, #1
 2956 000a 05D9     		bls	.L232
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2957              		.loc 1 1683 5 is_stmt 1 view .LVU986
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2958              		.loc 1 1683 21 is_stmt 0 view .LVU987
 2959 000c 436A     		ldr	r3, [r0, #36]
 2960 000e 43F48023 		orr	r3, r3, #262144
 2961 0012 4362     		str	r3, [r0, #36]
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2962              		.loc 1 1685 5 is_stmt 1 view .LVU988
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2963              		.loc 1 1685 12 is_stmt 0 view .LVU989
 2964 0014 0120     		movs	r0, #1
 2965              	.LVL197:
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2966              		.loc 1 1687 1 view .LVU990
 2967 0016 7047     		bx	lr
 2968              	.LVL198:
 2969              	.L232:
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 2970              		.loc 1 1675 5 is_stmt 1 view .LVU991
 2971 0018 0268     		ldr	r2, [r0]
 2972 001a 5369     		ldr	r3, [r2, #20]
 2973 001c 23EA0103 		bic	r3, r3, r1
 2974 0020 5361     		str	r3, [r2, #20]
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2975              		.loc 1 1678 5 view .LVU992
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2976              		.loc 1 1678 12 is_stmt 0 view .LVU993
 2977 0022 0020     		movs	r0, #0
 2978              	.LVL199:
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 2979              		.loc 1 1678 12 view .LVU994
 2980 0024 7047     		bx	lr
 2981              		.cfi_endproc
 2982              	.LFE85:
 2984              		.section	.text.HAL_CAN_IRQHandler,"ax",%progbits
 2985              		.align	1
 2986              		.global	HAL_CAN_IRQHandler
 2987              		.syntax unified
ARM GAS  /tmp/ccCZwBwi.s 			page 127


 2988              		.thumb
 2989              		.thumb_func
 2991              	HAL_CAN_IRQHandler:
 2992              	.LVL200:
 2993              	.LFB86:
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2994              		.loc 1 1696 1 is_stmt 1 view -0
 2995              		.cfi_startproc
 2996              		@ args = 0, pretend = 0, frame = 0
 2997              		@ frame_needed = 0, uses_anonymous_args = 0
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t errorcode = HAL_CAN_ERROR_NONE;
 2998              		.loc 1 1696 1 is_stmt 0 view .LVU996
 2999 0000 2DE9F84F 		push	{r3, r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3000              		.cfi_def_cfa_offset 40
 3001              		.cfi_offset 3, -40
 3002              		.cfi_offset 4, -36
 3003              		.cfi_offset 5, -32
 3004              		.cfi_offset 6, -28
 3005              		.cfi_offset 7, -24
 3006              		.cfi_offset 8, -20
 3007              		.cfi_offset 9, -16
 3008              		.cfi_offset 10, -12
 3009              		.cfi_offset 11, -8
 3010              		.cfi_offset 14, -4
 3011 0004 0446     		mov	r4, r0
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 3012              		.loc 1 1697 3 is_stmt 1 view .LVU997
 3013              	.LVL201:
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 3014              		.loc 1 1698 3 view .LVU998
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 3015              		.loc 1 1698 25 is_stmt 0 view .LVU999
 3016 0006 0368     		ldr	r3, [r0]
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t msrflags = READ_REG(hcan->Instance->MSR);
 3017              		.loc 1 1698 12 view .LVU1000
 3018 0008 5D69     		ldr	r5, [r3, #20]
 3019              	.LVL202:
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 3020              		.loc 1 1699 3 is_stmt 1 view .LVU1001
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t tsrflags = READ_REG(hcan->Instance->TSR);
 3021              		.loc 1 1699 12 is_stmt 0 view .LVU1002
 3022 000a D3F80480 		ldr	r8, [r3, #4]
 3023              	.LVL203:
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 3024              		.loc 1 1700 3 is_stmt 1 view .LVU1003
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t rf0rflags = READ_REG(hcan->Instance->RF0R);
 3025              		.loc 1 1700 12 is_stmt 0 view .LVU1004
 3026 000e 9F68     		ldr	r7, [r3, #8]
 3027              	.LVL204:
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 3028              		.loc 1 1701 3 is_stmt 1 view .LVU1005
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t rf1rflags = READ_REG(hcan->Instance->RF1R);
 3029              		.loc 1 1701 12 is_stmt 0 view .LVU1006
 3030 0010 D3F80CB0 		ldr	fp, [r3, #12]
 3031              	.LVL205:
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 3032              		.loc 1 1702 3 is_stmt 1 view .LVU1007
ARM GAS  /tmp/ccCZwBwi.s 			page 128


1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t esrflags = READ_REG(hcan->Instance->ESR);
 3033              		.loc 1 1702 12 is_stmt 0 view .LVU1008
 3034 0014 D3F810A0 		ldr	r10, [r3, #16]
 3035              	.LVL206:
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3036              		.loc 1 1703 3 is_stmt 1 view .LVU1009
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3037              		.loc 1 1703 12 is_stmt 0 view .LVU1010
 3038 0018 D3F81890 		ldr	r9, [r3, #24]
 3039              	.LVL207:
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3040              		.loc 1 1706 3 is_stmt 1 view .LVU1011
1706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3041              		.loc 1 1706 6 is_stmt 0 view .LVU1012
 3042 001c 15F00106 		ands	r6, r5, #1
 3043 0020 27D0     		beq	.L234
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3044              		.loc 1 1709 5 is_stmt 1 view .LVU1013
1709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3045              		.loc 1 1709 8 is_stmt 0 view .LVU1014
 3046 0022 17F00106 		ands	r6, r7, #1
 3047 0026 08D0     		beq	.L235
1712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3048              		.loc 1 1712 7 is_stmt 1 view .LVU1015
 3049 0028 0122     		movs	r2, #1
 3050 002a 9A60     		str	r2, [r3, #8]
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 3051              		.loc 1 1714 7 view .LVU1016
1714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 3052              		.loc 1 1714 10 is_stmt 0 view .LVU1017
 3053 002c 17F0020F 		tst	r7, #2
 3054 0030 00F0AC80 		beq	.L236
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3055              		.loc 1 1719 9 is_stmt 1 view .LVU1018
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3056              		.loc 1 1719 13 is_stmt 0 view .LVU1019
 3057 0034 836A     		ldr	r3, [r0, #40]
1719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3058              		.loc 1 1719 9 view .LVU1020
 3059 0036 9847     		blx	r3
 3060              	.LVL208:
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   uint32_t interrupts = READ_REG(hcan->Instance->IER);
 3061              		.loc 1 1697 12 view .LVU1021
 3062 0038 0026     		movs	r6, #0
 3063              	.L235:
 3064              	.LVL209:
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3065              		.loc 1 1752 5 is_stmt 1 view .LVU1022
1752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3066              		.loc 1 1752 8 is_stmt 0 view .LVU1023
 3067 003a 17F4807F 		tst	r7, #256
 3068 003e 0AD0     		beq	.L237
1755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3069              		.loc 1 1755 7 is_stmt 1 view .LVU1024
 3070 0040 2368     		ldr	r3, [r4]
 3071 0042 4FF48072 		mov	r2, #256
 3072 0046 9A60     		str	r2, [r3, #8]
ARM GAS  /tmp/ccCZwBwi.s 			page 129


1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 3073              		.loc 1 1757 7 view .LVU1025
1757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 3074              		.loc 1 1757 10 is_stmt 0 view .LVU1026
 3075 0048 17F4007F 		tst	r7, #512
 3076 004c 00F0AD80 		beq	.L238
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3077              		.loc 1 1762 9 is_stmt 1 view .LVU1027
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3078              		.loc 1 1762 13 is_stmt 0 view .LVU1028
 3079 0050 E36A     		ldr	r3, [r4, #44]
1762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3080              		.loc 1 1762 9 view .LVU1029
 3081 0052 2046     		mov	r0, r4
 3082 0054 9847     		blx	r3
 3083              	.LVL210:
 3084              	.L237:
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3085              		.loc 1 1795 5 is_stmt 1 view .LVU1030
1795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3086              		.loc 1 1795 8 is_stmt 0 view .LVU1031
 3087 0056 17F4803F 		tst	r7, #65536
 3088 005a 0AD0     		beq	.L234
1798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3089              		.loc 1 1798 7 is_stmt 1 view .LVU1032
 3090 005c 2368     		ldr	r3, [r4]
 3091 005e 4FF48032 		mov	r2, #65536
 3092 0062 9A60     		str	r2, [r3, #8]
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 3093              		.loc 1 1800 7 view .LVU1033
1800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       {
 3094              		.loc 1 1800 10 is_stmt 0 view .LVU1034
 3095 0064 17F4003F 		tst	r7, #131072
 3096 0068 00F0AF80 		beq	.L241
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3097              		.loc 1 1805 9 is_stmt 1 view .LVU1035
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3098              		.loc 1 1805 13 is_stmt 0 view .LVU1036
 3099 006c 236B     		ldr	r3, [r4, #48]
1805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3100              		.loc 1 1805 9 view .LVU1037
 3101 006e 2046     		mov	r0, r4
 3102 0070 9847     		blx	r3
 3103              	.LVL211:
 3104              	.L234:
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3105              		.loc 1 1839 3 is_stmt 1 view .LVU1038
1839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3106              		.loc 1 1839 6 is_stmt 0 view .LVU1039
 3107 0072 15F0080F 		tst	r5, #8
 3108 0076 07D0     		beq	.L244
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3109              		.loc 1 1841 5 is_stmt 1 view .LVU1040
1841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3110              		.loc 1 1841 8 is_stmt 0 view .LVU1041
 3111 0078 1BF0100F 		tst	fp, #16
 3112 007c 04D0     		beq	.L244
ARM GAS  /tmp/ccCZwBwi.s 			page 130


1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3113              		.loc 1 1844 7 is_stmt 1 view .LVU1042
1844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3114              		.loc 1 1844 17 is_stmt 0 view .LVU1043
 3115 007e 46F40076 		orr	r6, r6, #512
 3116              	.LVL212:
1847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3117              		.loc 1 1847 7 is_stmt 1 view .LVU1044
 3118 0082 2368     		ldr	r3, [r4]
 3119 0084 1022     		movs	r2, #16
 3120 0086 DA60     		str	r2, [r3, #12]
 3121              	.L244:
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3122              		.loc 1 1852 3 view .LVU1045
1852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3123              		.loc 1 1852 6 is_stmt 0 view .LVU1046
 3124 0088 15F0040F 		tst	r5, #4
 3125 008c 08D0     		beq	.L245
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3126              		.loc 1 1854 5 is_stmt 1 view .LVU1047
1854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3127              		.loc 1 1854 8 is_stmt 0 view .LVU1048
 3128 008e 1BF0080F 		tst	fp, #8
 3129 0092 05D0     		beq	.L245
1857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3130              		.loc 1 1857 7 is_stmt 1 view .LVU1049
 3131 0094 2368     		ldr	r3, [r4]
 3132 0096 0822     		movs	r2, #8
 3133 0098 DA60     		str	r2, [r3, #12]
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3134              		.loc 1 1862 7 view .LVU1050
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3135              		.loc 1 1862 11 is_stmt 0 view .LVU1051
 3136 009a 636C     		ldr	r3, [r4, #68]
1862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3137              		.loc 1 1862 7 view .LVU1052
 3138 009c 2046     		mov	r0, r4
 3139 009e 9847     		blx	r3
 3140              	.LVL213:
 3141              	.L245:
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3142              		.loc 1 1871 3 is_stmt 1 view .LVU1053
1871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3143              		.loc 1 1871 6 is_stmt 0 view .LVU1054
 3144 00a0 15F0020F 		tst	r5, #2
 3145 00a4 07D0     		beq	.L246
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3146              		.loc 1 1874 5 is_stmt 1 view .LVU1055
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3147              		.loc 1 1874 14 is_stmt 0 view .LVU1056
 3148 00a6 2368     		ldr	r3, [r4]
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3149              		.loc 1 1874 24 view .LVU1057
 3150 00a8 DB68     		ldr	r3, [r3, #12]
1874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3151              		.loc 1 1874 8 view .LVU1058
 3152 00aa 13F0030F 		tst	r3, #3
ARM GAS  /tmp/ccCZwBwi.s 			page 131


 3153 00ae 02D0     		beq	.L246
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3154              		.loc 1 1879 7 is_stmt 1 view .LVU1059
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3155              		.loc 1 1879 11 is_stmt 0 view .LVU1060
 3156 00b0 236C     		ldr	r3, [r4, #64]
1879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3157              		.loc 1 1879 7 view .LVU1061
 3158 00b2 2046     		mov	r0, r4
 3159 00b4 9847     		blx	r3
 3160              	.LVL214:
 3161              	.L246:
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3162              		.loc 1 1888 3 is_stmt 1 view .LVU1062
1888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3163              		.loc 1 1888 6 is_stmt 0 view .LVU1063
 3164 00b6 15F0400F 		tst	r5, #64
 3165 00ba 07D0     		beq	.L247
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3166              		.loc 1 1890 5 is_stmt 1 view .LVU1064
1890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3167              		.loc 1 1890 8 is_stmt 0 view .LVU1065
 3168 00bc 1AF0100F 		tst	r10, #16
 3169 00c0 04D0     		beq	.L247
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3170              		.loc 1 1893 7 is_stmt 1 view .LVU1066
1893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3171              		.loc 1 1893 17 is_stmt 0 view .LVU1067
 3172 00c2 46F48066 		orr	r6, r6, #1024
 3173              	.LVL215:
1896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3174              		.loc 1 1896 7 is_stmt 1 view .LVU1068
 3175 00c6 2368     		ldr	r3, [r4]
 3176 00c8 1022     		movs	r2, #16
 3177 00ca 1A61     		str	r2, [r3, #16]
 3178              	.L247:
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3179              		.loc 1 1901 3 view .LVU1069
1901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3180              		.loc 1 1901 6 is_stmt 0 view .LVU1070
 3181 00cc 15F0200F 		tst	r5, #32
 3182 00d0 08D0     		beq	.L248
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3183              		.loc 1 1903 5 is_stmt 1 view .LVU1071
1903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3184              		.loc 1 1903 8 is_stmt 0 view .LVU1072
 3185 00d2 1AF0080F 		tst	r10, #8
 3186 00d6 05D0     		beq	.L248
1906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3187              		.loc 1 1906 7 is_stmt 1 view .LVU1073
 3188 00d8 2368     		ldr	r3, [r4]
 3189 00da 0822     		movs	r2, #8
 3190 00dc 1A61     		str	r2, [r3, #16]
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3191              		.loc 1 1911 7 view .LVU1074
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3192              		.loc 1 1911 11 is_stmt 0 view .LVU1075
ARM GAS  /tmp/ccCZwBwi.s 			page 132


 3193 00de E36C     		ldr	r3, [r4, #76]
1911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3194              		.loc 1 1911 7 view .LVU1076
 3195 00e0 2046     		mov	r0, r4
 3196 00e2 9847     		blx	r3
 3197              	.LVL216:
 3198              	.L248:
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3199              		.loc 1 1920 3 is_stmt 1 view .LVU1077
1920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3200              		.loc 1 1920 6 is_stmt 0 view .LVU1078
 3201 00e4 15F0100F 		tst	r5, #16
 3202 00e8 07D0     		beq	.L249
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3203              		.loc 1 1923 5 is_stmt 1 view .LVU1079
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3204              		.loc 1 1923 14 is_stmt 0 view .LVU1080
 3205 00ea 2368     		ldr	r3, [r4]
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3206              		.loc 1 1923 24 view .LVU1081
 3207 00ec 1B69     		ldr	r3, [r3, #16]
1923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3208              		.loc 1 1923 8 view .LVU1082
 3209 00ee 13F0030F 		tst	r3, #3
 3210 00f2 02D0     		beq	.L249
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3211              		.loc 1 1928 7 is_stmt 1 view .LVU1083
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3212              		.loc 1 1928 11 is_stmt 0 view .LVU1084
 3213 00f4 A36C     		ldr	r3, [r4, #72]
1928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3214              		.loc 1 1928 7 view .LVU1085
 3215 00f6 2046     		mov	r0, r4
 3216 00f8 9847     		blx	r3
 3217              	.LVL217:
 3218              	.L249:
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3219              		.loc 1 1937 3 is_stmt 1 view .LVU1086
1937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3220              		.loc 1 1937 6 is_stmt 0 view .LVU1087
 3221 00fa 15F4003F 		tst	r5, #131072
 3222 00fe 08D0     		beq	.L250
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3223              		.loc 1 1939 5 is_stmt 1 view .LVU1088
1939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3224              		.loc 1 1939 8 is_stmt 0 view .LVU1089
 3225 0100 18F0100F 		tst	r8, #16
 3226 0104 05D0     		beq	.L250
1942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3227              		.loc 1 1942 7 is_stmt 1 view .LVU1090
 3228 0106 2368     		ldr	r3, [r4]
 3229 0108 1022     		movs	r2, #16
 3230 010a 5A60     		str	r2, [r3, #4]
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3231              		.loc 1 1947 7 view .LVU1091
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3232              		.loc 1 1947 11 is_stmt 0 view .LVU1092
ARM GAS  /tmp/ccCZwBwi.s 			page 133


 3233 010c 236D     		ldr	r3, [r4, #80]
1947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3234              		.loc 1 1947 7 view .LVU1093
 3235 010e 2046     		mov	r0, r4
 3236 0110 9847     		blx	r3
 3237              	.LVL218:
 3238              	.L250:
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3239              		.loc 1 1956 3 is_stmt 1 view .LVU1094
1956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3240              		.loc 1 1956 6 is_stmt 0 view .LVU1095
 3241 0112 15F4803F 		tst	r5, #65536
 3242 0116 08D0     		beq	.L251
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3243              		.loc 1 1958 5 is_stmt 1 view .LVU1096
1958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3244              		.loc 1 1958 8 is_stmt 0 view .LVU1097
 3245 0118 18F0080F 		tst	r8, #8
 3246 011c 05D0     		beq	.L251
1961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3247              		.loc 1 1961 7 is_stmt 1 view .LVU1098
 3248 011e 2368     		ldr	r3, [r4]
 3249 0120 0822     		movs	r2, #8
 3250 0122 5A60     		str	r2, [r3, #4]
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3251              		.loc 1 1966 7 view .LVU1099
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3252              		.loc 1 1966 11 is_stmt 0 view .LVU1100
 3253 0124 636D     		ldr	r3, [r4, #84]
1966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3254              		.loc 1 1966 7 view .LVU1101
 3255 0126 2046     		mov	r0, r4
 3256 0128 9847     		blx	r3
 3257              	.LVL219:
 3258              	.L251:
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3259              		.loc 1 1975 3 is_stmt 1 view .LVU1102
1975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3260              		.loc 1 1975 6 is_stmt 0 view .LVU1103
 3261 012a 15F4004F 		tst	r5, #32768
 3262 012e 69D0     		beq	.L252
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3263              		.loc 1 1977 5 is_stmt 1 view .LVU1104
1977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3264              		.loc 1 1977 8 is_stmt 0 view .LVU1105
 3265 0130 18F0040F 		tst	r8, #4
 3266 0134 63D0     		beq	.L253
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 3267              		.loc 1 1980 7 is_stmt 1 view .LVU1106
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 3268              		.loc 1 1980 10 is_stmt 0 view .LVU1107
 3269 0136 15F4807F 		tst	r5, #256
 3270 013a 04D0     		beq	.L254
1980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EWGF) != 0U))
 3271              		.loc 1 1980 55 discriminator 1 view .LVU1108
 3272 013c 19F0010F 		tst	r9, #1
 3273 0140 01D0     		beq	.L254
ARM GAS  /tmp/ccCZwBwi.s 			page 134


1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3274              		.loc 1 1984 9 is_stmt 1 view .LVU1109
1984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3275              		.loc 1 1984 19 is_stmt 0 view .LVU1110
 3276 0142 46F00106 		orr	r6, r6, #1
 3277              	.LVL220:
 3278              	.L254:
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 3279              		.loc 1 1990 7 is_stmt 1 view .LVU1111
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 3280              		.loc 1 1990 10 is_stmt 0 view .LVU1112
 3281 0146 15F4007F 		tst	r5, #512
 3282 014a 04D0     		beq	.L255
1990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_EPVF) != 0U))
 3283              		.loc 1 1990 55 discriminator 1 view .LVU1113
 3284 014c 19F0020F 		tst	r9, #2
 3285 0150 01D0     		beq	.L255
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3286              		.loc 1 1994 9 is_stmt 1 view .LVU1114
1994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3287              		.loc 1 1994 19 is_stmt 0 view .LVU1115
 3288 0152 46F00206 		orr	r6, r6, #2
 3289              	.LVL221:
 3290              	.L255:
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 3291              		.loc 1 2000 7 is_stmt 1 view .LVU1116
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 3292              		.loc 1 2000 10 is_stmt 0 view .LVU1117
 3293 0156 15F4806F 		tst	r5, #1024
 3294 015a 04D0     		beq	.L256
2000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_BOFF) != 0U))
 3295              		.loc 1 2000 48 discriminator 1 view .LVU1118
 3296 015c 19F0040F 		tst	r9, #4
 3297 0160 01D0     		beq	.L256
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3298              		.loc 1 2004 9 is_stmt 1 view .LVU1119
2004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3299              		.loc 1 2004 19 is_stmt 0 view .LVU1120
 3300 0162 46F00406 		orr	r6, r6, #4
 3301              	.LVL222:
 3302              	.L256:
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 3303              		.loc 1 2010 7 is_stmt 1 view .LVU1121
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 3304              		.loc 1 2010 10 is_stmt 0 view .LVU1122
 3305 0166 15F4006F 		tst	r5, #2048
 3306 016a 48D0     		beq	.L253
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 3307              		.loc 1 2010 57 discriminator 1 view .LVU1123
 3308 016c 19F07009 		ands	r9, r9, #112
 3309              	.LVL223:
2010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           ((esrflags & CAN_ESR_LEC) != 0U))
 3310              		.loc 1 2010 57 discriminator 1 view .LVU1124
 3311 0170 45D0     		beq	.L253
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3312              		.loc 1 2013 9 is_stmt 1 view .LVU1125
 3313 0172 B9F1400F 		cmp	r9, #64
ARM GAS  /tmp/ccCZwBwi.s 			page 135


 3314 0176 5AD0     		beq	.L257
 3315 0178 4DD8     		bhi	.L258
 3316 017a B9F1200F 		cmp	r9, #32
 3317 017e 53D0     		beq	.L259
 3318 0180 B9F1300F 		cmp	r9, #48
 3319 0184 31D1     		bne	.L269
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3320              		.loc 1 2025 13 view .LVU1126
2025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3321              		.loc 1 2025 23 is_stmt 0 view .LVU1127
 3322 0186 46F02006 		orr	r6, r6, #32
 3323              	.LVL224:
2026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_2):
 3324              		.loc 1 2026 13 is_stmt 1 view .LVU1128
 3325 018a 33E0     		b	.L262
 3326              	.LVL225:
 3327              	.L236:
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3328              		.loc 1 1727 9 view .LVU1129
1727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3329              		.loc 1 1727 12 is_stmt 0 view .LVU1130
 3330 018c 17F0040F 		tst	r7, #4
 3331 0190 05D1     		bne	.L266
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3332              		.loc 1 1732 14 is_stmt 1 view .LVU1131
1732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3333              		.loc 1 1732 17 is_stmt 0 view .LVU1132
 3334 0192 17F00806 		ands	r6, r7, #8
 3335 0196 05D1     		bne	.L267
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3336              		.loc 1 1742 11 is_stmt 1 view .LVU1133
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3337              		.loc 1 1742 15 is_stmt 0 view .LVU1134
 3338 0198 436B     		ldr	r3, [r0, #52]
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3339              		.loc 1 1742 11 view .LVU1135
 3340 019a 9847     		blx	r3
 3341              	.LVL226:
1742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3342              		.loc 1 1742 11 view .LVU1136
 3343 019c 4DE7     		b	.L235
 3344              	.LVL227:
 3345              	.L266:
1730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3346              		.loc 1 1730 21 view .LVU1137
 3347 019e 4FF40066 		mov	r6, #2048
 3348 01a2 4AE7     		b	.L235
 3349              	.L267:
1735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3350              		.loc 1 1735 21 view .LVU1138
 3351 01a4 4FF48056 		mov	r6, #4096
 3352 01a8 47E7     		b	.L235
 3353              	.LVL228:
 3354              	.L238:
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3355              		.loc 1 1770 9 is_stmt 1 view .LVU1139
1770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
ARM GAS  /tmp/ccCZwBwi.s 			page 136


 3356              		.loc 1 1770 12 is_stmt 0 view .LVU1140
 3357 01aa 17F4806F 		tst	r7, #1024
 3358 01ae 02D0     		beq	.L239
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3359              		.loc 1 1773 11 is_stmt 1 view .LVU1141
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3360              		.loc 1 1773 21 is_stmt 0 view .LVU1142
 3361 01b0 46F40056 		orr	r6, r6, #8192
 3362              	.LVL229:
1773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3363              		.loc 1 1773 21 view .LVU1143
 3364 01b4 4FE7     		b	.L237
 3365              	.L239:
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3366              		.loc 1 1775 14 is_stmt 1 view .LVU1144
1775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3367              		.loc 1 1775 17 is_stmt 0 view .LVU1145
 3368 01b6 17F4006F 		tst	r7, #2048
 3369 01ba 02D0     		beq	.L240
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3370              		.loc 1 1778 11 is_stmt 1 view .LVU1146
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3371              		.loc 1 1778 21 is_stmt 0 view .LVU1147
 3372 01bc 46F48046 		orr	r6, r6, #16384
 3373              	.LVL230:
1778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3374              		.loc 1 1778 21 view .LVU1148
 3375 01c0 49E7     		b	.L237
 3376              	.L240:
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3377              		.loc 1 1785 11 is_stmt 1 view .LVU1149
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3378              		.loc 1 1785 15 is_stmt 0 view .LVU1150
 3379 01c2 A36B     		ldr	r3, [r4, #56]
1785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3380              		.loc 1 1785 11 view .LVU1151
 3381 01c4 2046     		mov	r0, r4
 3382 01c6 9847     		blx	r3
 3383              	.LVL231:
 3384 01c8 45E7     		b	.L237
 3385              	.L241:
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3386              		.loc 1 1813 9 is_stmt 1 view .LVU1152
1813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3387              		.loc 1 1813 12 is_stmt 0 view .LVU1153
 3388 01ca 17F4802F 		tst	r7, #262144
 3389 01ce 02D0     		beq	.L242
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3390              		.loc 1 1816 11 is_stmt 1 view .LVU1154
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3391              		.loc 1 1816 21 is_stmt 0 view .LVU1155
 3392 01d0 46F40046 		orr	r6, r6, #32768
 3393              	.LVL232:
1816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3394              		.loc 1 1816 21 view .LVU1156
 3395 01d4 4DE7     		b	.L234
 3396              	.L242:
ARM GAS  /tmp/ccCZwBwi.s 			page 137


1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3397              		.loc 1 1818 14 is_stmt 1 view .LVU1157
1818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3398              		.loc 1 1818 17 is_stmt 0 view .LVU1158
 3399 01d6 17F4002F 		tst	r7, #524288
 3400 01da 02D0     		beq	.L243
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3401              		.loc 1 1821 11 is_stmt 1 view .LVU1159
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3402              		.loc 1 1821 21 is_stmt 0 view .LVU1160
 3403 01dc 46F48036 		orr	r6, r6, #65536
 3404              	.LVL233:
1821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         }
 3405              		.loc 1 1821 21 view .LVU1161
 3406 01e0 47E7     		b	.L234
 3407              	.L243:
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3408              		.loc 1 1828 11 is_stmt 1 view .LVU1162
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3409              		.loc 1 1828 15 is_stmt 0 view .LVU1163
 3410 01e2 E36B     		ldr	r3, [r4, #60]
1828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3411              		.loc 1 1828 11 view .LVU1164
 3412 01e4 2046     		mov	r0, r4
 3413 01e6 9847     		blx	r3
 3414              	.LVL234:
 3415 01e8 43E7     		b	.L234
 3416              	.LVL235:
 3417              	.L269:
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3418              		.loc 1 2013 9 view .LVU1165
 3419 01ea B9F1100F 		cmp	r9, #16
 3420 01ee 01D1     		bne	.L262
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3421              		.loc 1 2017 13 is_stmt 1 view .LVU1166
2017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3422              		.loc 1 2017 23 is_stmt 0 view .LVU1167
 3423 01f0 46F00806 		orr	r6, r6, #8
 3424              	.LVL236:
2018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_1):
 3425              		.loc 1 2018 13 is_stmt 1 view .LVU1168
 3426              	.L262:
2044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       }
 3427              		.loc 1 2044 9 view .LVU1169
 3428 01f4 2268     		ldr	r2, [r4]
 3429 01f6 9369     		ldr	r3, [r2, #24]
 3430 01f8 23F07003 		bic	r3, r3, #112
 3431 01fc 9361     		str	r3, [r2, #24]
 3432              	.L253:
2049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 3433              		.loc 1 2049 5 view .LVU1170
 3434 01fe 2368     		ldr	r3, [r4]
 3435 0200 0422     		movs	r2, #4
 3436 0202 5A60     		str	r2, [r3, #4]
 3437              	.L252:
2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3438              		.loc 1 2053 3 view .LVU1171
ARM GAS  /tmp/ccCZwBwi.s 			page 138


2053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
 3439              		.loc 1 2053 6 is_stmt 0 view .LVU1172
 3440 0204 2EB1     		cbz	r6, .L233
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3441              		.loc 1 2056 5 is_stmt 1 view .LVU1173
2056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3442              		.loc 1 2056 21 is_stmt 0 view .LVU1174
 3443 0206 636A     		ldr	r3, [r4, #36]
 3444 0208 3343     		orrs	r3, r3, r6
 3445 020a 6362     		str	r3, [r4, #36]
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3446              		.loc 1 2061 5 is_stmt 1 view .LVU1175
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3447              		.loc 1 2061 9 is_stmt 0 view .LVU1176
 3448 020c A36D     		ldr	r3, [r4, #88]
2061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** #else
 3449              		.loc 1 2061 5 view .LVU1177
 3450 020e 2046     		mov	r0, r4
 3451 0210 9847     		blx	r3
 3452              	.LVL237:
 3453              	.L233:
2067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
 3454              		.loc 1 2067 1 view .LVU1178
 3455 0212 BDE8F88F 		pop	{r3, r4, r5, r6, r7, r8, r9, r10, fp, pc}
 3456              	.LVL238:
 3457              	.L258:
2013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****         {
 3458              		.loc 1 2013 9 view .LVU1179
 3459 0216 B9F1500F 		cmp	r9, #80
 3460 021a 0BD0     		beq	.L263
 3461 021c B9F1600F 		cmp	r9, #96
 3462 0220 E8D1     		bne	.L262
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3463              		.loc 1 2037 13 is_stmt 1 view .LVU1180
2037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3464              		.loc 1 2037 23 is_stmt 0 view .LVU1181
 3465 0222 46F48076 		orr	r6, r6, #256
 3466              	.LVL239:
2038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           default:
 3467              		.loc 1 2038 13 is_stmt 1 view .LVU1182
 3468 0226 E5E7     		b	.L262
 3469              	.L259:
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3470              		.loc 1 2021 13 view .LVU1183
2021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3471              		.loc 1 2021 23 is_stmt 0 view .LVU1184
 3472 0228 46F01006 		orr	r6, r6, #16
 3473              	.LVL240:
2022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_1 | CAN_ESR_LEC_0):
 3474              		.loc 1 2022 13 is_stmt 1 view .LVU1185
 3475 022c E2E7     		b	.L262
 3476              	.L257:
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3477              		.loc 1 2029 13 view .LVU1186
2029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3478              		.loc 1 2029 23 is_stmt 0 view .LVU1187
 3479 022e 46F04006 		orr	r6, r6, #64
ARM GAS  /tmp/ccCZwBwi.s 			page 139


 3480              	.LVL241:
2030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_0):
 3481              		.loc 1 2030 13 is_stmt 1 view .LVU1188
 3482 0232 DFE7     		b	.L262
 3483              	.L263:
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3484              		.loc 1 2033 13 view .LVU1189
2033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             break;
 3485              		.loc 1 2033 23 is_stmt 0 view .LVU1190
 3486 0234 46F08006 		orr	r6, r6, #128
 3487              	.LVL242:
2034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****           case (CAN_ESR_LEC_2 | CAN_ESR_LEC_1):
 3488              		.loc 1 2034 13 is_stmt 1 view .LVU1191
 3489 0238 DCE7     		b	.L262
 3490              		.cfi_endproc
 3491              	.LFE86:
 3493              		.section	.text.HAL_CAN_GetState,"ax",%progbits
 3494              		.align	1
 3495              		.global	HAL_CAN_GetState
 3496              		.syntax unified
 3497              		.thumb
 3498              		.thumb_func
 3500              	HAL_CAN_GetState:
 3501              	.LVL243:
 3502              	.LFB100:
2318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @}
2321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /** @defgroup CAN_Exported_Functions_Group6 Peripheral State and Error functions
2324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *  @brief   CAN Peripheral State functions
2325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****  *
2326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @verbatim
2327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
2328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****             ##### Peripheral State and Error functions #####
2329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   ==============================================================================
2330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     [..]
2331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     This subsection provides functions allowing to :
2332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_GetState()  : Return the CAN state.
2333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_GetError()  : Return the CAN error codes if any.
2334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (+) HAL_CAN_ResetError(): Reset the CAN error codes if any.
2335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** @endverbatim
2337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @{
2338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Return the CAN state.
2342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL state
2345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_CAN_StateTypeDef HAL_CAN_GetState(CAN_HandleTypeDef *hcan)
2347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 3503              		.loc 1 2347 1 view -0
 3504              		.cfi_startproc
ARM GAS  /tmp/ccCZwBwi.s 			page 140


 3505              		@ args = 0, pretend = 0, frame = 0
 3506              		@ frame_needed = 0, uses_anonymous_args = 0
 3507              		@ link register save eliminated.
 3508              		.loc 1 2347 1 is_stmt 0 view .LVU1193
 3509 0000 0246     		mov	r2, r0
2348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3510              		.loc 1 2348 3 is_stmt 1 view .LVU1194
 3511              		.loc 1 2348 24 is_stmt 0 view .LVU1195
 3512 0002 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 3513 0006 D8B2     		uxtb	r0, r3
 3514              	.LVL244:
2349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 3515              		.loc 1 2350 3 is_stmt 1 view .LVU1196
 3516              		.loc 1 2350 38 is_stmt 0 view .LVU1197
 3517 0008 013B     		subs	r3, r3, #1
 3518 000a DBB2     		uxtb	r3, r3
 3519              		.loc 1 2350 6 view .LVU1198
 3520 000c 012B     		cmp	r3, #1
 3521 000e 00D9     		bls	.L274
 3522              	.LVL245:
 3523              	.L271:
2351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
2353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check sleep mode acknowledge flag */
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     if ((hcan->Instance->MSR & CAN_MSR_SLAK) != 0U)
2355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
2356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Sleep mode is active */
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_ACTIVE;
2358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
2359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Check sleep mode request flag */
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else if ((hcan->Instance->MCR & CAN_MCR_SLEEP) != 0U)
2361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
2362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Sleep mode request is pending */
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       state = HAL_CAN_STATE_SLEEP_PENDING;
2364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
2365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     else
2366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
2367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       /* Neither sleep mode request nor sleep mode acknowledge */
2368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3524              		.loc 1 2368 5 is_stmt 1 view .LVU1199
2369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
2370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return CAN state */
2372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return state;
 3525              		.loc 1 2372 3 view .LVU1200
2373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 3526              		.loc 1 2373 1 is_stmt 0 view .LVU1201
 3527 0010 7047     		bx	lr
 3528              	.LVL246:
 3529              	.L274:
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3530              		.loc 1 2354 5 is_stmt 1 view .LVU1202
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3531              		.loc 1 2354 14 is_stmt 0 view .LVU1203
 3532 0012 1368     		ldr	r3, [r2]
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
ARM GAS  /tmp/ccCZwBwi.s 			page 141


 3533              		.loc 1 2354 24 view .LVU1204
 3534 0014 5A68     		ldr	r2, [r3, #4]
 3535              	.LVL247:
2354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3536              		.loc 1 2354 8 view .LVU1205
 3537 0016 12F0020F 		tst	r2, #2
 3538 001a 05D1     		bne	.L272
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3539              		.loc 1 2360 10 is_stmt 1 view .LVU1206
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3540              		.loc 1 2360 29 is_stmt 0 view .LVU1207
 3541 001c 1B68     		ldr	r3, [r3]
2360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     {
 3542              		.loc 1 2360 13 view .LVU1208
 3543 001e 13F0020F 		tst	r3, #2
 3544 0022 F5D0     		beq	.L271
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3545              		.loc 1 2363 13 view .LVU1209
 3546 0024 0320     		movs	r0, #3
 3547              	.LVL248:
2363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3548              		.loc 1 2363 13 view .LVU1210
 3549 0026 F3E7     		b	.L271
 3550              	.LVL249:
 3551              	.L272:
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3552              		.loc 1 2357 13 view .LVU1211
 3553 0028 0420     		movs	r0, #4
 3554              	.LVL250:
2357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     }
 3555              		.loc 1 2357 13 view .LVU1212
 3556 002a 7047     		bx	lr
 3557              		.cfi_endproc
 3558              	.LFE100:
 3560              		.section	.text.HAL_CAN_GetError,"ax",%progbits
 3561              		.align	1
 3562              		.global	HAL_CAN_GetError
 3563              		.syntax unified
 3564              		.thumb
 3565              		.thumb_func
 3567              	HAL_CAN_GetError:
 3568              	.LVL251:
 3569              	.LFB101:
2374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Return the CAN error code.
2377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval CAN Error Code
2380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** uint32_t HAL_CAN_GetError(CAN_HandleTypeDef *hcan)
2382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 3570              		.loc 1 2382 1 is_stmt 1 view -0
 3571              		.cfi_startproc
 3572              		@ args = 0, pretend = 0, frame = 0
 3573              		@ frame_needed = 0, uses_anonymous_args = 0
 3574              		@ link register save eliminated.
ARM GAS  /tmp/ccCZwBwi.s 			page 142


2383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return CAN error code */
2384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return hcan->ErrorCode;
 3575              		.loc 1 2384 3 view .LVU1214
 3576              		.loc 1 2384 14 is_stmt 0 view .LVU1215
 3577 0000 406A     		ldr	r0, [r0, #36]
 3578              	.LVL252:
2385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 3579              		.loc 1 2385 1 view .LVU1216
 3580 0002 7047     		bx	lr
 3581              		.cfi_endproc
 3582              	.LFE101:
 3584              		.section	.text.HAL_CAN_ResetError,"ax",%progbits
 3585              		.align	1
 3586              		.global	HAL_CAN_ResetError
 3587              		.syntax unified
 3588              		.thumb
 3589              		.thumb_func
 3591              	HAL_CAN_ResetError:
 3592              	.LVL253:
 3593              	.LFB102:
2386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** /**
2388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @brief  Reset the CAN error code.
2389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @param  hcan pointer to a CAN_HandleTypeDef structure that contains
2390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   *         the configuration information for the specified CAN.
2391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   * @retval HAL status
2392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   */
2393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** HAL_StatusTypeDef HAL_CAN_ResetError(CAN_HandleTypeDef *hcan)
2394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** {
 3594              		.loc 1 2394 1 is_stmt 1 view -0
 3595              		.cfi_startproc
 3596              		@ args = 0, pretend = 0, frame = 0
 3597              		@ frame_needed = 0, uses_anonymous_args = 0
 3598              		@ link register save eliminated.
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_StatusTypeDef status = HAL_OK;
 3599              		.loc 1 2395 3 view .LVU1218
2396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3600              		.loc 1 2396 3 view .LVU1219
 3601              		.loc 1 2396 24 is_stmt 0 view .LVU1220
 3602 0000 90F82030 		ldrb	r3, [r0, #32]	@ zero_extendqisi2
 3603              	.LVL254:
2397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   if ((state == HAL_CAN_STATE_READY) ||
 3604              		.loc 1 2398 3 is_stmt 1 view .LVU1221
 3605              		.loc 1 2398 38 is_stmt 0 view .LVU1222
 3606 0004 013B     		subs	r3, r3, #1
 3607              	.LVL255:
 3608              		.loc 1 2398 38 view .LVU1223
 3609 0006 DBB2     		uxtb	r3, r3
 3610              		.loc 1 2398 6 view .LVU1224
 3611 0008 012B     		cmp	r3, #1
 3612 000a 05D9     		bls	.L279
2399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****       (state == HAL_CAN_STATE_LISTENING))
2400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
2401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Reset CAN error code */
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode = 0U;
2403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
ARM GAS  /tmp/ccCZwBwi.s 			page 143


2404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   else
2405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   {
2406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     /* Update error code */
2407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     hcan->ErrorCode |= HAL_CAN_ERROR_NOT_INITIALIZED;
 3613              		.loc 1 2407 5 is_stmt 1 view .LVU1225
 3614              		.loc 1 2407 21 is_stmt 0 view .LVU1226
 3615 000c 436A     		ldr	r3, [r0, #36]
 3616 000e 43F48023 		orr	r3, r3, #262144
 3617 0012 4362     		str	r3, [r0, #36]
2408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****     status = HAL_ERROR;
 3618              		.loc 1 2409 5 is_stmt 1 view .LVU1227
 3619              	.LVL256:
 3620              		.loc 1 2409 12 is_stmt 0 view .LVU1228
 3621 0014 0120     		movs	r0, #1
 3622              	.LVL257:
2410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
2411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** 
2412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   /* Return the status */
2413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   return status;
 3623              		.loc 1 2413 3 is_stmt 1 view .LVU1229
2414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c **** }
 3624              		.loc 1 2414 1 is_stmt 0 view .LVU1230
 3625 0016 7047     		bx	lr
 3626              	.LVL258:
 3627              	.L279:
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 3628              		.loc 1 2402 5 is_stmt 1 view .LVU1231
2402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   }
 3629              		.loc 1 2402 21 is_stmt 0 view .LVU1232
 3630 0018 0023     		movs	r3, #0
 3631 001a 4362     		str	r3, [r0, #36]
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3632              		.loc 1 2395 21 view .LVU1233
 3633 001c 1846     		mov	r0, r3
 3634              	.LVL259:
2395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_can.c ****   HAL_CAN_StateTypeDef state = hcan->State;
 3635              		.loc 1 2395 21 view .LVU1234
 3636 001e 7047     		bx	lr
 3637              		.cfi_endproc
 3638              	.LFE102:
 3640              		.text
 3641              	.Letext0:
 3642              		.file 3 "/home/jack/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 3643              		.file 4 "/home/jack/.config/Code - OSS/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/ar
 3644              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 3645              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 3646              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 3647              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_can.h"
 3648              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /tmp/ccCZwBwi.s 			page 144


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_can.c
     /tmp/ccCZwBwi.s:18     .text.HAL_CAN_MspInit:0000000000000000 $t
     /tmp/ccCZwBwi.s:24     .text.HAL_CAN_MspInit:0000000000000000 HAL_CAN_MspInit
     /tmp/ccCZwBwi.s:40     .text.HAL_CAN_MspDeInit:0000000000000000 $t
     /tmp/ccCZwBwi.s:46     .text.HAL_CAN_MspDeInit:0000000000000000 HAL_CAN_MspDeInit
     /tmp/ccCZwBwi.s:61     .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:67     .text.HAL_CAN_TxMailbox0CompleteCallback:0000000000000000 HAL_CAN_TxMailbox0CompleteCallback
     /tmp/ccCZwBwi.s:82     .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:88     .text.HAL_CAN_TxMailbox1CompleteCallback:0000000000000000 HAL_CAN_TxMailbox1CompleteCallback
     /tmp/ccCZwBwi.s:103    .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:109    .text.HAL_CAN_TxMailbox2CompleteCallback:0000000000000000 HAL_CAN_TxMailbox2CompleteCallback
     /tmp/ccCZwBwi.s:124    .text.HAL_CAN_TxMailbox0AbortCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:130    .text.HAL_CAN_TxMailbox0AbortCallback:0000000000000000 HAL_CAN_TxMailbox0AbortCallback
     /tmp/ccCZwBwi.s:145    .text.HAL_CAN_TxMailbox1AbortCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:151    .text.HAL_CAN_TxMailbox1AbortCallback:0000000000000000 HAL_CAN_TxMailbox1AbortCallback
     /tmp/ccCZwBwi.s:166    .text.HAL_CAN_TxMailbox2AbortCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:172    .text.HAL_CAN_TxMailbox2AbortCallback:0000000000000000 HAL_CAN_TxMailbox2AbortCallback
     /tmp/ccCZwBwi.s:187    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:193    .text.HAL_CAN_RxFifo0MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo0MsgPendingCallback
     /tmp/ccCZwBwi.s:208    .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:214    .text.HAL_CAN_RxFifo0FullCallback:0000000000000000 HAL_CAN_RxFifo0FullCallback
     /tmp/ccCZwBwi.s:229    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:235    .text.HAL_CAN_RxFifo1MsgPendingCallback:0000000000000000 HAL_CAN_RxFifo1MsgPendingCallback
     /tmp/ccCZwBwi.s:250    .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:256    .text.HAL_CAN_RxFifo1FullCallback:0000000000000000 HAL_CAN_RxFifo1FullCallback
     /tmp/ccCZwBwi.s:271    .text.HAL_CAN_SleepCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:277    .text.HAL_CAN_SleepCallback:0000000000000000 HAL_CAN_SleepCallback
     /tmp/ccCZwBwi.s:292    .text.HAL_CAN_WakeUpFromRxMsgCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:298    .text.HAL_CAN_WakeUpFromRxMsgCallback:0000000000000000 HAL_CAN_WakeUpFromRxMsgCallback
     /tmp/ccCZwBwi.s:313    .text.HAL_CAN_ErrorCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:319    .text.HAL_CAN_ErrorCallback:0000000000000000 HAL_CAN_ErrorCallback
     /tmp/ccCZwBwi.s:334    .text.HAL_CAN_Init:0000000000000000 $t
     /tmp/ccCZwBwi.s:340    .text.HAL_CAN_Init:0000000000000000 HAL_CAN_Init
     /tmp/ccCZwBwi.s:693    .text.HAL_CAN_Init:000000000000018c $d
     /tmp/ccCZwBwi.s:711    .text.HAL_CAN_RegisterCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:717    .text.HAL_CAN_RegisterCallback:0000000000000000 HAL_CAN_RegisterCallback
     /tmp/ccCZwBwi.s:798    .text.HAL_CAN_RegisterCallback:0000000000000046 $d
     /tmp/ccCZwBwi.s:995    .text.HAL_CAN_UnRegisterCallback:0000000000000000 $t
     /tmp/ccCZwBwi.s:1001   .text.HAL_CAN_UnRegisterCallback:0000000000000000 HAL_CAN_UnRegisterCallback
     /tmp/ccCZwBwi.s:1052   .text.HAL_CAN_UnRegisterCallback:0000000000000034 $d
     /tmp/ccCZwBwi.s:1260   .text.HAL_CAN_UnRegisterCallback:00000000000000e0 $d
     /tmp/ccCZwBwi.s:1279   .text.HAL_CAN_ConfigFilter:0000000000000000 $t
     /tmp/ccCZwBwi.s:1285   .text.HAL_CAN_ConfigFilter:0000000000000000 HAL_CAN_ConfigFilter
     /tmp/ccCZwBwi.s:1490   .text.HAL_CAN_Start:0000000000000000 $t
     /tmp/ccCZwBwi.s:1496   .text.HAL_CAN_Start:0000000000000000 HAL_CAN_Start
     /tmp/ccCZwBwi.s:1593   .text.HAL_CAN_Stop:0000000000000000 $t
     /tmp/ccCZwBwi.s:1599   .text.HAL_CAN_Stop:0000000000000000 HAL_CAN_Stop
     /tmp/ccCZwBwi.s:1697   .text.HAL_CAN_DeInit:0000000000000000 $t
     /tmp/ccCZwBwi.s:1703   .text.HAL_CAN_DeInit:0000000000000000 HAL_CAN_DeInit
     /tmp/ccCZwBwi.s:1772   .text.HAL_CAN_DeInit:0000000000000034 $d
     /tmp/ccCZwBwi.s:1777   .text.HAL_CAN_RequestSleep:0000000000000000 $t
     /tmp/ccCZwBwi.s:1783   .text.HAL_CAN_RequestSleep:0000000000000000 HAL_CAN_RequestSleep
     /tmp/ccCZwBwi.s:1832   .text.HAL_CAN_WakeUp:0000000000000000 $t
     /tmp/ccCZwBwi.s:1838   .text.HAL_CAN_WakeUp:0000000000000000 HAL_CAN_WakeUp
     /tmp/ccCZwBwi.s:1933   .text.HAL_CAN_WakeUp:0000000000000054 $d
     /tmp/ccCZwBwi.s:1938   .text.HAL_CAN_IsSleepActive:0000000000000000 $t
ARM GAS  /tmp/ccCZwBwi.s 			page 145


     /tmp/ccCZwBwi.s:1944   .text.HAL_CAN_IsSleepActive:0000000000000000 HAL_CAN_IsSleepActive
     /tmp/ccCZwBwi.s:1994   .text.HAL_CAN_AddTxMessage:0000000000000000 $t
     /tmp/ccCZwBwi.s:2000   .text.HAL_CAN_AddTxMessage:0000000000000000 HAL_CAN_AddTxMessage
     /tmp/ccCZwBwi.s:2214   .text.HAL_CAN_AbortTxRequest:0000000000000000 $t
     /tmp/ccCZwBwi.s:2220   .text.HAL_CAN_AbortTxRequest:0000000000000000 HAL_CAN_AbortTxRequest
     /tmp/ccCZwBwi.s:2295   .text.HAL_CAN_GetTxMailboxesFreeLevel:0000000000000000 $t
     /tmp/ccCZwBwi.s:2301   .text.HAL_CAN_GetTxMailboxesFreeLevel:0000000000000000 HAL_CAN_GetTxMailboxesFreeLevel
     /tmp/ccCZwBwi.s:2372   .text.HAL_CAN_IsTxMessagePending:0000000000000000 $t
     /tmp/ccCZwBwi.s:2378   .text.HAL_CAN_IsTxMessagePending:0000000000000000 HAL_CAN_IsTxMessagePending
     /tmp/ccCZwBwi.s:2435   .text.HAL_CAN_GetTxTimestamp:0000000000000000 $t
     /tmp/ccCZwBwi.s:2441   .text.HAL_CAN_GetTxTimestamp:0000000000000000 HAL_CAN_GetTxTimestamp
     /tmp/ccCZwBwi.s:2514   .text.HAL_CAN_GetRxMessage:0000000000000000 $t
     /tmp/ccCZwBwi.s:2520   .text.HAL_CAN_GetRxMessage:0000000000000000 HAL_CAN_GetRxMessage
     /tmp/ccCZwBwi.s:2805   .text.HAL_CAN_GetRxFifoFillLevel:0000000000000000 $t
     /tmp/ccCZwBwi.s:2811   .text.HAL_CAN_GetRxFifoFillLevel:0000000000000000 HAL_CAN_GetRxFifoFillLevel
     /tmp/ccCZwBwi.s:2873   .text.HAL_CAN_ActivateNotification:0000000000000000 $t
     /tmp/ccCZwBwi.s:2879   .text.HAL_CAN_ActivateNotification:0000000000000000 HAL_CAN_ActivateNotification
     /tmp/ccCZwBwi.s:2929   .text.HAL_CAN_DeactivateNotification:0000000000000000 $t
     /tmp/ccCZwBwi.s:2935   .text.HAL_CAN_DeactivateNotification:0000000000000000 HAL_CAN_DeactivateNotification
     /tmp/ccCZwBwi.s:2985   .text.HAL_CAN_IRQHandler:0000000000000000 $t
     /tmp/ccCZwBwi.s:2991   .text.HAL_CAN_IRQHandler:0000000000000000 HAL_CAN_IRQHandler
     /tmp/ccCZwBwi.s:3494   .text.HAL_CAN_GetState:0000000000000000 $t
     /tmp/ccCZwBwi.s:3500   .text.HAL_CAN_GetState:0000000000000000 HAL_CAN_GetState
     /tmp/ccCZwBwi.s:3561   .text.HAL_CAN_GetError:0000000000000000 $t
     /tmp/ccCZwBwi.s:3567   .text.HAL_CAN_GetError:0000000000000000 HAL_CAN_GetError
     /tmp/ccCZwBwi.s:3585   .text.HAL_CAN_ResetError:0000000000000000 $t
     /tmp/ccCZwBwi.s:3591   .text.HAL_CAN_ResetError:0000000000000000 HAL_CAN_ResetError
     /tmp/ccCZwBwi.s:813    .text.HAL_CAN_RegisterCallback:0000000000000055 $d
     /tmp/ccCZwBwi.s:813    .text.HAL_CAN_RegisterCallback:0000000000000056 $t
     /tmp/ccCZwBwi.s:1067   .text.HAL_CAN_UnRegisterCallback:0000000000000043 $d
     /tmp/ccCZwBwi.s:1067   .text.HAL_CAN_UnRegisterCallback:0000000000000044 $t

UNDEFINED SYMBOLS
HAL_GetTick
